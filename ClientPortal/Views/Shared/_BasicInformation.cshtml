@model Martex.DMS.DAL.Vehicle
@using ClientPortal.Areas.Application.Models;
@using Kendo.Mvc.UI
@{
    bool isHagerty = false;
    // Set the flag when the client is Hagerty and the current program is a Hagerty (or one of its children) program.
    if (!string.IsNullOrEmpty(DMSCallContext.ClientName) && DMSCallContext.ClientName.Equals("Hagerty", StringComparison.OrdinalIgnoreCase) && DMSCallContext.IsAHagertyProgram)
    {
        isHagerty = true;
    }
    bool someRequired = false;
    if (ViewBag.ShowCommercialVehicle != null && (bool)ViewBag.ShowCommercialVehicle)
    {
        someRequired = (bool)ViewBag.ShowCommercialVehicle;
    }
}
<script type="text/javascript">

    function BindModel(selectedModel) {
        // Fire an AJAX request to bind the Model dropdown.
        var vehicleModelCombo = $('#Model').data('kendoComboBox');
        var VehicleMake_value = $('#Make').data('kendoComboBox').value();
        var VehicleYear_value = $('#Year').data('kendoComboBox').value();
        if (VehicleMake_value != null && VehicleYear_value != null) {
            if (VehicleMake_value != '' && VehicleYear_value != '') {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("_GetComboVehicleStringModel", "EmergencyAssistance", new { area = "Common" })',
                    traditional: true,
                    data: { Make: $('#Make').data('kendoComboBox').value(), year: $('#Year').data('kendoComboBox').value() },
                    cache: false,
                    async: true,
                    success: function (msg) {
                        msg.push({ Selected: "False", Text: "Other", Value: "Other" });
                        vehicleModelCombo.setDataSource(msg);
                        if (selectedModel == null) {
                            vehicleModelCombo.value('');
                        }
                        else {
                            vehicleModelCombo.value(selectedModel);
                        }
                    }
                }); // end of ajax
            }
            else {
                var placeHolder = [{ Selected: "True", Text: "Select Model", Value: ""}];
                vehicleModelCombo.setDataSource(placeHolder);
                vehicleModelCombo.select(0);
            }
        }


        if (VehicleMake_value == 'Other') {
            $('#divMakeOther').show();
        }
        else {
            $('#divMakeOther').hide();
        }

        if (selectedModel == 'Other') {
            $('#divModelOther').show();
        }
    }
    function onComboBoxChange_VehicleMake(e) {

        var combo = e.sender;
        // PV: Validate user input on Telerik dropdowns
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }

        else {
            BindModel(null);
        }
        //PV
    }
    function onComboBoxChange_VehicleModelCombo(e) {
        var combo = e.sender;
        // PV: Validate user input on Telerik dropdowns
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }
        else {
            SetDefaultWeight();
        }
        //PV

        var vehicleModelCombo = $('#Model').data('kendoComboBox').text();
        if (vehicleModelCombo == 'Other') {
            $('#divModelOther').show();
        }
        else {
            $('#divModelOther').hide();
        }
    }

    function Year_OnChange(e) {

        var combo = e.sender;
        //if (!combo.value == "" || !combo.value == "Select Year") {
        // PV: Validate user input on Telerik dropdowns
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }
        //}
        //PV
        //Sanghi
        var vehicleMakeCombo = $('#Make').data('kendoComboBox');
        var vehicleModelCombo = $('#Model').data('kendoComboBox');
        if (combo.value() != '' && combo.value() != ' ' && combo.value() != null && combo.value() != 'Select Year') {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("_GetComboVehicleMake", "EmergencyAssistance", new { area = "Common" })',
                traditional: true,
                data: { Year: combo.value(), vehicleType : "1" },
                cache: false,
                async: true,
                success: function (msg) {
                    vehicleMakeCombo.setDataSource(msg);
                    vehicleMakeCombo.value('');
                    vehicleModelCombo.setDataSource(null);
                    vehicleModelCombo.value('');
                }
            });
        }
        else {
            vehicleMakeCombo.setDataSource(null);
            vehicleMakeCombo.value('');
            vehicleModelCombo.setDataSource(null);
            vehicleModelCombo.value('');
        }
    }


    function SetDefaultWeight() {
        var selectModel = $('#Model').data('kendoComboBox').value();
        var selectMake = $('#Make').data('kendoComboBox').value();
        var weightCombo = $('#VehicleCategoryID').data('kendoComboBox');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("_GetAutoDefaultWeight", "Vehicle", new { area = "Application" })',
            traditional: true,
            data: { make: selectMake, model: selectModel },
            cache: false,
            async: true,
            success: function (msg) {
                if (msg.Data != null) {
                    weightCombo.value(msg.Data);
                }
                else {
                    weightCombo.select(0);
                }
            }
        });
    }
</script>
<div class="four-columns float-left">
    <fieldset class="fieldset">
        <legend class="legend">Automobile Basic Information</legend>
        @Html.Hidden("vehicleID", Model.ID)
        @if (!isHagerty)
        {
            <div>
                <p class="button-height inline-label small-margin-bottom">
                    <label for="VIN" class="label">
                        VIN
                        @if (someRequired)
                        { <text>*</text>}
                    </label>
                    @Html.TextBoxFor(v => v.VIN, new { @class = "validate[funcCall[checkVIN]] input full-width2" })
                </p>
            </div>
        }
        <div class="button-height inline-label small-margin-bottom">
            <label for="Year" class="label">
                Year<span class="spanstar">*</span></label>
            @(Html.Kendo().ComboBox()
                .Name("Year")
                .BindTo(ViewData[ClientPortal.ActionFilters.StaticData.VehicleModelYear.ToString()] as IEnumerable<SelectListItem>)
                .Placeholder("Select Year")
                .Suggest(true)
                .Filter(FilterType.StartsWith).MinLength(0)
                         .Events(events =>
                         {
                             events.Change("Year_OnChange");
                         })
                .DataValueField("Value")
                .DataTextField("Text")
                .HighlightFirst(true)
                .Value(Model.Year)
                )
        </div>
        <div class="button-height inline-label small-margin-bottom">
            <label for="Make" class="label">
                Make<span class="spanstar">*</span></label>
            @(Html.Kendo().ComboBox()
                .Name("Make")
                .Suggest(true)
                .Filter(FilterType.StartsWith).MinLength(0)
                .Placeholder("Select Make")
                .Events(events => events.Change("onComboBoxChange_VehicleMake"))
                .DataValueField("Value")
                .DataTextField("Text")
                .HighlightFirst(true)
                .Value(Model.Make)
 .BindTo(ViewData[ClientPortal.ActionFilters.StaticData.VehicleMake.ToString()] as IEnumerable<SelectListItem>)
                )
        </div>
        <div id="divMakeOther" style="display: none;">
            <p class="button-height inline-label small-margin-bottom">
                <label for="MakeOther" class="label">
                    if Other<span class="spanstar">*</span></label>
                @Html.TextBoxFor(v => v.MakeOther, new { @class = "validate[maxSize[50] input" })
            </p>
        </div>
        <div class="button-height inline-label small-margin-bottom">
            <label for="Model" class="label">
                Model<span class="spanstar">*</span></label>
            @(Html.Kendo().ComboBox()
                .Name("Model")
                
                .Placeholder("Select Model")
                .Suggest(true)
                .Filter(FilterType.StartsWith).MinLength(0)
                .BindTo(ViewData[ClientPortal.ActionFilters.StaticData.VehicleModel.ToString()] as IEnumerable<SelectListItem>)
                .Events(events =>
                            {
                                events.Change("onComboBoxChange_VehicleModelCombo");

                            })
                .DataValueField("Value")
                .DataTextField("Text")
                .HighlightFirst(true)
                .Value(Model.Model)
                )
        </div>
        <div id="divModelOther" style="display: none;">
            <p class="button-height inline-label small-margin-bottom">
                <label for="ModelOther" class="label">
                    if Other<span class="spanstar">*</span></label>
                @Html.TextBoxFor(v => v.ModelOther, new { @class = "validate[maxSize[50]] input full-width2" })
            </p>
        </div>
        @{
            var iEnumList = ViewData[ClientPortal.ActionFilters.StaticData.Colors.ToString()] as IEnumerable<SelectListItem>;
            List<string> colors = (from n in iEnumList
                                   select n.Text).ToList<string>();
        }
        <div class="button-height inline-label small-margin-bottom">
            <label for="Category" class="label">
                Weight Class</label>
            @(Html.Kendo().ComboBox()
             .Name("VehicleCategoryID")
            
                     .Suggest(true)
                     .Filter(FilterType.StartsWith).MinLength(0)
                     .BindTo(ViewData[ClientPortal.ActionFilters.StaticData.VehicleCategory.ToString()] as IEnumerable<SelectListItem>)
                     .Events(events =>
                                 {
                                     events.Change("ValidateInputForKendoCombo");
                                 })
                      .DataValueField("Value")
                      .DataTextField("Text")
                      .HighlightFirst(true)
                      .Value(Model.VehicleCategoryID == null ? string.Empty : Model.VehicleCategoryID.Value.ToString())
                    )
        </div>
        <div class="button-height inline-label small-margin-bottom">
            <label for="Color" class="label">
                Color</label>
            @(Html.Kendo().AutoComplete()
                          .Name("Color")
                                  .HtmlAttributes(new { @class = "input full-width2", @maxLength = 50 })
                          .Value(Model.Color)
                          .Suggest(true)
                          .HighlightFirst(true)
                          .Filter(FilterType.StartsWith).MinLength(0)
                          .BindTo(colors)

                          )
        </div>
        @if (!isHagerty)
        {
            <div>
                <p class="button-height inline-label small-margin-bottom">
                    <label for="Mileage" class="label">
                        Mileage
                        @if (someRequired)
                        { <text>*</text>}</label>
                    @Html.TextBoxFor(v => v.CurrentMileage, new { @class = "validate[custom[integer] maxSize[10]] input full-width2 basicMileage" })
                </p>
            </div>
            <div class="button-height inline-label small-margin-bottom">
                <label for="LicenseState" class="label">
                    License State</label>
                @(Html.Kendo().ComboBox()
                                    .Name("LicenseState")
                                    .Suggest(true)
                                    .Filter(FilterType.StartsWith).MinLength(0)
                                    .SelectedIndex(0)
                                    .BindTo(ViewData[ClientPortal.ActionFilters.StaticData.ProvinceAbbreviation.ToString()] as IEnumerable<SelectListItem>)
                                                   .Events(events =>
                                                   {
                                                       events.Change("ValidateInputForKendoCombo");
                                                   })
                                    .DataValueField("Value")
                                    .DataTextField("Text")
                                    .HighlightFirst(true)
                                    .Value(Model.LicenseState)
                                  )
            </div>
            <div>
                <p class="button-height inline-label small-margin-bottom">
                    <label for="LicenseNumber" class="label">
                        License Number</label>
                    @Html.TextBoxFor(v => v.LicenseNumber, new { @class = "validate[maxSize[20]] input full-width2", style = "text-transform:uppercase;" })
                </p>
            </div>
        }
        <div>
            <p class="button-height inline-label small-margin-bottom">
                <label for="Description" class="label">
                    Description @Html.Partial("_Help", "Put additional vehicle notes here, these will be printed on the PO")</label>
                @Html.TextAreaFor(v => v.Description, new { @class = "validate[maxSize[255]] input full-width2" })
            </p>
        </div>
        <div>
            <p class="button-height inline-label small-margin-bottom">
                <label for="Source" class="label">
                    Source</label>
                @Html.LabelFor(v => v.Source, Model.Source)
                @Html.HiddenFor(v => v.VehicleTypeID)
                @Html.HiddenFor(v => v.Source)
            </p>
        </div>
    </fieldset>
</div>
<script type="text/javascript">
<!--
    $(function () {

        var yearValue = '@Model.Year';
        var makeValue = '@Model.Make';
        var modelValue = '@Model.Model';
        if (modelValue.length > 0) {
            setTimeout(function () { BindModel(modelValue) }, 1500);
        }

        $('.basicMileage').change(function () {
            $('.warranty').val($(this).val())
        });

        var vehicleModelCombo = $('#Model').data('kendoComboBox').text();
        if (vehicleModelCombo == 'Other') {
            $('#divModelOther').show();
        }
        else {
            $('#divModelOther').hide();
        }
    });
//-->
</script>
