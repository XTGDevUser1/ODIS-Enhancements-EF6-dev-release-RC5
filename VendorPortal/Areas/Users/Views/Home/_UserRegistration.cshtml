@model VendorPortal.Models.RegisterUserModel
@using Kendo.Mvc.UI
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = "User";
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    bool isEdit = false;
    bool isView = false;
    bool isAdd = false;
    if (ViewData["mode"].ToString().Equals("edit") || ViewData["mode"].ToString().Equals("view"))
    {
        isEdit = true;
        if (ViewData["mode"].ToString().Equals("view"))
        {
            isView = true;
        }
    }
    if (ViewData["mode"].ToString().Equals("add"))
    {
        isAdd = true;
    }
}
<style type="text/css">
    .cg-searchButton {
        width: 14px;
        height: 14px;
        background-image: url('/Content/cg-images/magnifier.png') !important;
        background-repeat: no-repeat;
    }

    .cg-autocomplete {
        z-index: 99999;
    }
</style>
<link href="~/Content/themes/base/jquery.ui.datepicker.css" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/ui.multiselect.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/ui.multiselect.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/userRegistration.js")"></script>
<link href="~/Content/jquery.ui.combogrid.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery.ui.combogrid-1.6.2.js" type="text/javascript"></script>
<form method="post" action="" id="form-UserRegistration">
    <div class="with-padding-with-panels">
        <fieldset class="fieldset">
            <legend class="legend">User</legend>
            <div>
                <p class="inline-label">
                    <label for="VendorName" class="label">
                        Vendor Name
                    </label>
                    <span class="vendorName">@Html.DisplayFor(v => v.VendorName)</span>
                </p>
                <p class="inline-label">
                    <label for="VendorNumber" class="label">
                        Vendor Number@* <span style="padding-top: 5px">@Html.Partial("_Help", "Enter part of the vendor name to lookup the vendor number")</span>*@
                    </label>
                    @Html.HiddenFor(v => v.VendorUserID)
                    @Html.HiddenFor(v => v.VendorID)
                    @if (User.IsInRole("sysadmin") && isAdd)
                    {
                        <input type="text" class="input validate[maxSize[50],minSize[1]]" id="txtVendorNumber" name="VendorNumber" />
                    }
                    else
                    {
                        @Html.DisplayFor(v => v.VendorNumber)
                    }
                </p>
                <p class="inline-label">
                    <label for="UserName" class="label">
                        User Name<span class="spanstar">*</span>
                    </label>
                    @if (isEdit)
                    {
                        if (isView)
                        {
                            @Html.TextBoxFor(u => u.UserName, new { @class = "validate[required,maxSize[256]], input full-width", disabled = "disabled", @readonly = "true" })
                        }
                        else
                        {

                            @Html.TextBoxFor(u => u.UserName, new { @class = "validate[required,maxSize[256]], input full-width", @readonly = "readonly" })
                        }
                    }
                    else
                    {
                        @Html.TextBoxFor(u => u.UserName, new { @class = "validate[required,maxSize[256],noSpace], input full-width", @error_required = "Please type your User name." })
                    }
                </p>
                <p class="inline-label">
                    <label for="FirstName" class="label">
                        First Name<span class="spanstar">*</span>
                    </label>
                    @if (isView)
                    {
                        @Html.TextBoxFor(u => u.FirstName, new { @class = "input full-width", disabled = "disabled", @readonly = "readonly" })
                    }
                    else
                    {
                        @Html.TextBoxFor(u => u.FirstName, new { @class = "validate[required,maxSize[50]], input full-width", @error_required = "Please type your first name.", maxlength = 50 })
                    }
                </p>
                <p class="inline-label">
                    <label for="LastName" class="label">
                        Last Name<span class="spanstar">*</span>
                    </label>
                    @if (isView)
                    {
                        @Html.TextBoxFor(u => u.LastName, new { @class = "input full-width", disabled = "disabled", @readonly = "readonly" })
                    }
                    else
                    {
                        @Html.TextBoxFor(u => u.LastName, new { @class = "validate[required,maxSize[50]], input full-width", @error_required = "Please type your last name.", maxlength = 50 })
                    }
                </p>
                <p class="inline-label">
                    <label for="Email" class="label">
                        Email<span class="spanstar">*</span>
                    </label>
                    @if (isView)
                    {
                        @Html.TextBoxFor(u => u.Email, new { @class = "validate[required,custom[email],maxSize[256]], input full-width", disabled = "disabled", @readonly = "readonly" })
                    }
                    else
                    {
                        @Html.TextBoxFor(u => u.Email, new { @class = "validate[required,custom[email],maxSize[256]], input full-width", maxlength = 256, @error_required = "Please type your email." })
                    }
                </p>
                @*<p class="inline-label">
                        <label for="UserRoles" class="label">
                            Administrator</label>

                        @if (isView)
                        {
                            @Html.RadioButtonFor(u => u.IsAdmin, true, new { @class = "radio", disabled = "disabled", @readonly = "readonly" })@Html.Raw(" Yes")
                            @Html.RadioButtonFor(u => u.IsAdmin, false, new { @class = "radio", disabled = "disabled", @readonly = "readonly" })@Html.Raw(" No")
                        }
                        else
                        {
                            @Html.RadioButtonFor(u => u.IsAdmin, true, new { @class = "radio" })@Html.Raw(" Yes")
                            @Html.RadioButtonFor(u => u.IsAdmin, false, new { @class = "radio" })@Html.Raw(" No")
                        }
                    </p>*@
                <p class="inline-label">
                    <label for="UserRoleName" class="label">
                        Role
                    </label>
                    @*@if (isView)
                        {
                            @(Html.Kendo().ComboBoxFor(u => u.UserRoleName)
                                .Filter(FilterType.StartsWith).MinLength(0)
                                .Suggest(true)
                                .SelectedIndex(0)
                                .Events(events => events.Change("ValidateInputForKendoCombo"))
                                .HtmlAttributes(new { style = "width:100%;" })
                                .BindTo(ViewData[VendorPortal.ActionFilters.StaticData.UserRoles.ToString()] as IEnumerable<SelectListItem>)
                                .Value(Model.UserRoleName)
                            )
                        }
                        else
                        {*@
                    @(Html.Kendo().ComboBoxFor(u => u.UserRoleName)
                        .Filter(FilterType.StartsWith).MinLength(0)
                        .Suggest(true)
                        .SelectedIndex(0)
                        .Events(events => events.Change("ValidateInputForKendoCombo"))
                        .HtmlAttributes(new { style = "width:100%;" })
                        .BindTo(ViewData[VendorPortal.ActionFilters.StaticData.UserRoles.ToString()] as IEnumerable<SelectListItem>)
                        .Value(Model.UserRoleName)
                    )
                    @*}*@

                </p>
                @if (isEdit && !isView)
                {
                    <h3>
                        Change Password:
                    </h3>
                    <p>
                        For security reasons we do not show the user's password. Use the fields below only
                        if you need to change someone's password.
                    </p>
                }
                <p class="inline-label">
                    <label for="Password" class="label">
                        Password
                        @if (!isView && !isEdit)
                        {<span class="spanstar"> *</span> }<span class="info-spot">
                            <span class="icon-info-round">
                            </span><span class="info-bubble">
                                At least 7 characters.<br />
                                At least 1 special character.<br />
                                For example: ! @@ # $ % ^ & * ( ).<br />
                                Password is case sensitive.
                            </span>
                        </span>
                    </label>
                    @if (isView)
                    {
                        @Html.PasswordFor(u => u.Password, new { @class = "input full-width float-left", @id = "register_Password", disabled = "disabled", @readonly = "readonly" })
                    }
                    else if (isEdit)
                    {
                        @Html.PasswordFor(u => u.Password, new { @class = "validate[maxSize[128],minSize[6]], input full-width float-left", maxlength = 128, @id = "register_Password", @error_required = "Please type your password." })
                    }
                    else
                    {
                        @Html.PasswordFor(u => u.Password, new { @class = "validate[required,maxSize[128],minSize[6]], input full-width float-left", maxlength = 128, @id = "register_Password", @error_required = "Please type your password." })
                    }
                    @*<img src="/img/help.png" class="with-tooltip tooltip-right small-margin-left" alt="Help" title="At least 7 characters.<br/>At least 1 special character.<br/>For example: ! @@ # $ % ^ & * ( ).<br/>Password is case sensitive.
                        " />*@
                </p>
                <p class="inline-label">
                    <label for="ConfirmPassword" class="label">
                        Confirm Password
                        @if (!isView && !isEdit)
                        {<span class="spanstar">*</span> }<span class="info-spot">
                            <span class="icon-info-round"></span><span class="info-bubble">
                                At least 7 characters.<br />
                                At least 1 special character.<br />
                                For example: ! @@ # $ % ^ & * ( ).<br />
                                Password is case sensitive.
                            </span>
                        </span>
                    </label>
                    @if (isView)
                    {
                        @Html.PasswordFor(u => u.ConfirmPassword, new { @class = "validate[required,maxSize[128],equals[register_Password]], input full-width float-left", disabled = "disabled", @readonly = "readonly" })
                    }
                    else if (isEdit)
                    {
                        @Html.PasswordFor(u => u.ConfirmPassword, new { @class = "validate[maxSize[128],equals[register_Password]], input full-width float-left", maxlength = 128, @error_required = "Please type your confirm password." })
                    }
                    else
                    {
                        @Html.PasswordFor(u => u.ConfirmPassword, new { @class = "validate[required,maxSize[128],equals[register_Password]], input full-width float-left", maxlength = 128, @error_required = "Please type your confirm password." })
                    }
                </p>
                @if (User.IsInRole("sysadmin"))
                {
                    <p class="inline-label">
                        <label for="Active" class="label">
                            Active
                        </label>
                        @if (isEdit)
                        {
                            if (isView)
                            {
                                @Html.CheckBoxFor(u => u.Active, new { @class = "checkbox", disabled = "disabled", @readonly = "readonly" })
                            }
                            else
                            {
                                @Html.CheckBoxFor(u => u.Active, new { @class = "checkbox" })
                            }
                        }
                        else
                        {
                            @Html.CheckBoxFor(u => u.Active, new { @class = "checkbox", @checked = "checked" })
                        }
                    </p>

                } @*<p class="inline-label">
                        <label for="LastActivityDate" class="label">
                            Last Activity Date</label>
                            @if (Model.LastActivityDate != DateTime.MinValue)
                            {
                        @Html.DisplayFor(u => u.LastActivityDate, new { @class = "input full-width " })
                            }
                    </p>
                    <p class="inline-label">
                        <label for="LastUpdated" class="label">
                            Last Updated</label>
                        @Html.DisplayFor(u => u.ModifiedBy)
                        @Html.DisplayFor(u => u.LastUpdated)
                    </p>*@
                @Html.HiddenFor(u => u.ID)
                <div class="field-block button-height">
                    @if (@ViewData["mode"].ToString() != "view")
                    {
                        <button id="btnAddUser" class="button green-gradient glossy float-right mid-margin-left"
                                type="submit">
                            @if (isEdit)
                            {
                                @Html.Raw("Update")
                            }
                            else
                            {
                                @Html.Raw("Add")
                            }
                        </button>
                    }
                    <button id="btnCancelUser" class="button gray-gradient glossy  float-right" type="button">
                        Cancel
                    </button>
                </div>
            </div>
        </fieldset>
    </div>
    @Html.Hidden("hdnfldMode", ViewData["mode"])
</form>
<script type="text/javascript">
    $(function () {
        CleanMyContainer('form-UserRegistration');
        WatchMyContainer('form-UserRegistration');

        $("#form-UserRegistration").validationEngine();
        if ($("#hdnfldMode").val() == "view") {
            $('#UserRoleName').data('kendoComboBox').enable(false);
        }
        var autoFill = $("#txtVendorNumber").combogrid({
            url: '@Url.Action("Search", "Vendor", new { area = "ISP" })',
            searchButton: true,
            width: '630px',
            replaceNull: true,
            colModel: [{ 'columnName': 'VendorNumber', 'width': '14', 'label': 'Vendor #', 'align': 'left' },
                        { 'columnName': 'VendorName', 'width': '65', 'label': 'Vendor Name', 'align': 'left' },
                        { 'columnName': 'City', 'width': '14', 'label': 'City', 'align': 'left' },
                        { 'columnName': 'StateProvince', 'width': '7', 'label': 'State', 'align': 'left' }
            ],
            select: function (event, ui) {

                $("#txtVendorNumber").val(ui.item.VendorNumber);
                $(".vendorName").text(ui.item.VendorName);
                $("#VendorID").val(ui.item.VendorID);
                return false;
            }
        });


    });
</script>
<script type="text/javascript">
    $(function () {
        var title = $('#ID').val();
        if (title != '') {
            $(".k-window-title").html("User ID : " + title);
        }
    });
</script>
