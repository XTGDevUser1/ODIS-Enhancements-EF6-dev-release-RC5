@using Kendo.Mvc.UI
@model Martex.DMS.DAL.Feedback
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_ContentMaster-vendor.cshtml";
    var phoneNumber = Model.PhoneNumber;
}
<style type="text/css">
    .k-upload-selected /*.k-upload-action */
    {
        display: none;
    }
</style>
<script type="text/javascript">
    function OnFileSelect(e) {

        setTimeout(function () {
            $(".k-button-bare").append("&nbsp;Remove").addClass("k-button-icontext").removeClass("k-button-bare");
        }, 500);
    }

    function UploadDocument(e) {
        var postData = $("#form-Feedback").serializeArray();
        var nvp = {};
        var serviceIndex = 0;
        for (var i = 0, l = postData.length; i < l; i++) {
            nvp[postData[i].name] = postData[i].value;
        }
        e.data = nvp;

    }

    function UploadSuccess(e) {
        if (e.response.Data != '') {
           $.modal.confirmFeedback(e.response.Data, function () {
                 location = "/ISP/Feedback";
             }, function () {
                   location = "/ISP/Dashboard/Index";
              });
        }
            
    }

    function UploadError(e) {
        HideLoadingIndicator();
        openAlertMessage("An error occurred while processing the application. Please contact administrator for more details");
    }

    function UploadComplete(e) {
        HideLoadingIndicator();
    }
</script>
<form method="post" action="@Url.Action("Index", "Feedback")" id="form-Feedback" enctype="multipart/form-data">
<div class="columns">
    <div class="with-padding-with-panels six-columns twelve-columns-tablet">
        <h2 class="thin">
            Leave us your feedback</h2>
        <fieldset class="fieldset">
            <legend class="legend">Feedback</legend>
            <div>
                <p>@Html.Raw("Your feedback is very important to us. Please use this form to let us know if you find any problems or have any suggestions or ideas about how to make things better!")
                </p>
                <div class="clear">
                </div>
                <p class="inline-label">
                    <label for="Name" class="label">
                        Name<span class="red"> *</span></label>
                    @Html.TextBoxFor(a => a.Name, new { @id = "FeedBackName", @class = "validate[required,maxSize[50],custom[onlyLetterSp]], input full-width2", maxlength = 50 })
                </p>
                <p class="inline-label margin-bottom  mid-margin-top">
                    <label for="Phone" class="label">
                        Phone<span class="red"> *</span></label>
                    @Html.Editor("CallbackNumber", "Phone", new { Value = Model.PhoneNumber, PhoneTypeValue = 6, entityName = "Member" })
                    @Html.HiddenFor(a => a.PhoneNumber)
                    <!-- These are the values that would get submitted to and used by the controller -->
                    @Html.HiddenFor(a => a.PhoneTypeID)
                </p>
                <p class="inline-label">
                    <label for="Email" class="label">
                        Email<span class="red"> *</span></label>
                    @Html.TextBoxFor(a => a.Email, new { @class = "validate[required,custom[email],maxSize[50]], input full-width2", @id = "FeedBackEmail", maxlength = 50 })
                </p>
                <div class="inline-label mid-margin-bottom">
                    <label for="Subject" class="label">
                        How do you want to hear from us?
                    </label>
                    @(Html.Kendo().ComboBox()
                    .Name("PreferedContactMethodID")
                    .Filter(Kendo.Mvc.UI.FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change("ValidateInputForKendoCombo"))
                    .Suggest(true)
                    .BindTo(new SelectList(ViewData["ContactMethods"] as IEnumerable<SelectListItem>, "Value", "Text", Model != null && Model.PreferedContactMethodID != 0 ? Model.PreferedContactMethodID.ToString() : ""))
                    .SelectedIndex(0)
                    )
                </div>
                <div class="inline-label mid-margin-bottom">
                    <label for="Subject" class="label">
                        Subject<span class="red"> *</span></label>
                    @(Html.Kendo().ComboBox()
                    .Name("FeedbackTypeID")
                    .Filter(Kendo.Mvc.UI.FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change("ValidateInputForKendoCombo"))
                    .Suggest(true)
                    .BindTo(new SelectList(ViewData["FeedbackTypes"] as IEnumerable<SelectListItem>, "Value", "Text", Model != null && Model.FeedbackTypeID != 0 ? Model.FeedbackTypeID.ToString() : ""))
                    .SelectedIndex(0)
                    )
                </div>
                <div class="inline-label mid-margin-bottom">
                    <label for="Priority" class="label">
                        Priority<span class="red"> *</span></label>
                    @(Html.Kendo().ComboBox()
                    .Name("Priority")
                    .Filter(Kendo.Mvc.UI.FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change("ValidateInputForKendoCombo"))
                    .Suggest(true)
                    .BindTo(new SelectList(ViewData[VendorPortal.ActionFilters.StaticData.Priorities.ToString()] as IEnumerable<SelectListItem>, "Value", "Text", Model != null && Model.Priority != null ? Model.Priority.ToString() : ""))
                    .SelectedIndex(0)
                    )
                </div>
                <p class="inline-label">
                    <label for="Comments" class="label full-width">
                        <strong>Comments / Description<span class="red"> *</span></strong></label></p>
                <p>
                    <label for="Description" class="label">
                        Please provide as much detail as possible so that we can properly address your feedback,
                        Thanks!</label>
                    @Html.TextAreaFor(a => a.Comments, new { @class = "validate[required] input full-width2", rows = "5", cols = "30", style = "width : 100%" })
                </p>
                <p class="inline-label">
                    <label for="Comments" class="label">
                        <strong>Attach a file</strong></label></p>
                <p>
                    @Html.Raw("Please provide any supporting documentation that will help explain/show what problem you are having.")
                </p>
                <div class="button-height">
                @(Html.Kendo().Upload()
                        .Name("FileDocument")
                        .Async(a => a
                        .Save("Index", "Feedback", new { area = "ISP" })
                        .AutoUpload(false)
                        .RemoveUrl("/Remove")

            )
            .Events(e => e.Select("OnFileSelect").Upload("UploadDocument").Success("UploadSuccess").Error("UploadError").Complete("UploadComplete"))
            .Multiple(false)
            .ShowFileList(true)
            )
                   
                </div>
                <div>
                    <button id="btnSendFeedback" class="button green-gradient float-right" type="submit">
                        Send Feedback
                    </button>
                </div>
            </div>
        </fieldset>
    </div>
</div>
<script type="text/javascript">


    $(function () {
        WatchMyContainer('form-Feedback');
        LoadHelpText("_FeedbackHelp");
        $('#form-Feedback').validationEngine();
        $('#btnSendFeedback').click(function (e) {
            CleanMyContainer('form-Feedback');
            var errorfound = false;
            if ($('#form-Feedback').validationEngine('validate') == false) {
                errorfound = true;
            }
            if ($("#FeedbackTypeID").data("kendoComboBox").value() == "") {
                ShowValidationMessage($('input[name="FeedbackTypeID_input"]'), "This field is required");
                errorfound = true;
            }
            else {
                HideValidationMessage($('input[name="FeedbackTypeID_input"]'));
            }
            if ($("#Priority").data("kendoComboBox").value() == "") {
                ShowValidationMessage($('input[name="Priority_input"]'), "This field is required");
                errorfound = true;
            }
            else {
                HideValidationMessage($('input[name="Priority_input"]'));
            }

            $("#PhoneNumber").val(GetPhoneNumberForDB("CallbackNumber"));
            $("#PhoneTypeID").val($("#CallbackNumber_ddlPhoneType").val());
            if ($("#PhoneNumber").val() == "") {
                ShowValidationMessage($("#CallbackNumber_txtPhoneNumber"), "Phone number is required. Check the format.");
                errorfound = true;
            }
            else {
                HideValidationMessage($("#PhoneNumber_txtPhoneNumber"));
            }
            if (errorfound == true) {
                return false;
            }
            $.blockUI({ message: '<div class="ajax-load"></div>'
                            ,
                css: { background: 'transparent', border: '0px' }
            });
            if ($(".k-upload-selected").length > 0) {
                console.log("File uploaded so going via Kendo Upload");
                $(".k-upload-selected").click();

            }
            else {
                var postData = $("#form-Feedback").serializeArray();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Index", "Feedback", new { area = "ISP" })',
                    traditional: true,
                    data: postData,
                    cache: false,
                    async: true,
                    global: true,
                    success: function (msg) {
                        var message = '';
                        var jsondata = $.parseJSON(msg);
                        message = jsondata.Data;
                        if (message != '') {

                            $.modal.confirmFeedback(message, function () {
                                location = "/ISP/Feedback";
                            }, function () {
                                location = "/ISP/Dashboard/Index";
                            });
                        }
                    }
                });
            }
            return false;

        });

    });
</script>
</form>
