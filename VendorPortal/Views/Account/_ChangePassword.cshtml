@model VendorPortal.Models.UserProfileModel
<div>
    <fieldset class="fieldset">
        <legend class="legend">Change Password</legend>
        <div class="columns">
            <div class="twelve-columns">
                <form id="frmChangePassOnForgotPass" method="post" action="javascript:void(0)">
                <p class="button-height inline-large-label ">
                    <label for="OldPassword" class="label">
                        Old Password <span class="star red">*</span>
                    </label>
                    @Html.PasswordFor(c => c.ChangePasswordModel.OldPassword, new { @class = "input validate[required, maxSize[50]]" })
                </p>
                <p class="button-height inline-large-label ">
                    <label for="NewPassword" class="label">
                        New Password <span class="star red">*</span>
                    </label>
                    @Html.PasswordFor(c => c.ChangePasswordModel.NewPassword, new { @class = "input validate[required, maxSize[50]]" })
                </p>
                <p class="button-height inline-large-label ">
                    <label for="ConfirmPassword" class="label">
                        Confirm Password <span class="star red">*</span>
                    </label>
                    @Html.PasswordFor(c => c.ChangePasswordModel.ConfirmPassword, new { @class = "input validate[required, equals[ChangePasswordModel_NewPassword] maxSize[50]]" })
                </p>
                <p class="button-height inline-large-label">
                    <label class="label">
                    </label>
                    <button id="btnChangePassOnForgotPass" class="button glossy green-gradient" type="submit"
                        disabled="disabled">
                        Update Password
                    </button>
                </p>
                </form>
            </div>
        </div>
    </fieldset>
</div>
<script type="text/javascript" language="javascript">
    $(document).ready(function (e) {

        $("#OldPassword").focus();
    });

    $(function () {
        $("#frmChangePassOnForgotPass").validationEngine();
        $("#frmChangePassOnForgotPass input").change(function (e) {
            var isFormDirty = false;
            $("#frmChangePassOnForgotPass input").each(function () {
                if ($.trim($(this).val()).length > 0) {
                    isFormDirty = true;
                }
            });

            if (isFormDirty) {
                $("#btnChangePassOnForgotPass").removeAttr("disabled");
            }
            else {
                $("#btnChangePassOnForgotPass").attr("disabled", "disabled");
            }
        });
    });

    $("#btnChangePassOnForgotPass").click(function (e) {
        var $form = $("#frmChangePassOnForgotPass");
        var formData = $form.serializeArray();

        if ($form.validationEngine('validate') == false) {
            return false;
        }
        formData.push({ name: "UpdateChangePassVendorUser", value: true });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdatePassword", "Account", new { area = "" })',
            traditional: true,
            data: formData,
            cache: false,
            async: true,
            global: true,
            success: function (msg) {
                $form.clearMessages();
                if (msg.Status == "Success") {
                    var kendoWindowID = $(".k-window-content").attr("id");
                    $("#" + kendoWindowID).data('kendoWindow').close();
                    openAlertMessage("Password Updated Successfully");
                    //window.location.reload();
                }
                else if (msg.Status == "Failure") {
                    openAlertMessage(msg.Data);
                }
            }
        } // end of ajax options
                    );

        return false;
    });
</script>
