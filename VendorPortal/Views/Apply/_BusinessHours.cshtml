@using Martex.DMS.DAL.Entities
@using Kendo.Mvc.UI
@model List<BusinessHours>
@{
    // Move this code to controller  / facade
    var businessHours = Model;
    if (businessHours == null || businessHours.Count == 0)
    {
        if (businessHours == null)
        {
            businessHours = new List<BusinessHours>();
        }
        for (int i = 0; i < 7; i++)
        {
            var item = new BusinessHours();
            item.DayNumber = (i + 1);
            switch (i)
            {
                case 0:
                    item.DayName = "Monday";
                    break;
                case 1:
                    item.DayName = "Tuesday";
                    break;
                case 2:
                    item.DayName = "Wednesday";
                    break;
                case 3:
                    item.DayName = "Thursday";
                    break;
                case 4:
                    item.DayName = "Friday";
                    break;
                case 5:
                    item.DayName = "Saturday";
                    break;
                case 6:
                    item.DayName = "Sunday";
                    break;
            }
            businessHours.Add(item);
        }

    }
}

<script language="javascript" type="text/javascript">
    function Start_OnChange(e) {
         
        var start = e.sender;
        var endElementID = $(start.element).attr("id");
        endElementID = endElementID.replace("StartTime", "EndTime").replace("[","\\[").replace("]","\\]");
        
        var endPicker = $("#" + endElementID).data("kendoTimePicker");
        var startTime = start.value();            

        if (startTime) {
            startTime = new Date(startTime);

            endPicker.max(startTime);

            startTime.setMinutes(startTime.getMinutes() + this.options.interval);
            endPicker.min(startTime);
            endPicker.value(startTime);
        }
        
    }

</script>
<div class="clear">
</div>
@{ int index = 0;}
@foreach (var item in businessHours)
{

    <p class="button-height inline-large-label ">
        <label for="dayName" class="label">
            @item.DayName
            @Html.HiddenFor(v => businessHours[index].DayName)
            @Html.HiddenFor(v => businessHours[index].DayNumber)
        </label>
        
        @(Html.Kendo().TimePickerFor(v => businessHours[index].StartTime)
        .Events(e => e.Change("Start_OnChange"))
        .HtmlAttributes(new {@class = "bh", style="width:20%"})
        )
                    
        to
        @(Html.Kendo().TimePickerFor(v => businessHours[index].EndTime)
                        .HtmlAttributes(new { @class = "bh", style = "width:20%" })
        )
    </p>
    index++;
}
<div class="clear"></div>