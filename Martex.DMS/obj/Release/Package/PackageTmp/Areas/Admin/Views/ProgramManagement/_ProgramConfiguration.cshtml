@model int
@using Kendo.Mvc.UI;
@{
    int programID = Model;
    bool isView = false;
    string pageMode = ViewData["mode"].ToString();
    if (pageMode != null && pageMode.ToString().Equals("view"))
    {
        isView = true;
    }
    var functionHandler = "onclick=ManageConfiguration(null," + programID + ")";
    var addTemplate = "<a style = 'min-width:auto;', title='Add' , class='k-button k-button-icontext k-grid-add with-tooltip' href='javascript:void(0);' " + @functionHandler + "><span class='k-icon k-add'></span>Add Program Configuration</a>";
}
<script type="text/javascript" language="javascript">
    function ProgramManagementConfigurationSearchCriteria() {
        return { programID: '@programID' };
    }

    $("#GrdProgramConfiguration_@programID").delegate("tbody>tr", "dblclick", function () {
        $(this).find('.k-grid-View').click();
    });

    function grdProgramConfiguration_OnDataBound(e) {
        $(".k-grid-Edit").addClass("with-tooltip").html("<span class='k-icon k-edit'/>");
        $(".k-grid-View").addClass("with-tooltip").html("<span class='k-icon k-i-search'/>");
        $(".k-grid-Delete").addClass("with-tooltip").html("<span class='k-icon k-delete'/>");
        if ('@isView' == 'true' || '@isView' == 'True') {
            $("#GrdProgramConfiguration_@programID").find(".k-grid-add").addClass("hidden");
        }

         var grid = e.sender;
         e.sender.table.find('tr').each(function () {
             var $programID = $(this).find('.programID');
             var $programName = $(this).find('.programName');
             
             var editButton = $(this).find('.k-grid-Edit');
             var deleteButton = $(this).find('.k-grid-Delete');
             
             if ($programID.html() != @programID) {
                 $programName.html($programName.html() + " (Parent)");
                 $(editButton).addClass("hide");
                 $(deleteButton).addClass("hide");
             }
         });

    }
    function ManageConfiguration(e, suffixProgramID, grid) {
        if (e != null) {
            e.preventDefault();
            var recordID = grid.dataItem($(e.currentTarget).closest("tr")).ProgramConfigurationID;

            if (e.data.commandName == 'Edit') {
                GetManageConfiguration(recordID, 'edit', 'Program Configuration ID: ' + recordID);
            }
            else if (e.data.commandName == 'View') {
                GetManageConfiguration(recordID, 'view', 'Program Configuration ID: ' + recordID);
            }
            else if (e.data.commandName == 'Delete') {
                DeleteConfiguration(recordID);
                //openAlertMessage("Delete in progress");

            }
        }
        else {
            GetManageConfiguration(null, 'add', 'New Program Configuration');
        }
        return false;
    }

    function DeleteConfiguration(recordID) {
        $.modal.confirm('Are you sure you want to delete this Program Configuration?', function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("_DeleteProgramConfiguration", "ProgramManagement", new { area = "Admin" })',
                traditional: true,
                cache: false,
                data: { programConfigurationId: recordID },
                async: false,
                success: function (msg) {
                    $('#GrdProgramConfiguration_@programID').data('kendoGrid').dataSource.read();
                    openAlertMessage('Record has been deleted successfully');

                }
            });
        }, function () {

        });
    }

    function GetManageConfiguration(recordID, mode, title) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetProgramConfiguration", "ProgramManagement")',
            traditional: true,
            data: { programConfigurationId: recordID, mode: mode, programId: '@programID' },
            cache: false,
            async: false,
            success: function (msg) {
                programConfigurationWindow = $("<div id='programConfigurationWindow' />").appendTo(document.body);
                programConfigurationWindow.kendoWindow({
                    title: title,
                    modal: true,
                    width: 1050,
                    height: GetPopupWindowHeight(),
                    deactivate: function () {
                        this.destroy();
                    },
                    close: function (e) {
                        $('#form-ProgramConfiguration').validationEngine('hideAll'); // to hide the validation message of the popup 
                        
                        if (document.dialogResult == null || document.dialogResult == "CANCEL") {
                            document.dialogResult = null;
                            if (IsMyContainerDirty('form-ProgramConfiguration')) {
                                var prompt = PromptForDirtyFlag();
                                if (!prompt) {
                                    e.preventDefault();
                                    return false;
                                }
                                CleanMyContainer('form-ProgramConfiguration');
                            }
                        }
                        return true;
                    }
                });
                programConfigurationWindow.data('kendoWindow').content(msg).center().open();
            }
        });
    }
</script>
<div class="with-padding">
    <div id="divProgramConfigurationTab_@programID">
            @(Html.Kendo().Grid<Martex.DMS.DAL.ProgramManagementProgramConfigurationList_Result>()
                                .Name("GrdProgramConfiguration_" + @programID)
                        .Columns(column =>
                        {
                            column.Bound(a => a.ProgramConfigurationID).Title("ID").HtmlAttributes(new { @style = "text-align:right;" }).HeaderHtmlAttributes(new { @style = "text-align:right;" }).Width(50);
                            column.Bound(a => a.ProgramID).Hidden().HtmlAttributes(new { @class = "programID" });
                            column.Bound(a => a.ProgramName).Title("Program Name").Width(200).HtmlAttributes(new { @class = "programName" });
                            column.Bound(a => a.Name).Title("Name").Width(200);
                            column.Bound(a => a.Value).Title("Value").Width(200);
                            column.Bound(a => a.ConfigurationType).Title("Configuration Type").Width(200);
                            column.Bound(a => a.ConfigurationCategory).Title("Configuration Category").Width(150);
                            column.Bound(a => a.IsActive).Title("IsActive").Width(100);
                            column.Bound(a => a.Sequence).HtmlAttributes(new { @style = "text-align:right;" }).HeaderHtmlAttributes(new { @style = "text-align:right;" }).Width(100).Title("Sequence");
                            column.Bound(a => a.ControlType).Title("Control Type").Width(100);
                            column.Bound(a => a.DataType).Title("Data Type").Width(100);
                            if (!isView)
                            {
                                column.Command(command =>
                                {
                                    command.Custom("View").Click(@<text>function(e){ ManageConfiguration(e,'@programID',this)}</text>).HtmlAttributes(new { style = "min-width:auto;", title = "View" });
                                    command.Custom("Edit").Click(@<text>function(e){ ManageConfiguration(e,'@programID',this)}</text>).HtmlAttributes(new { style = "min-width:auto;", title = "Edit" });
                                    command.Custom("Delete").Click(@<text>function(e){ ManageConfiguration(e,'@programID',this)}</text>).HtmlAttributes(new { style = "min-width:auto;", title = "Delete" });

                                }).Width(150)
                                .Title("Action(s)");
                            }
                            else
                            {
                                column.Command(command =>
                                {
                                    command.Custom("View").Click(@<text>function(e){ ManageConfiguration(e,'@programID',this)}</text>).HtmlAttributes(new { style = "min-width:auto;", title = "View" });
                                    

                                }).Width(150)
                               .Title("Action(s)");
                            }
                        })
                                                    .ToolBar(toolBar => toolBar.Template(@addTemplate))
                                                    .Events(e =>
                                                    {
                                                        e.DataBound("grdProgramConfiguration_OnDataBound");
                                                    })
                                                    .Pageable()
                                                    .Sortable()
                                                    .Scrollable()
                                                    .Pageable(pager => pager
                                                        .Refresh(true)
                                                        .PageSizes(new int[] { 10, 20, 50, 100 })
                                                    )
                                                    .Filterable(filterable => filterable
                                                      .Extra(false)
                                                     )
                                                    .Selectable(select => select.Mode(GridSelectionMode.Single))
                                                    .DataSource(datasource => datasource
                                                        .Ajax()
                                                        .Events(events => events.Error("KendoGridErrorHandler"))
                                                                        .Read(read => read.Action("_GetProgramConfigurationList", "ProgramManagement", new { area = "Admin" }).Data("ProgramManagementConfigurationSearchCriteria"))
                                                        .PageSize(50)
                                                    )
                                                    .Resizable(resize => resize.Columns(true))
                                                    .EnableCustomBinding(true)
                                                    )
        </div>
    </div>

<script type="text/javascript">
    $(function () {
        var gridContentHeight = GetWindowHeight() - (
                                        $("#menu-horizontal").height() +
                                        $(".k-toolbar").height() +
                                        $(".k-grid-header").height() +
                                        $(".k-grid-bottom").height() +
                                        $(".footer").height() +
                                        250
                                        );
        $("#GrdProgramConfiguration_@programID >.k-grid-content").css("height", gridContentHeight + "px");
    });
    var programConfigurationWindow;
</script>
