@model Martex.DMS.Models.DataGroupModel
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Data Group";
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    bool isEdit = false;
    bool isView = false;
    if (ViewData["mode"].ToString().Equals("edit") || ViewData["mode"].ToString().Equals("view"))
    {
        isEdit = true;
        if (ViewData["mode"].ToString().Equals("view"))
        {
            isView = true;
        }
    }
}
<link href="@Url.Content("~/Content/CustomStyle.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/ui.multiselect.css?v=1")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/ui.multiselect.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine.js")" type="text/javascript"></script>
<script type="text/javascript">

    function Organization_OnChange_Kendo(e) {
        var combo = $('#OrganizationID').data('kendoComboBox');
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }
        if (combo.value() == "") {
            ShowValidationMessage($('input[name="OrganizationID_input"]'), "Please select Organization");
            return false;
        }
        else {
            HideValidationMessage($('input[name="OrganizationID_input"]'));
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ProgramsForOrganization", "ReferenceData", new { area = "Common" })',
            data: { controlFor: "DataGroupProgramValues", organizationId: e.value },
            traditional: true,
            cache: false,
            async: false,
            success: function (msg) {
                $("#spanDataGroupProgramValues").html(msg);
            }

        });

    }
</script>
<form method="post" action="" id="form-DataGroupRegistration">
<div class="with-padding-with-panels">
    <fieldset class="fieldset">
        <legend class="legend">Data Group</legend>
        <div>
            <div style="margin-bottom: 5px;">
                <label for="OrganizationID" class="label-no-inline">
                    Organization <span class="spanstar">*</span></label>
                @if (isView)
                {
                    @(Html.Kendo().ComboBoxFor(u => u.DataGroup.OrganizationID)
                    .Name("OrganizationID")
                    .Filter(Kendo.Mvc.UI.FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change("Organization_OnChange_Kendo"))
                    .Suggest(true)
                    .BindTo(new SelectList(ViewData[Martex.DMS.ActionFilters.StaticData.Organizations.ToString()] as IEnumerable<SelectListItem>, "Value", "Text", Model != null && Model.DataGroup != null ? Model.DataGroup.OrganizationID.ToString() : ""))
                    .Enable(false))
                }
                else
                {
                    @(Html.Kendo().ComboBoxFor(u => u.DataGroup.OrganizationID)
                    .Name("OrganizationID")
                    .Filter(Kendo.Mvc.UI.FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change("Organization_OnChange_Kendo"))
                    .Suggest(true)
                    .BindTo(new SelectList(ViewData[Martex.DMS.ActionFilters.StaticData.Organizations.ToString()] as IEnumerable<SelectListItem>, "Value", "Text", Model != null && Model.DataGroup != null ? Model.DataGroup.OrganizationID.ToString() : "")))
                    
                }
            </div>
            <p class="inline-label">
                <label for="Name" class="label">
                    Data Group Name<span class="spanstar">*</span></label>
                @if (isView)
                {
                    @Html.TextBoxFor(u => u.DataGroup.Name, new { @class = "input full-width2", disabled = "disabled", @readonly = "readonly" })
                }
                else
                {
                    @Html.TextBoxFor(u => u.DataGroup.Name, new { @class = "validate[required,maxSize[50]], input full-width2", maxlength = 50 })
                }
            </p>
            <p class="inline-label">
                <label for="Description" class="label">
                    Description</label>
                @if (isView)
                {
                    @Html.TextAreaFor(u => u.DataGroup.Description, new { @class = "input full-width", rows = "4", disabled = "disabled", @readonly = "readonly" })
                }
                else
                {
                    @Html.TextAreaFor(u => u.DataGroup.Description, new { @class = "validate[maxSize[255]], input full-width", rows = "4", maxlength = 255 })
                }
            </p>
            <b>Programs </b><span class="info-spot"><span class="icon-info-round"></span><span
                class="info-bubble">Select all the programs that are<br />
                to be included in this Data Group.<br />
                Any User with rights to<br />
                this Data Group will be able to<br />
                see and work with any Program<br />
                in this list.</span></span> <span id="spanDataGroupProgramValues">
                    @if (isView)
                    {
                        @Html.ListBoxFor(u => u.DataGroupProgramValues, ViewData[Martex.DMS.ActionFilters.StaticData.Programs.ToString()] as IEnumerable<SelectListItem>, new { @id = "dataGroupProgram_registration", @class = "validate[required] uimultiselect eleven-columns", multiple = true, style = "height:100px;", disabled = "disabled" })
                    }
                    else
                    {
                        @Html.ListBoxFor(u => u.DataGroupProgramValues, ViewData[Martex.DMS.ActionFilters.StaticData.Programs.ToString()] as IEnumerable<SelectListItem>, new { @id = "dataGroupProgram_registration", @class = "validate[required] uimultiselect eleven-columns", multiple = true, style = "height:100px;" })
                    }
                </span>
            <div class="clear">
            </div>
            <p class="inline-label">
                <label for="LastUpdateInformation" class="label">
                    Last Update</label>
                @Html.DisplayFor(u => u.LastUpdateInformation)
            </p>
            <div class="field-block button-height">
                @if (@ViewData["mode"].ToString() != "view")
                {
                    <button id="btnAddDataGroup" class="button green-gradient glossy float-right mid-margin-left"
                        type="submit">
                        @if (isEdit)
                        {
                            @Html.Raw("Update")
                        }
                        else
                        {
                            @Html.Raw("Add")
                        }
                    </button>
                }
                <button id="btnCancelDataGroup" class="button gray-gradient glossy  float-right"
                    type="button">
                    Cancel
                </button>
            </div>
        </div>
    </fieldset>
</div>
@Html.Hidden("hdnfldMode", ViewData["mode"])
@Html.HiddenFor(a => a.DataGroup.ID)
</form>
<script src="@Url.Content("~/Scripts/dataGroupRegistration.js")" type="text/javascript"></script>
<script type="text/javascript">

    $(function () {
        CleanMyContainer('form-DataGroupRegistration');
        WatchMyContainer('form-DataGroupRegistration');
        $('#form-DataGroupRegistration').validationEngine();
    });
</script>
