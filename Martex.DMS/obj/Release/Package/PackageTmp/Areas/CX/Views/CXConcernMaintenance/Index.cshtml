@using Kendo.Mvc.UI;
@model List<Martex.DMS.DAL.QAConcernList_Result>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/CX/Views/Shared/_CXLayout.cshtml";
}
<hgroup id="main-title" class="thin">
    <h1>
        Concern Maintenance
    </h1>
    <h2>@DateTime.Now.ToString("MM/dd/yyyy")</h2>
</hgroup>
<script language="javascript" type="text/javascript">

    function onDataBound(e) {
        $(".k-grid-View").addClass("with-tooltip").html("<span class='k-icon k-i-search'/>");
        $(".k-grid-Edit").addClass("with-tooltip").html("<span class='k-icon k-edit'/>");
        $(".k-grid-Delete").addClass("with-tooltip").html("<span class='k-icon k-delete'/>");
    }

    function ManageRecord(e) {

        var mode = "view";
        var title = "Add New Concern";
        if (e != null) {
            e.preventDefault();

            var concernId = this.dataItem($(e.currentTarget).closest("tr")).ID; // Replace ID with your data key for the row.

            if (e.data.commandName == 'View') {
                CRURecord(concernId, 'view', 'View Concern : ' + concernId);
            }
            else if (e.data.commandName == 'Edit') {
                CRURecord(concernId, 'edit', 'Update Concern : ' + concernId);
            }
            else if (e.data.commandName == 'Delete') {
                DeleteRecord(concernId);
            }
        }
        else {
            CRURecord(concernId, 'add', title);
        }
        return false;
    }
    function CRURecord(concernId, mode, title) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("_GetConcern", "CXConcernMaintenance", new { area = "CX" })',
            traditional: true,
            data: { concernId: concernId, mode: mode },
            cache: false,
            async: false,
            success: function (msg) {
                concernWindow = $("<div id='concernWindow' />").appendTo(document.body);
                concernWindow.kendoWindow({
                    title: title,
                    modal: true,
                    width: 450,
                    height: 350,
                    deactivate: function () {
                        CleanMyContainer('frmConcern');
                        this.destroy();
                    },
                    close: function (e) {
                        $('#frmConcern').validationEngine('hideAll'); // to hide the validation message of the popup 
                        if (document.dialogResult == null || document.dialogResult == "CANCEL") {
                            document.dialogResult = null;
                            if (IsMyContainerDirty('frmConcern')) {
                                var prompt = PromptForDirtyFlag();
                                if (!prompt) {
                                    e.preventDefault();
                                    return false;
                                }
                                CleanMyContainer('frmConcern');
                            }
                        }
                        return true;
                    }
                });
                concernWindow.data('kendoWindow').content(msg).center().open();
            }
        });
    }
    function DeleteRecord(concernId) {
        $.modal.confirm('Are you sure you want to delete this Concern?', function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteConcern", "CXAConcernMaintenance", new { area = "CX" })',
                traditional: true,
                cache: false,
                data: { concernId: concernId },
                async: false,
                success: function (msg) {
                    $('#grdQAConcern').data('kendoGrid').dataSource.read();
                    openAlertMessage('Record has been deleted successfully');
                }
            });
        }, function () {
        });
    }


    function ConcernMaintenanceSearchCriteria() {

        var newArray = [];
        newArray.push({ name: "concernTypeId", value: $("#ConcernTypeCriteria").data('kendoComboBox').value() });
        var concernMaintenanceCriteria = {};
        for (var i = 0; i < newArray.length; ++i)
            concernMaintenanceCriteria[newArray[i].name] = newArray[i].value;
        return concernMaintenanceCriteria;
    }


</script>
<form method="post" action="" id="form-grdQAConcern">
<div class="with-padding">
    <div class="k-toolbar k-grid-toolbar k-grid-top mid-padding-bottom">
        <div class=" mid-margin-top margin-right">
            <span class="margin-right"><strong>Concern Type</strong></span>
            @(Html.Kendo().ComboBox().Name("ConcernTypeCriteria")
                    .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.ConcernTypes.ToString()] as IEnumerable<SelectListItem>)
                    .Events(events =>
                    {
                        events.Change("ValidateInputForKendoCombo");
                    })
                            .HtmlAttributes(new { @class = "small-margin-right" })
                    .Suggest(true)
                    .Filter(FilterType.StartsWith).MinLength(0)
                    .SelectedIndex(0)
                    )
            <div class="float-right">
                <button type="button" class="button blue-gradient  compact" id="btnSearch" value="Search">
                    Search
                </button>
                 <button type="button" class="button grey-gradient  compact" id="btnReset" value="Reset">
                    Reset
                </button>
            </div>
        </div>
    </div>
    <div class="clear">
        &nbsp;</div>
    @(Html.Kendo().Grid(Model)
        .Name("grdQAConcern")
        .Columns(columns =>
        {
            columns.Bound(a => a.ID).Title("ID");
            columns.Bound(a => a.ConcernType).Title("Concern Type");
            columns.Bound(a => a.Name).Title("Name");
            columns.Bound(a => a.Description).Title("Description");
            columns.Bound(a => a.Sequence).Title("Sequence");
            columns.Bound(a => a.IsActive).Title("IsActive").ClientTemplate("<input type='checkbox' #= IsActive ? checked='checked' : '' # disabled='disabled' ></input>").Title("Active"); ;
            columns.Command(command =>
            {
                command.Custom("View").Click("ManageRecord").HtmlAttributes(new { style = "min-width:auto;", title = "View" });
                command.Custom("Edit").Click("ManageRecord").HtmlAttributes(new { style = "min-width:auto;", title = "Edit" });
                command.Custom("Delete").Click("ManageRecord").HtmlAttributes(new { style = "min-width:auto;", title = "Delete" });
            }).Width(150)
              .Title("Action(s)");
        })
        .ToolBar(toolBar => toolBar.Template("<a style='min-width:auto;', title='Add Concern' class='k-button k-button-icontext k-grid-add with-tooltip' href='javascript:void(0);' onclick='ManageRecord(null)'><span class='k-icon k-add'></span> Add Concern</a>"))
        .Events(e =>
        {
            e.DataBound("onDataBound");
        })
        .Pageable()
        .Sortable()
        .Scrollable()
        .Filterable(filterable => filterable.Extra(false))
        .Pageable(pager => pager
            .Refresh(true)
            .PageSizes(new int[] { 10, 20, 50, 100 })
        )
        .Selectable(select => select.Mode(GridSelectionMode.Single))
        .DataSource(datasource => datasource
            .Ajax()
            .Events(events => events.Error("KendoGridErrorHandler"))
                    .Read(read => read.Action("_ConcernList", "CXConcernMaintenance", new { area = "CX" })
                        .Data(@<text>function(e){return ConcernMaintenanceSearchCriteria()}</text>))
                    .Model(u => u.Id(p => p.ID))
                    .PageSize(10)
                    .Total(Model != null && Model.Count > 0 ? Model[0].TotalRows.Value : 0)
                )
    .Resizable(resize => resize.Columns(true)) .EnableCustomBinding(true) )
</div>
<script type="text/javascript">
    $(function () {
        HandleDblClickOnGrid($("#grdQAConcern"), '.k-grid-View');
        var gridContentHeight = GetWindowHeight() - (
                                        $("#menu-horizontal").height() +
                                        $(".k-toolbar").height() +
                                        $(".k-grid-header").height() +
                                        $(".k-grid-bottom").height() +
                                        $(".footer").height() +
                                        250
                                        );
        $(".k-grid-content").css("height", gridContentHeight + "px");
        

    });

    var concernWindow;

    $("#btnSearch").click(function (e) {
        $('#grdQAConcern').data('kendoGrid').dataSource.read();
    });
    $("#btnReset").click(function (e) {
        $("#ConcernTypeCriteria").data('kendoComboBox').value('');
        $('#grdQAConcern').data('kendoGrid').dataSource.read();
    });
</script>
</form>
