@using Kendo.Mvc.UI
@using Martex.DMS.DAL;
@model int
@{
    string vendorID = Model.ToString();
}
<script type="text/javascript">
    function GrdVendorClaims_ViewVendorClaimDetails(e) {
        if (e != null) {
            e.preventDefault();
            if (e.data.commandName == 'View') {
                openAlertMessage('Functionality is yet to determine');
            }
        }
    }

    function VendorClaims_Databound(e) {
        $(".k-grid-View").addClass("with-tooltip").html("<span class='k-icon k-i-search'/>");
    }

    $(function () {
        $("#GrdVendorClaims_" + '@vendorID').delegate("tbody>tr", "dblclick", function () {
            $(this).find('.k-grid-View').click();
        });

    });
</script>
<div class="with-padding">
    <div class="columns">
        <div class="new-row twelve-columns">
            <div class="small-margin-top">
                <div class="tabs-content">
                    @(Html.Kendo().Grid<Vendor_Claims_Result>()
                      .Name("GrdVendorClaims_" + vendorID)
                .Columns(column =>
                {
                    column.Bound(c => c.ClaimType).Title("Claim Type").Width(100);
                    column.Bound(c => c.ClaimID).Title("Claim #").Width(100);
                    column.Bound(c => c.ClaimDate).Format("{0:MM/dd/yyyy}").Title("Date").Width(100);
                    column.Bound(c => c.AmountRequested).Title("Req Amt").Format("{0:C}").Width(100);
                    column.Bound(c => c.Payeee).Title("Payee").Width(100);
                    column.Bound(c => c.ClaimStatus).Title("Status").Width(100);
                    column.Bound(c => c.CheckNumber).Title("Check #").Width(100);
                    column.Bound(c => c.PaymentDate).Title("Pay Date").Format("{0:MM/dd/yyyy}").Width(100);
                    column.Bound(c => c.PaymentAmount).Title("Pay Amt").Format("{0:C}").Width(100);
                    column.Bound(c => c.CheckClearedDate).Title("Cleared Date").Format("{0:C}").Width(100);
                    column.Command(command =>
                    {
                        command.Custom("View").Click("GrdVendorClaims_ViewVendorClaimDetails").HtmlAttributes(new { style = "min-width:auto;", title = "View" });
                    })
                    .Width(100)
                    .Title("Action(s)");
                })
                .Pageable()
                .Sortable()
                .Scrollable()
                .Filterable(filterable => filterable
                .Enabled(false)
                )
                .Pageable(pager => pager
                .Refresh(true)
                            .PageSizes(new int[] { 10, 20, 50, 100 })

                )
                .Events(e =>
                {
                    e.DataBound("VendorClaims_Databound");
                })
                .Selectable(select => select.Mode(GridSelectionMode.Single))
                .DataSource(datasource => datasource
                .Ajax()
                .Events(events => events.Error("KendoGridErrorHandler"))
                .Read(read => read.Action("_VendorClaimsRead", "VendorClaims", new { area = "VendorManagement" }).Data(@<text>function()
                    {return {vendorID : '@vendorID'};}</text>))
               )
                .Resizable(resize => resize.Columns(true))
                )
                </div>
            </div>
        </div>
    </div>
</div>
