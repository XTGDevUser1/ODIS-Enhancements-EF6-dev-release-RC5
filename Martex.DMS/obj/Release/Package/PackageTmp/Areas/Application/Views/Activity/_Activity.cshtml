@using Kendo.Mvc.UI
@using Martex.DMS.DAL;
@{
    Layout = "";
}
@{
    //string gridName = "GrdActivity_" + System.Guid.NewGuid().ToString();
    string serviceRequestID = string.Empty;
    string gridTitle = string.Empty;
    if (ViewData["ServiceRequestID"] != null)
    {
        serviceRequestID = ViewData["ServiceRequestID"].ToString();
    }
    string gridName = "GrdActivity_" + System.Guid.NewGuid().ToString();
    if (ViewData["POID"] != null)
    {
        gridName = "GrdActivity_" + ViewData["POID"].ToString();
    }

    if (ViewData["IsCallFrom"].ToString() == "CustomerFeedbackDetails")
    {
        gridTitle = "SR Activity";
    }
    else
    {
        gridTitle = "Activity";
    }
}

<script type="text/javascript">
   
    function unescapeHTML(escapedHTML) {
        //return escapedHTML.replace(/<//g, '').replace(/>/g, '');
        var dummyElement = $('<div/>').html(escapedHTML);

        var formattedString = '';
        var nodesFound = false;
        var tokens = dummyElement.html().split('<br>');

        if (tokens.length > 0) {
            for (var i = 0, l = tokens.length; i < l; i++) {
                dummyElement = $('<div/>').html(tokens[i]);
                dummyElement.find("eventdetail").children().each(function (e) {
                    nodesFound = true;

                    var currentElement = $(this);
                    var localName = currentElement[0].localName.split('_')[0];
                    var localValue = currentElement.html();
                    formattedString += "<br/>" + localName + " : " + localValue;
                });

                if (!nodesFound) {
                    formattedString += dummyElement.html() + '<br/>';
                }
                nodesFound = false;
            }
        }

        return formattedString;
    }
    function UpdateTags() {

        setTimeout(function () {
            $('.QuestionAnswer_RP').each(function () {
                $(this).html(unescapeHTML($(this).html()));
            });

        }, 1000);

        setTimeout(function () {
            $('.QuestionAnswer_RPP').each(function () {
                var string = $(this).html().replace(/&lt;/g, '<').replace(/&gt;/g, '>');
                $(this).html(string);
            });

        }, 1000);

    }
    function GetActivitySearchParams() {

        var filterValue = new Array();
        $('input[name="rbstatus_@gridName"]:checked').each(function () {
            filterValue.push($(this).val());
        });
        var params = {
            filterColumnName: "Type",
            filterColumnValue: filterValue.join()
        };
        return params;
    }
</script>
<style type="text/css">
    .activity-details {
        padding: .8em .6em;
        display: inline-block;
    }

    .activity-details {
        display: block;
    }

        .activity-details:after {
            clear: both;
        }

        .activity-details dl, .activity-details dt, .activity-details dd {
            margin: 0;
            padding: 0;
        }

    latitude {
        margin: 0;
        padding: 2px;
    }

    longitude {
        margin: 0;
        padding: 2px;
    }

    firstname {
        padding: 2px;
    }

    lastname {
        padding: 2px;
    }

    CallbackNumber {
        padding: 2px;
    }

    VehicleType {
        padding: 2px;
    }

    VehicleYear {
        padding: 2px;
    }

    VehicleMake {
        padding: 2px;
    }

    VehicleModel {
        padding: 2px;
    }

    VehicleColor {
        padding: 2px;
    }

    Comments {
        padding: 2px;
    }

    .activity-details img, .activity-details h3, .activity-details dl, .commands {
        float: left;
        clear: none;
        margin: 0 14px 0 0;
    }

    .activity-details h3, .activity-details dl {
        min-height: 100px;
        border-width: 0 1px 0 0;
        background-color: transparent;
        color: inherit;
    }

    .activity-details h3 {
        width: 90px;
        padding: 0;
        font-size: 1.5em;
        padding-right: 20px;
        text-shadow: none;
    }

    .activity-details dt {
        font-weight: bold;
    }

    .field-validation-error {
        position: absolute;
        display: block;
    }

    * html .field-validation-error {
        position: relative;
    }

    * + html .field-validation-error {
        position: relative;
    }

        .field-validation-error span {
            position: absolute;
            white-space: nowrap;
            color: red;
            padding: 17px 5px 3px;
            background: transparent url('<%= Url.Content("~/Content/Common/validation-error-message.png") %>') no-repeat 0 0;
        }
    /* in-form editing */ .t-edit-form-container {
        width: 350px;
        margin: 1em;
    }

        .t-edit-form-container .editor-label, .t-edit-form-container .editor-field {
            padding-bottom: 1em;
            float: left;
        }

        .t-edit-form-container .editor-label {
            width: 30%;
            text-align: right;
            padding-right: 3%;
            clear: left;
        }

        .t-edit-form-container .editor-field {
            width: 60%;
        }

    .rightSide {
        font-weight: bold;
    }


    /*commenttype, sentfrom, messagetext
    {
        padding:4px;
        margin:4px;
    }*/


</style>
<script type="text/javascript">
    function GrdUsers_OnRequestComplete(e) {

        UpdateTags();

        var msgData = $("messagedata");
        msgData.children().each(function (e) {

            var currentElement = $(this);
            var localName = currentElement[0].localName.split('_')[0];
            var localValue = currentElement.html();
            $(this).html(localName + " : " + localValue + "<br/>");
        });
        var rowCount = e.sender.dataSource.total();

        if (rowCount == 0) {
            $(".spcommentcount").html("0");
            $(".spContactLogcount").html("0");
            $(".speventLogcount").html("0");
        }
        if (rowCount > 0) {
            var item = e.sender.dataSource.data()[0];
            $(".spcommentcount").html(item.commentCount);
            $(".spContactLogcount").html(item.ContactLogCount);
            $(".speventLogcount").html(item.EventLogCount);
        }
    }
</script>
<div id="tab-10" class="with-padding">
    <div class="t-toolbar t-grid-toolbar t-grid-top">
        <div class="float-left">
            <p class="button-height">
                <span class="button-group">
                    <label for="display-Comment-@gridName" class="button compact green-active">
                        <span class="count blue-bg spcommentcount">0</span>
                        <input type="checkbox" name="rbstatus_@gridName" id="display-Comment-@gridName" value="Comment" gridID="@gridName" class="rbStatus" />
                        Comments
                    </label>
                    <label for="display-ContactLog-@gridName" class="button compact green-active">
                        <span class="count blue-bg spContactLogcount">0</span>
                        <input type="checkbox" name="rbstatus_@gridName" id="display-ContactLog-@gridName" value="Contact Log" gridID="@gridName" class="rbStatus" />
                        Contacts
                    </label>
                    <label for="display-EventLog-@gridName" class="button compact green-active">
                        <span class="count blue-bg speventLogcount">0</span>
                        <input type="checkbox" name="rbstatus_@gridName" id="display-EventLog-@gridName" value="Event Log" gridID="@gridName" class="rbStatus" />
                        Events
                    </label>
                </span>
            </p>
        </div>
        <div class="clear">
            &nbsp;
        </div>
    </div>
    @(Html.Kendo()
                .Grid<dms_activity_list_Result>()
                .Name(gridName)
                //.EnableCustomBinding(true)
                .DataSource(datasource => datasource
                    .Ajax()
                    .Events(events => events.Error("KendoGridErrorHandler"))
                    .Read(read => read.Action("List", "Activity", new { serviceRequestID = ViewData["ServiceRequestID"] }).Data("GetActivitySearchParams"))
                    .PageSize(50)
                //.Total(Model != null && Model.Count > 0 ? (int)Model[0].TotalRows : 0)
                )
                .Columns(columns =>
                {
                    columns.Bound(a => a.Type).Title(@gridTitle).Encoded(false);
                })
                .Events(events =>
                {
                    events.DataBound("GrdUsers_OnRequestComplete");
                })
                .ClientRowTemplate(
                "<tr>" +
                    "<td>" +
                        "#if(Type == \"Event Log\"){ #" +
                            "<div class='activity-details'>" +
                                "<h3 class='mid-margin-top'><span class='icon-calendar icon-size4 anthracite'></span></h3>" +
                                "<div style='float:left;min-width:50%;max-width:50%;word-wrap:break-word;padding-right:5px;' class='QuestionAnswer_RP'>" +
                                    "#if(Description != null){##=Description##}#<br/>#if(Comments != null){##=Comments##}#" +
                                "</div>" +
                                "<div style='float:left;min-width:30%;'>" +
                                    "#=FormattedCreateDate#<br/>#=CreateBy#(#=RoleName#-#=OrganizationName#)" +
                                "</div></div>" +
                        "#}" +
                        "else if(Type == \"Comment\")" +
                        "{#" +
                            "<div class='activity-details'>" +
                                "<h3 class='mid-margin-top'><span class='icon-speech icon-size4 anthracite '></span></h3>" +
                                "<div style='float:left;min-width:50%;max-width:50%;word-wrap:break-word;padding-right:5px;'>" +
                                    "#=Type#<br/>#=Name#<br/>#=Description#" +
                                "</div>" +
                            "<div style='float:left;min-width:30%;'>" +
                                "#=FormattedCreateDate# <br/> #=CreateBy#(#=RoleName#-#=OrganizationName#)" +
                            "</div></div>" +
                        "#}" +
                        "else if(Type == \"Contact Log\")" +
                        "{#" +
                            "<div class='activity-details'>" +
                                "<h3 class='mid-margin-top'><span class='icon-card icon-size4 '></span> </h3>" +
                                "<div style='float:left;min-width:50%;max-width:50%;word-wrap:break-word;padding-right:5px;' class='QuestionAnswer_RP'>" +
                                "#if(ContactMethodClassName != null) {# <span class='#=ContactMethodClassName#'></span> #}#" +
                                "#if(Description != null){##=Description# <br/>#}#" +
                                                "#if(TypeDescription != null){##=TypeDescription#<br/>#}#" +
                                "#if(Company != null){##=Company#<br/>#}#" +
                                "#if(TalkedTo != null){##=TalkedTo#<br/>#}#" +
                                "#if(PhoneNumber != null){##=PhoneNumber#<br/>#}#" +
                                "#if(Comments != null){##=Comments#<br/>#}#" +
                                "&nbsp;#if(QuestionAnswer != null){#<div class='QuestionAnswer_RPP'>#=QuestionAnswer#</div>#}#" +
                            "</div>" +
                            "<div style='float:left;min-width:30%; max-width : 30%'>" +
                                "#=FormattedCreateDate# <br/> #=CreateBy#(#=RoleName#-#=OrganizationName#)" +
                                "<br/><strong>Reason(s):</strong><br/>#=ContactReason#" +
                                "<br/><strong>Action(s):</strong><br/>#=ContactAction#" +
                                "<br/><strong>ConnectContactID(s):</strong><br/><a target='_blank' href = " + @ViewData["AmazonConnectURL"] +"#=ConnectContactID#>#=ConnectContactID#</ a >" +
                        "</div></div>" +
                    "#}#</td></tr>"
            )
            .Pageable()
            .Scrollable()
    )
</div>
<script type="text/javascript">

    function LogActivity() {
        var retVal = false;

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateActivityStatus", "Activity", new { area = "Application" })',
            traditional: true,
            cache: false,
            async: false,
            success: function (msg) {
                retVal = true;
                StyleTabAfterValidation("activity", false);
            }
        });


        return retVal;
    }

    // See if this is rendered in SR popup and turn off setting tab status
    if (typeof isInSRPopup == "undefined" || !isInSRPopup) {

        fnSaveTab = LogActivity;
    }

    $(function () {
        UpdateTags();

        var gridContentHeight = GetWindowHeight() - (
                                        $("#menu-horizontal").height() +
                                        $(".k-toolbar").height() +
                                        $(".k-grid-header").height() +
                                        $(".k-grid-bottom").height() +
                                        $(".footer").height() +
                                        200
                                        );
        $("#@gridName>.k-grid-content").css("height", gridContentHeight + "px");

        $('input[name="rbstatus_@gridName"]').click(function (e) {
            var gridName = $(this).attr("gridID");

            $('#' + gridName).data('kendoGrid').dataSource.read();
            UpdateTags();
        });
    });
</script>
