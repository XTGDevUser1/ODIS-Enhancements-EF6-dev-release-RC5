@model Martex.DMS.DAL.Vehicle
@using Martex.DMS.Areas.Application.Models;
@using Kendo.Mvc.UI
@{
    string suffixMembershipID = ViewData["MembershipID"].ToString();
    bool isHagerty = false;
    bool someRequired = false;
    ViewData["UniqueID"] = suffixMembershipID;
}
<script type="text/javascript">

    var IsBasicInformationLoadingFirstTime = true;

    function BindModel(selectedModel, uniqueID) {
        // Fire an AJAX request to bind the Model dropdown.
        var vehicleModelCombo = $('#Model_' + uniqueID).data('kendoComboBox');
        var VehicleMake_value = $('#Make_' + uniqueID).data('kendoComboBox').value();
        var VehicleYear_value = $('#Year_' + uniqueID).data('kendoComboBox').value();
        var weightCombo = $('#VehicleCategoryID_' + uniqueID).data('kendoComboBox');

        if (VehicleMake_value != null /*&& VehicleYear_value != null*/) {
            if (VehicleMake_value != '' /*&& VehicleYear_value != ''*/) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("_GetComboVehicleStringModel", "EmergencyAssistance", new { area = "Common" })',
                    traditional: true,
                    data: { Make: $('#Make_' + uniqueID).data('kendoComboBox').value() /*, year: $('#Year_' + uniqueID).data('kendoComboBox').value() */},
                    cache: false,
                    async: true,
                    success: function (msg) {
                        msg.push({ Selected: "False", Text: "Other", Value: "Other" });
                        vehicleModelCombo.setDataSource(msg);
                        if (selectedModel == null) {
                            // Reset Model, Weight class
                            vehicleModelCombo.value('');
                            weightCombo.select(0);
                            $("#MakeOther_" + uniqueID).val("");
                            $("#ModelOther_" + uniqueID).val("");
                        }
                        else {
                            vehicleModelCombo.value(selectedModel);

                            var _vehicleCategoryID = parseInt('@Model.VehicleCategoryID.GetValueOrDefault()');
                            if (isNaN(_vehicleCategoryID)) { _vehicleCategoryID = 0; }

                            if (IsBasicInformationLoadingFirstTime == true) {
                                IsBasicInformationLoadingFirstTime = false;
                                if (_vehicleCategoryID == 0) {
                                    SetDefaultWeight(uniqueID);
                                }
                            }
                            else {
                                SetDefaultWeight(uniqueID);
                            }
                        }
                        SetFocusOnField("Model");

                        if (VehicleMake_value == 'Other') {
                            $('#divMakeOther_' + uniqueID).show();
                            $('input[name="MakeOther"]').focus();
                            $('input[name="MakeOther"]').select();
                        }
                        else {
                            $("#MakeOther_" + uniqueID).val("");
                            $('#divMakeOther_' + uniqueID).hide();
                        }

                        if (selectedModel == 'Other') {
                            $('#divModelOther_' + uniqueID).show();
                            $('input[name="ModelOther"]').focus();
                            $('input[name="ModelOther"]').select();
                        }
                        else {
                            $("#ModelOther_" + uniqueID).val("");
                            $('#divModelOther_' + uniqueID).hide();
                        }
                    }
                });      // end of ajax
            }
            else {
                var placeHolder = []; //[{ Selected: "True", Text: "Select Model", Value: ""}];
                if (selectedModel == "Other") {
                    placeHolder = [{ Selected: "True", Text: "Other", Value: "Other" }];
                    vehicleModelCombo.setDataSource(placeHolder);
                }
                else {
                    vehicleModelCombo.setDataSource(placeHolder);
                    vehicleModelCombo.text("");
                }

                weightCombo.text("");
                weightCombo.select(0);
                SetFocusOnField("Model");
            }
        }


        if (VehicleMake_value == 'Other') {
            $('#divMakeOther_' + uniqueID).show();
            $("#MakeOther_" + uniqueID).focus();
        }
        else {
            $("#MakeOther_" + uniqueID).val("");
            $('#divMakeOther_' + uniqueID).hide();
        }

        if (selectedModel == 'Other') {
            $('#divModelOther_' + uniqueID).show();
            $("#ModelOther_" + uniqueID).focus();
        }
        else {
            $("#ModelOther_" + uniqueID).val("");
            $('#divModelOther_' + uniqueID).hide();
        }
    }
    function onComboBoxChange_VehicleMake(e, uniqueID) {

        var combo = e.sender;
        // PV: Validate user input on Telerik dropdowns
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }

        else {
            BindModel(null, uniqueID);
        }
        //PV
    }
    function onComboBoxChange_VehicleModelCombo(e, uniqueID) {
        var combo = e.sender;
        // PV: Validate user input on Telerik dropdowns
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }
        else {
            SetDefaultWeight(uniqueID);
        }
        //PV

        var vehicleModelCombo = $('#Model_' + uniqueID).data('kendoComboBox').text();
        if (vehicleModelCombo == 'Other') {
            $('#divModelOther_' + uniqueID).show();
        }
        else {
            $('#divModelOther_' + uniqueID).hide();
        }
    }


    function Year_OnChange(e, uniqueID) {

        var combo = e.sender;

        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }
        @*var vehicleMakeCombo = $('#Make_' + uniqueID).data('kendoComboBox');
        var vehicleModelCombo = $('#Model_' + uniqueID).data('kendoComboBox');
        var weightCombo = $('#VehicleCategoryID_' + uniqueID).data('kendoComboBox');

        if (combo.value() != '' && combo.value() != ' ' && combo.value() != null && combo.value() != 'Select Year') {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("_GetComboVehicleMake", "EmergencyAssistance", new { area = "Common" })',
                traditional: true,
                data: { Year: combo.value(), vehicleType: "1" },
                cache: false,
                async: true,
                success: function (msg) {

                    vehicleMakeCombo.setDataSource(msg);
                    vehicleMakeCombo.value('');

                    vehicleModelCombo.setDataSource([]);
                    vehicleModelCombo.value('');


                    weightCombo.select(0);
                    $("#MakeOther_" + uniqueID).val("");
                    $("#ModelOther_" + uniqueID).val("");

                    $('#divMakeOther_' + uniqueID).hide();
                    $('#divModelOther_' + uniqueID).hide();

                    SetFocusOnField("Make");
                }
            });
        }
        else {
            vehicleMakeCombo.setDataSource([]);
            vehicleMakeCombo.text("");

            vehicleModelCombo.setDataSource([]);
            vehicleModelCombo.text("");

            weightCombo.select(0);

            $("#MakeOther_" + uniqueID).val("");
            $("#ModelOther_" + uniqueID).val("");

            $('#divMakeOther_' + uniqueID).hide();
            $('#divModelOther_' + uniqueID).hide();
        }*@
    }


    function SetDefaultWeight(uniqueID) {
        var selectModel = $('#Model_' + uniqueID).data('kendoComboBox').value();
        var selectMake = $('#Make_' + uniqueID).data('kendoComboBox').value();
        var weightCombo = $('#VehicleCategoryID_' + uniqueID).data('kendoComboBox');
        if ($.trim(selectMake).length > 0 && $.trim(selectModel).length > 0) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("_GetAutoDefaultWeight", "Vehicle", new { area = "Application" })',
                traditional: true,
                data: { make: selectMake, model: selectModel },
                cache: false,
                async: true,
                success: function (msg) {
                    if (msg.Data != null) {
                        weightCombo.value(msg.Data);
                    }
                    else {
                        weightCombo.select(0);
                    }

                    if (selectModel == 'Other') {
                        $('input[name="ModelOther_' + uniqueID + '"]').focus();
                        $('input[name="ModelOther_' + uniqueID + '"]').select();
                    }
                    else {
                        SetFocusOnField("VehicleCategoryID");
                    }
                }
            });
        }
        else {
            weightCombo.select(0);
        }
    }
</script>
<div class="four-columns float-left">
    <fieldset class="fieldset">
        <legend class="legend">Automobile Basic Information</legend>
        @Html.Hidden("vehicleID", Model.ID, new { id = "vehicleID_" + suffixMembershipID })
        @if (!isHagerty)
        {
            <div>
                <p class="button-height inline-label small-margin-bottom">
                    <label for="VIN" class="label">
                        VIN
                        @if (someRequired)
                        { <text>*</text>}
                    </label>
                    @Html.TextBoxFor(v => v.VIN, new { @class = "validate[funcCall[checkVIN]] input full-width2", id = "VIN_" + suffixMembershipID })
                </p>
            </div>
        }
        <div class="button-height inline-label small-margin-bottom">
            <label for="Year" class="label">
                Year<span class="spanstar">*</span>
            </label>
            @(Html.Kendo().ComboBox()
                .Name("Year")
                .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.VehicleModelYear.ToString()] as IEnumerable<SelectListItem>)
                .Placeholder("Select Year")
                .Suggest(true)
                .Filter(FilterType.StartsWith).MinLength(0)
                         .Events(events =>
                         {
                             events.Change(@<text> function(e){ return Year_OnChange(e,'@suffixMembershipID'); }</text>);
                         })
                                         .DataValueField("Value")
                                         .DataTextField("Text")
                                         .HighlightFirst(true)
                                         .Value(Model.Year)
                                         .HtmlAttributes(new { id = "Year_" + suffixMembershipID })
            )
        </div>
        <div class="button-height inline-label small-margin-bottom">
            <label for="Make" class="label">
                Make<span class="spanstar">*</span>
            </label>
            @(Html.Kendo().ComboBox()
                .Name("Make")
                .Suggest(true)
                .Filter(FilterType.StartsWith).MinLength(0)
                .Placeholder("Select Make")
                        .Events(events => events.Change(@<text> function(e){ return onComboBoxChange_VehicleMake(e,'@suffixMembershipID'); }</text>).DataBound("DefaultDataBoundToAdjustContainerWidth"))
                                                .DataValueField("Value")
                                                .DataTextField("Text")
                                                .HighlightFirst(true)
                                                .Value(Model.Make)
                                 .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.VehicleMake.ToString()] as IEnumerable<SelectListItem>)
                                         .HtmlAttributes(new { id = "Make_" + suffixMembershipID })
            )
        </div>
        <div id="divMakeOther_@suffixMembershipID" style="display: none;">
            <p class="button-height inline-label small-margin-bottom">
                <label for="MakeOther" class="label">
                    if Other<span class="spanstar">*</span>
                </label>
                @Html.TextBoxFor(v => v.MakeOther, new { @class = "validate[maxSize[50] input", id = "MakeOther_" + suffixMembershipID })
            </p>
        </div>
        <div class="button-height inline-label small-margin-bottom">
            <label for="Model" class="label">
                Model<span class="spanstar">*</span>
            </label>
            @(Html.Kendo().ComboBox()
                .Name("Model")

                .Placeholder("Select Model")
                .Suggest(true)
                .Filter(FilterType.StartsWith).MinLength(0)
                .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.VehicleModel.ToString()] as IEnumerable<SelectListItem>)
                .Events(events =>
                {
                    events.Change(@<text> function(e){ return onComboBoxChange_VehicleModelCombo(e,'@suffixMembershipID'); }</text>);
                    events.DataBound("DefaultDataBoundToAdjustContainerWidth");
                })
                                                .DataValueField("Value")
                                                .DataTextField("Text")
                                                .HighlightFirst(true)
                                                .Value(Model.Model)
                                                .HtmlAttributes(new { id = "Model_" + suffixMembershipID })
            )
        </div>
        <div id="divModelOther_@suffixMembershipID" style="display: none;">
            <p class="button-height inline-label small-margin-bottom">
                <label for="ModelOther" class="label">
                    if Other<span class="spanstar">*</span>
                </label>
                @Html.TextBoxFor(v => v.ModelOther, new { @class = "validate[maxSize[50]] input full-width2", id = "ModelOther_" + suffixMembershipID })

            </p>
        </div>
        @{
            var iEnumList = ViewData[Martex.DMS.ActionFilters.StaticData.Colors.ToString()] as IEnumerable<SelectListItem>;
            List<string> colors = (from n in iEnumList
                                   select n.Text).ToList<string>();
        }
        <div class="button-height inline-label small-margin-bottom">
            <label for="Category" class="label">
                Weight Class
            </label>
            @(Html.Kendo().ComboBox()
             .Name("VehicleCategoryID")

                     .Suggest(true)
                     .Filter(FilterType.StartsWith).MinLength(0)
                     .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.VehicleCategory.ToString()] as IEnumerable<SelectListItem>)
                     .Events(events =>
                     {
                         events.Change("ValidateInputForKendoCombo");
                     })
                      .DataValueField("Value")
                      .DataTextField("Text")
                      .HighlightFirst(true)
                      .Value(Model.VehicleCategoryID == null ? string.Empty : Model.VehicleCategoryID.Value.ToString())
                      .HtmlAttributes(new { id = "VehicleCategoryID_" + suffixMembershipID })
            )
        </div>
        <div class="button-height inline-label small-margin-bottom">
            <label for="Color" class="label">
                Color
            </label>
            @(Html.Kendo().AutoComplete()
                          .Name("Color")
                                  .HtmlAttributes(new { @class = "input full-width2", @maxLength = 50 })
                          .Value(Model.Color)
                          .Suggest(true)
                          .HighlightFirst(true)
                          .Filter(FilterType.StartsWith).MinLength(0)
                          .BindTo(colors)

            )
        </div>
        @if (!isHagerty)
        {
            <div>
                <p class="button-height inline-label small-margin-bottom">
                    <label for="Mileage" class="label">
                        Mileage
                        @if (someRequired)
                        { <text>*</text>}
                    </label>
                    @Html.TextBoxFor(v => v.CurrentMileage, new { @class = "validate[custom[integer] maxSize[10]] input full-width2 basicMileage", id = "CurrentMileage_" + suffixMembershipID })
                </p>
            </div>



            @Html.Partial("_VehicleLicenseState", Model, ViewData)
            <div>
                <p class="button-height inline-label small-margin-bottom">
                    <label for="LicenseNumber" class="label">
                        License Number
                    </label>
                    @Html.TextBoxFor(v => v.LicenseNumber, new { @class = "validate[maxSize[20]] input full-width2", style = "text-transform:uppercase;", id = "LicenseNumber_" + suffixMembershipID })
                </p>
            </div>
        }
        <div>
            <p class="button-height inline-label small-margin-bottom">
                <label for="Description" class="label">
                    Description @Html.Partial("_Help", "Put additional vehicle notes here, these will be printed on the PO")
                </label>
                @Html.TextAreaFor(v => v.Description, new { @class = "validate[maxSize[255]] input full-width2", id = "Description_" + suffixMembershipID })
            </p>
        </div>
        <div>
            <p class="button-height inline-label small-margin-bottom">
                <label for="Source" class="label">
                    Source
                </label>
                @Html.LabelFor(v => v.Source, Model.Source)
                @Html.HiddenFor(v => v.VehicleTypeID, new { id = "VehicleTypeID_" + suffixMembershipID })
                @Html.HiddenFor(v => v.Source, new { id = "Source_" + suffixMembershipID })
            </p>
        </div>
    </fieldset>
</div>
<script type="text/javascript">
<!--
    $(function () {


        var yearValue = '@Model.Year';
        var makeValue = '@Model.Make';
        var modelValue = '@Model.Model';
        if (modelValue.length > 0) {
            setTimeout(function () {
                BindModel(modelValue, '@suffixMembershipID');

            }, 1500);
        }
        //TODO: Fix this to use ids.
        $('.basicMileage').change(function () {
            var uniqueId = $(this).attr("ID");
            var that = $(this);
            $(".warranty").each(function () {
                if ($(this).attr("ID") == uniqueId) {
                    $(this).val(that.val())
                }
            });

        });

        var vehicleModelCombo = $('#Model_@suffixMembershipID').data('kendoComboBox').text();
        if (vehicleModelCombo == 'Other') {
            $('#divModelOther_@suffixMembershipID').show();
        }
        else {
            $('#divModelOther_@suffixMembershipID').hide();
        }
    });
//-->
</script>
