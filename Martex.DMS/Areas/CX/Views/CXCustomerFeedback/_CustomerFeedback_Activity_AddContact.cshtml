@using Kendo.Mvc.UI;
@model Martex.DMS.DAL.Entities.Activity_AddContact
@using System.Collections
@using Martex.DMS.ActionFilters;
@{
    var suffixCustomerFeedbackID = ViewData["CustomerFeedbackID"].ToString();
}
<form id="formAddCustomerFeedbackActivityContact_@suffixCustomerFeedbackID" action="javascript:void(0)" method="post">
  <fieldset class="fieldset">
    <legend class="legend">Add Contact</legend>
    <div class="with-padding">
      <div class="columns">
        <div class="seven-columns">
          <p class="button-height inline-label small-margin-bottom">
            <label for="CustomerFeedbackIsDispatchOrServiceLocation" class="label">
              Direction <span class="star">*</span>
            </label>
            @Html.RadioButtonFor(u => u.IsInbound, true, new { @class = "radio", id = "IsInbound_" + suffixCustomerFeedbackID })
            <b>Inbound</b>
            @Html.RadioButtonFor(u => u.IsInbound, false, new { @class = "radio", id = "IsInbound_" + suffixCustomerFeedbackID })
            <b>Outbound</b>
          </p>
          <div class="button-height inline-label small-margin-bottom">
            <label for="ContactCategory" class="label">
              Contact Category<span class="star"> *</span>
            </label>
            @(Html.Kendo().ComboBox()
                    .BindTo(ViewData[StaticData.ContactCategory.ToString()] as IEnumerable<SelectListItem>)
                            .Name("ContactCategory_" + suffixCustomerFeedbackID)
                    .SelectedIndex(0)
                    .HtmlAttributes(new { style = "width:100%" })
                    .HighlightFirst(true)
                            .Suggest(true)
                    .Filter(FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change(@<text>function(e){HandleCustomerFeedbackContactCategoryChange(e,'@suffixCustomerFeedbackID');}</text>))
                    .Value(Model.ContactMethod == null ? string.Empty : Model.ContactMethod.Value.ToString())
            )
          </div>
          <div class="button-height inline-label small-margin-bottom">
            <label for="ContractReasonID" class="label">
              Reason(s)<span class="star"> *</span>
            </label>
            @(Html.Kendo().MultiSelectFor(u => u.ContactReasonID)
                    .Placeholder("Select Contact Reason")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .HtmlAttributes(new { id = "ContactReasonID_" + suffixCustomerFeedbackID })
                    .Value(Model.ContactReasonIDValuesForCombo)
            )
          </div>
          <div class="button-height inline-label small-margin-bottom">
            <label for="ContractActionID" class="label">
              Action(s)<span class="star"> *</span>
            </label>
            @(Html.Kendo().MultiSelectFor(u => u.ContactActionID)
                    .Placeholder("Select Contact Action")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .HtmlAttributes(new { id = "ContactActionID_" + suffixCustomerFeedbackID })
                    .Value(Model.ContactActionIDValuesForCombo)
            )
          </div>
          <div class="button-height inline-label small-margin-bottom">
            <label for="ContactMethod" class="label">
              Contact Method<span class="star"> *</span>
            </label>
            @(Html.Kendo().ComboBox()
                    .BindTo(ViewData[StaticData.ContactMethod.ToString()] as IEnumerable<SelectListItem>)
                    .Name("ContactMethod_" + suffixCustomerFeedbackID)
                    .SelectedIndex(0)
                    .HtmlAttributes(new { style = "width:100%" })
                    .HighlightFirst(true)
                    .Suggest(true)
                    .Filter(FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change(@<text>function(e){HandleCustomerFeedbackContactMethodChange(e,'@suffixCustomerFeedbackID');}</text>))
                    .Value(Model.ContactMethod == null ? string.Empty : Model.ContactMethod.Value.ToString())
            )
          </div>
          <div id="divCustomerFeedbackActivityAddContactMethodPhone_@suffixCustomerFeedbackID" style="display:none">
            <div class="button-height inline-label small-margin-bottom">
              <label for="TalkedTo" class="label">
                Talked To<span class="star"> *</span>
              </label>
              @Html.TextBox("TalkedTo_" + suffixCustomerFeedbackID, Model.TalkedTo, new { @class = "validate[required, maxSize[100]] input full-width2", style = "width : 100%" })
            </div>
            <div class="button-height inline-label small-margin-bottom">
              <label for="PhoneNumber" class="label">
                Phone Number <span class="star">*</span>
              </label>
              @Html.Editor("PhoneNumber_" + suffixCustomerFeedbackID, "Phone", new { ShowPhoneType = true, IsRequired = true })
            </div>
          </div>
          <div id="divCustomerFeedbackActivityAddContactMethodEmail_@suffixCustomerFeedbackID" style="display:none">
            <div class="button-height inline-label small-margin-bottom">
              <label for="Email" class="label">
                Email<span class="star"> *</span>
              </label>
              @Html.TextBox("Email_" + suffixCustomerFeedbackID, Model.Email, new { @class = "validate[required,custom[email], maxSize[100]] input full-width2", style = "width : 100%" })
            </div>
          </div>
        </div>
        <div class="five-columns">
          <div class="button-height inline-label small-margin-bottom">
            <label for="Notes" class="label">
              Notes
            </label>
          </div>
          <div class="button-height small-margin-bottom">
            @Html.TextArea("Notes_" + suffixCustomerFeedbackID, new { @class = "validate[maxSize[2000]]input full-width2", rows = "10", cols = "30", style = "width : 100%" })
          </div>
          <div>
            <button id="btnSaveCustomerFeedbackActivityContact_@suffixCustomerFeedbackID" class="button green-gradient float-right" type="button" onclick="SaveCustomerFeedbackActivityContact(this,@suffixCustomerFeedbackID)">
              Save
            </button>
            <button id="btnCancelCustomerFeedbackActivityContact_@suffixCustomerFeedbackID" class="button white-gradient float-right" type="button" onclick="closeAddCustomerFeedbackActivityContactWindow(this,@suffixCustomerFeedbackID)">
              Cancel
            </button>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</form>
<script type="text/javascript" language="javascript">
    $(function () {
      $("#formAddCustomerFeedbackActivityContact_@suffixCustomerFeedbackID").validationEngine();
    });
</script>
