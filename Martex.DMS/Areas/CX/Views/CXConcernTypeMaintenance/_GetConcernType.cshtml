@model Martex.DMS.DAL.ConcernType
@using Kendo.Mvc.UI;
@{
    bool isEdit = false;
    bool isView = false;
    if (ViewData["mode"].ToString().Equals("edit") || ViewData["mode"].ToString().Equals("view"))
    {
        isEdit = true;
        if (ViewData["mode"].ToString().Equals("view"))
        {
            isView = true;
        }
    }
}
<form method="post" action="" id="frmConcernType">
<div class="with-padding-with-panels">
    <fieldset class="fieldset">
        <legend class="legend">Concern Type</legend>
        <div>
            
            <p class="inline-label">
                <label for="UserName" class="label">
                    Name<span class="spanstar red">*</span></label>
                @if (isView)
                {
                    @Html.TextBoxFor(u => u.Name, new { @class = "input full-width2", disabled = "disabled", @readonly = "readonly" })
                }
                else
                {
                    @Html.TextBoxFor(u => u.Name, new { @class = "validate[required,maxSize[50],noSpace], input full-width2", maxlength = 50 })
                }
            </p>
            <p class="inline-label">
                <label for="UserName" class="label">
                    Description<span class="spanstar red">*</span></label>
                @if (isView)
                {
                    @Html.TextBoxFor(u => u.Description, new { @class = "input full-width2", disabled = "disabled", @readonly = "readonly" })
                }
                else
                {
                    @Html.TextBoxFor(u => u.Description, new { @class = "validate[required,maxSize[255]], input full-width2", maxlength = 255 })
                }
            </p>
            <p class="inline-label">
                <label for="UserName" class="label">
                    Sequence</label>
                @if (isView)
                {
                    @Html.Kendo().NumericTextBoxFor(v => v.Sequence).Format("N0").Spinners(false).Enable(false)
                }
                else
                {
                    @Html.Kendo().NumericTextBoxFor(v => v.Sequence).Format("N0").Spinners(false)//.HtmlAttributes(new { @class = "full-width"})
                }
            </p>
            <p class="inline-label">
                <label for="UserName" class="label">
                    Is Active
                </label>
                @if (isView)
                {
                    @Html.CheckBox("IsActive", (Model != null ? Model.IsActive.GetValueOrDefault() : false), new { @class = "checkbox", disabled = "disabled", @readonly = "readonly" })

                }
                else
                {
                    @Html.CheckBox("IsActive", (Model != null ? Model.IsActive.GetValueOrDefault() : false), new { @class = "checkbox" })

                }
            </p>
            @Html.HiddenFor(u => u.ID)
            <div>
                @if (@ViewData["mode"].ToString() != "view")
                {
                    <button id="btnAddConcernType" class="button green-gradient glossy float-right mid-margin-left"
                        type="submit">
                        @if (isEdit)
                        {
                            @Html.Raw("Update")
                        }
                        else
                        {
                            @Html.Raw("Add")
                        }
                    </button>
                }
                <button id="btnCancelConcernType" class="button gray-gradient glossy  float-right"
                    type="button">
                    Cancel
                </button>
            </div>
        </div>
    </fieldset>
</div>
@Html.Hidden("hdnfldMode", ViewData["mode"])
<script type="text/javascript">
    $(function () {
        CleanMyContainer('frmConcernType');
        WatchMyContainer('frmConcernType');
        $("#frmConcernType").validationEngine();


    });
    $('#btnCancelConcernType').die('click');
    $('#btnCancelConcernType').live('click', function (e) {
        if (!e.isDefaultPrevented()) {
            e.preventDefault();
            $('#frmConcernType').validationEngine('hideAll');
            document.dialogResult = "CANCEL";
            concernTypeWindow.data('kendoWindow').close();
        }
    });

    $('#btnAddConcernType').die('click');
    $('#btnAddConcernType').live('click', function (e) {
        if (!e.isDefaultPrevented()) {
            e.preventDefault();
            document.dialogResult = "OK";
            // Fire the validators on the themed multi-select controls and present validation error messages
            if ($("#frmConcernType").validationEngine('validate') == false) {
                return false;
            }
            var postData = $("#frmConcernType").serializeArray();
            var mode = $("#hdnfldMode").val();
            // This is where you may do your AJAX call, for instance:
            $.ajax({
                type: 'POST',
                url: '@Url.Action("_SaveConcernType", "CXConcernTypeMaintenance", new { area = "CX" })',
                traditional: true,
                cache: false,
                async: false, data: postData,
                success: function (json) {
                    if (json.Status == "Success") {
                        if (mode == "add") {
                            openAlertMessage('ConcernType successfully added!');
                        }
                        else if (mode == "edit") {
                            openAlertMessage('ConcernType successfully updated!');
                        }
                        $('#frmConcernType').validationEngine('hideAll');
                        concernTypeWindow.data('kendoWindow').close();
                        $('#grdQAConcernType').data('kendoGrid').dataSource.read();
                    }
                }
            });
        }

        return false;
    });
</script>
</form>
