@using Martex.DMS.DAL.Entities.Clients;
@using Kendo.Mvc.UI
@using Martex.DMS.DAL;
@model ClientBillableEventProcessingSearchCriteria
@{
    int i = 0;
    string userId = System.Web.Security.Membership.GetUser(true).ProviderUserKey.ToString();
    string uniqueID = System.Guid.NewGuid().ToString();
    string pageName = "ClientBillableEventProcessing";
    string JSMethodNameToCollectData = "GetClientBillableEventProcessingSearchCriteria";
    string tragetSaveMethodName = "SaveFilterSearchCriteriaForClientBillableEventProcessing";
    string applyCallBackFuntion = "LoadClientBillableEventProcessingPredefinedViews";
}
<script type="text/javascript">
    function Client_onChange(e) {
        var combo = $("#Client_Search_ClientID").data('kendoComboBox');
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }

        var comboBillingDefinition = $("#Billing_Definition_InvoiceID").data('kendoComboBox');
        $.ajax({
            url: '@Url.Action("GetBillingDefinitionInvoice", "ReferenceData", new { area = "Common" })',
            data: { clientID: combo.value() },
            success: function (msg) {
                comboBillingDefinition.setDataSource(msg);
                comboBillingDefinition.select(0);
                SetFocusOnField("Billing_Definition_InvoiceID");
                ReloadBillingDefinitionInvoice();
            }

        })

       
    }

    function ReloadBillingDefinitionInvoice() {
        var comboBillingDefinition = $("#Billing_Definition_InvoiceID").data('kendoComboBox');
        $.ajax({
            url: '@Url.Action("_BillingDefinitionInvoiceLine", "ClientBillableEventProcessing", new { area = "ClientManagement" })',
            data: { recordID: comboBillingDefinition.value() },
            success: function (msg) {
                $('#chkBillingDefinitionInvoiceLines').html(msg);
            }

        })
    }

    function BillingDefinition_onChange(e) {
        var combo = $("#Billing_Definition_InvoiceID").data('kendoComboBox');
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }

        ReloadBillingDefinitionInvoice();
    }
</script>
<form id="frmClientBillableEventProcessingSearchCriteria" action="javascript:void(0)"
method="post">
@Html.Hidden("ClientBillableEventProcessingViewID", string.Empty)
@Html.HiddenFor(u => u.GridSortOrder)
@Html.HiddenFor(u => u.GridSortColumnName)
@Html.HiddenFor(u => u.ResetModelCriteria)
@Html.HiddenFor(u => u.PanelItemsSelected)
@Html.HiddenFor(u => u.PanelViewsSelected)
@Html.HiddenFor(u => u.PanelScheduleTypeSelected)
@Html.HiddenFor(u => u.PanelInvoiceDefinitionSelected)
@Html.HiddenFor(u => u.PanelBillingEventSelected)
@Html.HiddenFor(u => u.PanelDetailStatusSelected)
@Html.HiddenFor(u => u.PanelDispositionStatusSelected)
@(Html.Kendo().PanelBar()
    .Name("panelbarSearchCriteria")
    .ExpandMode(PanelBarExpandMode.Multiple)
    .Events(events => events.Collapse("fnPanelCollapseR").Expand("fnPanelExpandR"))
    .Items(panelbar =>
    {
        panelbar.Add().Text("Search").Content(
             @<div class="with-padding">
                 <p class="button-height">
                      <a href="javascript:void(0)" class="button icon-search big green-gradient full-width" onclick="GetSelectedCriteria();">Search
                     </a>
                 </p>
             </div>
             ).Expanded(true).LinkHtmlAttributes(new { id = "Panel_PanelSearch" });

        panelbar.Add().Text("Views").Content(
        @<div class="with-padding small-margin-right">
            @Html.Editor("FilterView", "FilterView", new
           {
               filterView = new Martex.DMS.DAL.Entities.FilterViewEntity(pageName, userId, applyCallBackFuntion, uniqueID, tragetSaveMethodName, JSMethodNameToCollectData)
           })
        </div>
).Expanded(Model.PanelViewsSelected.HasValue ? Model.PanelViewsSelected.Value : true).LinkHtmlAttributes(new { id = "Panel_PanelViewsSelected" });


        panelbar.Add().Text("Items Selected").Content(
              @<div class="with-padding" id="clientBillableEventProcessingSelectedSearchCriteriaDetails">
                  @Html.Partial("_SelectedCriteria", Model)
              </div>
    ).Expanded(Model.PanelItemsSelected.HasValue ? Model.PanelItemsSelected.Value : true).LinkHtmlAttributes(new { id = "Panel_PanelItemsSelected" });

        panelbar.Add().Text("Schedule Type").Content(
              @<div class="with-padding">
                  <div class="button-height inline-label small-margin-bottom">
                      <label class="label">
                          Type
                      </label>
                      @(Html.Kendo().ComboBoxFor(u => Model.BillingScheduleType)
                    .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.BillingScheduleType.ToString()] as IEnumerable<SelectListItem>)
                    .SelectedIndex(0)
                    .HighlightFirst(true)
                    .Suggest(true)
                    .Filter(FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change("ValidateInputForKendoCombo").DataBound("DefaultDataBoundToAdjustContainerWidth"))
                    .Value(Model.BillingScheduleType.HasValue ? Model.BillingScheduleType.Value.ToString() : string.Empty)
                    .HtmlAttributes(new { style = "width:90%;" })
                    .Suggest(true)
                    )
                  </div>
              </div>
        ).Expanded(Model.PanelScheduleTypeSelected).LinkHtmlAttributes(new { id = "Panel_PanelScheduleTypeSelected" });

        panelbar.Add().Text("Invoice Def / Line").Content(
              @<div class="with-padding">
                  <div class="button-height inline-label small-margin-bottom">
                      <label for="Client" class="label">
                          Client</label>
                      @(Html.Kendo().ComboBoxFor(u => u.ClientID)
                            .Filter(FilterType.StartsWith).MinLength(0)
                            .Suggest(true)
                            .SelectedIndex(0)
                                    .Events(events => events.Change("Client_onChange").DataBound("DefaultDataBoundToAdjustContainerWidth"))
                            .HtmlAttributes(new { style = "width:90%;", id = "Client_Search_ClientID" })
                            .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.Clients.ToString()] as IEnumerable<SelectListItem>)
                            .Value(Model.ClientID.HasValue ? Model.ClientID.Value.ToString() : string.Empty)
                            )
                  </div>
                  <div class="button-height inline-label small-margin-bottom">
                      <label class="label">
                          Definition</label>
                      @(Html.Kendo().ComboBoxFor(u => u.BillingDefinitionInvoiceID)
                            .Filter(FilterType.StartsWith).MinLength(0)
                            .Suggest(true)
                            .SelectedIndex(0)
                            .Events(events => events.Change("BillingDefinition_onChange").DataBound("DefaultDataBoundToAdjustContainerWidth"))
                            .HtmlAttributes(new { style = "width:90%;", id = "Billing_Definition_InvoiceID" })
                            .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.BillingDefinitionInvoice.ToString()] as IEnumerable<SelectListItem>)
                            .Value(Model.BillingDefinitionInvoiceID.HasValue ? Model.BillingDefinitionInvoiceID.Value.ToString() : string.Empty)
                            )
                  </div>
                  <div class="button-height inline-label small-margin-bottom">
                      <label class="label">
                          Line</label>
                  </div>
                  <div id="chkBillingDefinitionInvoiceLines">
                      @if (Model.BillingDefinitionInvoiceLine != null && Model.BillingDefinitionInvoiceLine.Count > 0)
                      {
                          for (i = 0; i < Model.BillingDefinitionInvoiceLine.Count; i++)
                          {
                          <div class="with-small-padding">
                              @Html.HiddenFor(u => Model.BillingDefinitionInvoiceLine[i].ID)
                              @Html.HiddenFor(u => Model.BillingDefinitionInvoiceLine[i].Name)
                              @Html.CheckBoxFor(u => Model.BillingDefinitionInvoiceLine[i].Selected, new { @class = "checkbox billingDefinitionInvoiceLines", recorID = Model.BillingDefinitionInvoiceLine[i].ID, recordName = Model.BillingDefinitionInvoiceLine[i].Name })
                              @Model.BillingDefinitionInvoiceLine[i].Name
                          </div>
                    
                          }

                      }
                  </div>
              </div>
        ).Expanded(Model.PanelInvoiceDefinitionSelected).LinkHtmlAttributes(new { id = "Panel_PanelInvoiceDefinitionSelected" });


        panelbar.Add().Text("Billing Event").Content(
              @<div class="with-padding">
                  <div class="button-height inline-label small-margin-bottom">
                      <label class="label">
                          Event
                      </label>
                      @(Html.Kendo().ComboBoxFor(u => Model.BillingEvent)
                    .BindTo(ViewData[Martex.DMS.ActionFilters.StaticData.BillingEvent.ToString()] as IEnumerable<SelectListItem>)
                    .SelectedIndex(0)
                    .HighlightFirst(true)
                    .Suggest(true)
                    .Filter(FilterType.StartsWith).MinLength(0)
                    .Events(events => events.Change("ValidateInputForKendoCombo").DataBound("DefaultDataBoundToAdjustContainerWidth"))
                    .Value(Model.BillingEvent.HasValue ? Model.BillingEvent.Value.ToString() : string.Empty)
                    .HtmlAttributes(new { style = "width:90%;", id = "SearchBillingEvent" })
                    .Suggest(true)
                    )
                  </div>
              </div>
        ).Expanded(Model.PanelBillingEventSelected).LinkHtmlAttributes(new { id = "Panel_PanelBillingEventSelected" });

        panelbar.Add().Text("Detail Status").Content(
              @<div class="with-padding">
                  @if (Model.DetailStatus != null && Model.DetailStatus.Count > 0)
                  {
                      for (i = 0; i < Model.DetailStatus.Count; i++)
                      {
                      <div class="with-small-padding">
                          <div id="chkDetailStatus">
                              @Html.HiddenFor(u => Model.DetailStatus[i].ID)
                              @Html.HiddenFor(u => Model.DetailStatus[i].Name)
                              @Html.CheckBoxFor(u => Model.DetailStatus[i].Selected, new { @class = "checkbox", recorID = Model.DetailStatus[i].ID, recordName = Model.DetailStatus[i].Name })
                              @Model.DetailStatus[i].Name
                          </div>
                      </div>
                      }

                  }
              </div>
        ).Expanded(Model.PanelDetailStatusSelected).LinkHtmlAttributes(new { id = "Panel_PanelDetailStatusSelected" });

        panelbar.Add().Text("Disposition Status").Content(
              @<div class="with-padding">
                  @if (Model.DispositionStatus != null && Model.DispositionStatus.Count > 0)
                  {
                      for (i = 0; i < Model.DispositionStatus.Count; i++)
                      {
                      <div class="with-small-padding">
                          <div id="chkDispositionStatus">
                              @Html.HiddenFor(u => Model.DispositionStatus[i].ID)
                              @Html.HiddenFor(u => Model.DispositionStatus[i].Name)
                              @Html.CheckBoxFor(u => Model.DispositionStatus[i].Selected, new { @class = "checkbox", recorID = Model.DispositionStatus[i].ID, recordName = Model.DispositionStatus[i].Name })
                              @Model.DispositionStatus[i].Name
                          </div>
                      </div>
                      }

                  }
              </div>
            ).Expanded(Model.PanelDispositionStatusSelected).LinkHtmlAttributes(new { id = "Panel_PanelDispositionStatusSelected" });
            
             panelbar.Add().Text("Search").Content(
             @<div class="with-padding">
                 <p class="button-height">
                      <a href="javascript:void(0)" class="button icon-search big green-gradient full-width" onclick="GetSelectedCriteria();">Search
                     </a>
                 </p>
             </div>
             ).Expanded(true).LinkHtmlAttributes(new { id = "Panel_PanelSearch" });

    }))
</form>
<script type="text/javascript">

    function LoadClientBillableEventProcessingPredefinedViews(recordID) {

        $('#ClientBillableEventProcessingViewID').val(recordID);
        GetSearchCriteria();

        var gridReference = $('#GrdClientBillableEvents').data('kendoGrid').dataSource;

        var sortOrder = $('#GridSortOrder').val();
        var sortColumn = $('#GridSortColumnName').val();
        if (sortOrder != undefined && sortColumn != undefined) {
            gridReference.sort({ field: sortColumn, dir: sortOrder });
        }
        gridReference.read();
        setTimeout(function () {
            $('#ClientBillableEventProcessingViewID').val('');
        }, 1000);
    }
</script>

<script type="text/javascript">
    $(function () {
        $('.billingDefinitionInvoiceLines').change(function () {
            HandleBillingDefinitionInvoiceLines();
        });
    });
</script>
