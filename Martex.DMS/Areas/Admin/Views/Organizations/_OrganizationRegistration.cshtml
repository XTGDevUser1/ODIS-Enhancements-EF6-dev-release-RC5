@model Martex.DMS.Models.OrganizationModel
@using Kendo.Mvc.UI;
@using Martex.DMS.DAL
@{
    ViewBag.Title = "Organization";
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    bool isEdit = false;
    bool isView = false;
    if (ViewData["mode"].ToString().Equals("edit") || ViewData["mode"].ToString().Equals("view"))
    {
        isEdit = true;
        if (ViewData["mode"].ToString().Equals("view"))
        {
            isView = true;
        }
    }
    bool? isUserAdmin = ViewData["isUserAdmin"] as bool?;
    string parentOrgID = Model != null && Model.Organization != null ? Model.Organization.ParentOrganizationID.ToString() : string.Empty;   
}
<link href="@Url.Content("~/Content/CustomStyle.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/CustomTelerikStyle.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/ui.multiselect.css?v=1")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/styles/form.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/ui.multiselect.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/form2object.js")" type="text/javascript"></script>
<script type="text/javascript">


    function Parent_OrganizationID_OnChange_Kendo(e) {

        var combo = $('#Parent_OrganizationID').data('kendoComboBox');
        if (!IsUserInputValidForChangeOnKendoCombo(combo)) {
            e.preventDefault();
        }
        var isValidSelection = false;
        var selectedItemValue = '';
        if (combo.selectedIndex < 0) {
            combo.$text[0].value = '';
            combo.value(selectedItemValue);
            $("#spOrganizationRoles").html(null);
            $("#spOrganizationClients").html(null);
            return false;
        }
        selectedItemValue = combo.value();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("RolesForOrganizationGettingValueAsID", "ReferenceData", new { area = "Common" })',
            data: { controlFor: "OrganizationRolesValues", organizationId: selectedItemValue },
            traditional: true,
            cache: false,
            async: false,
            success: function (msg) {
                $("#spOrganizationRoles").html(msg);
            }

        });

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ClientForOrganization", "ReferenceData", new { area = "Common" })',
            data: { controlFor: "OrganizationClientsValues", organizationId: selectedItemValue, userId: $("#hdnUserId").val() },
            traditional: true,
            cache: false,
            async: false,
            success: function (msg) {
                $("#spOrganizationClients").html(msg);
            }

        });

    }

    function CountryChange(combo, comboChild, e) {

        var isValidSelection = false;
        var selectedItemValue = '';
        // This for loop is required to verify the proper value when the user have typed a part of value of the full text and click outside
        // because in that case the value and the text of the combobox are equal to the part of value which the user have entered.
        for (var i = 0; i < combo.data.length; i++) {
            if (combo.text().toLowerCase() == combo.data[i].Text.toLowerCase()) {
                isValidSelection = true;
                selectedItemValue = combo.data[i].Value;
                break;
            }
        }
        if (combo.selectedIndex < 0 || !isValidSelection) {
            combo.$text[0].value = '';
            comboChild.dataBind(null);
            comboChild.reload();
            combo.value(selectedItemValue);
            return false;
        }
        else {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("StateProvinceRelatedToCountry", "ReferenceData", new { area = "Common" })',
                data: { countryId: selectedItemValue },
                traditional: true,
                cache: false,
                async: true,
                success: function (msg) {
                    comboChild.dataBind(msg);
                    comboChild.reload();
                }

            });
            comboChild.selectedIndex = -1;
            comboChild.$text[0].value = '';
        }
    }

     
</script>
<form method="post" action="" id="form-OrganizationRegistration">
<div class="with-padding-with-panels">
    <div>
        <div>
            <div>
                <div class="AddressCountryDivCSS">
                    <label for="ParentOrganization" class="label">
                        <strong>Parent Org</strong><span class="spanstar"> *</span></label>
                </div>               
                @if (isView)
                {
                    @(Html.Kendo().ComboBox()
                    .Name("Parent_OrganizationID")
                    .Filter(Kendo.Mvc.UI.FilterType.StartsWith).MinLength(0)
                    .Suggest(true)
                    .BindTo(new SelectList(ViewData[Martex.DMS.ActionFilters.StaticData.Organizations.ToString()] as IEnumerable<SelectListItem>, "Value", "Text"))
                    .Enable(false)
                    )
                }
                else
                {
                    @(Html.Kendo().ComboBox()
                    .Name("Parent_OrganizationID")
                    .Filter(Kendo.Mvc.UI.FilterType.StartsWith).MinLength(0)
                    .Events(events =>
                    {
                        events.Change("Parent_OrganizationID_OnChange_Kendo");
                    })
                    .Suggest(true)
                    .BindTo(new SelectList(ViewData[Martex.DMS.ActionFilters.StaticData.Organizations.ToString()] as IEnumerable<SelectListItem>, "Value", "Text"))
                    )     
                }
            </div>
        </div>
        <br />
        <p class="inline-label">
            <label for="Name" class="label">
                Name<span class="spanstar"> *</span></label>
            @if (isView)
            {
                @Html.TextBoxFor(u => u.Organization.Name, new { @class = "input full-width2", disabled = "disabled", @readonly = "readonly" })
            }
            else
            {
                @Html.TextBoxFor(u => u.Organization.Name, new { @class = "validate[required,maxSize[50]], input full-width2", maxlength = 50 })
            }
        </p>
        <p class="inline-label">
            <label for="Description" class="label">
                Description</label>
            @if (isView)
            {
                @Html.TextAreaFor(u => u.Organization.Description, new { @class = "validate[maxSize[255]], input full-width2", rows = "4", disabled = "disabled", @readonly = "readonly" })
            }
            else
            {
                @Html.TextAreaFor(u => u.Organization.Description, new { @class = "validate[maxSize[255]], input full-width2", rows = "4", maxlength = 255 })
            }
        </p>
        @{
            ViewData["entityId"] = Model.Organization.ID;
            ViewData["entityName"] = "Organization";
        }
        @Html.Partial("_Address", ViewData)
        <p class="inline-label">
            <label for="ContactName" class="label">
                Contact Name</label>
            @if (isView)
            {
                @Html.TextBoxFor(u => u.Organization.ContactName, new { @class = "validate[maxSize[50]], input full-width2", disabled = "disabled", @readonly = "readonly" })
            }
            else
            {
                @Html.TextBoxFor(u => u.Organization.ContactName, new { @class = "validate[maxSize[50]], input full-width2", maxlength = 50 })
            }
        </p>
        <!-- Phone Numbers go here -->
        @Html.Editor("PhoneNumber", "Phone", new { entityName = "Organization", ShowCallIcon = false })
        <p class="inline-label" />
        @*<p class="inline-label">
            <label for="OrganizationRoles" class="label">*@
               <b>User Roles<span class="spanstar"> *</span> </b> <span class="info-spot"><span class="icon-info-round">
                </span><span class="info-bubble">Select all the roles that are possible for<br />
                    this organization. The roles selected<br />
                    here will be available when setting up<br />
                    a new user for this organization. </span></span>
           @* </label>*@
            <span id="spOrganizationRoles">
                @if (isView)
                {
                    @Html.ListBoxFor(u => u.OrganizationRolesValues, ViewData[Martex.DMS.ActionFilters.StaticData.UserRoles.ToString()] as IEnumerable<SelectListItem>, new { @id = "RoleId", @class = "validate[required] uimultiselect eleven-columns", multiple = true, style = "height:100px;", disabled = "disabled" })
                }
                else
                { 
                  
                    @Html.ListBoxFor(u => u.OrganizationRolesValues, ViewData[Martex.DMS.ActionFilters.StaticData.UserRoles.ToString()] as IEnumerable<SelectListItem>, new { @id = "RoleId", @class = "validate[required] uimultiselect eleven-columns", multiple = true, style = "height:100px;" })
                }
            </span>
       <div class="clear"></div>
        @*<p class="inline-label">
            <label for="OrganizationClients" class="label">*@
               <b>Clients<span class="spanstar">*</span> </b> <span class="info-spot"><span class="icon-info-round">
                </span><span class="info-bubble">Select all the clients that this<br />
                    organization manages. This<br />
                    list of clients will help filter<br />
                    that data that a User can see. </span></span>
            </label>
            <span id="spOrganizationClients">
                @if (isView)
                {
                    @Html.ListBoxFor(u => u.OrganizationClientsValues, ViewData[Martex.DMS.ActionFilters.StaticData.Clients.ToString()] as IEnumerable<SelectListItem>, new { @id = "ClientId_RegisterOrganization", @class = "validate[required] uimultiselect eleven-columns", multiple = true, style = "height:100px;", disabled = "disabled" })
                }
                else
                {
                    @Html.ListBoxFor(u => u.OrganizationClientsValues, ViewData[Martex.DMS.ActionFilters.StaticData.Clients.ToString()] as IEnumerable<SelectListItem>, new { @id = "ClientId_RegisterOrganization", @class = "validate[required] uimultiselect eleven-columns", multiple = true, style = "height:100px;" })
                }
            </span>
       <div class="clear"></div>
        <p class="inline-label">
            <label for="LastUpdateInformation" class="label">
                Last Update</label>
            @Html.DisplayFor(u => u.LastUpdateInformation)
        </p>
        <div class="field-block button-height">
            @if (@ViewData["mode"].ToString() != "view")
            {
                <button id="btnAddOrganization" class="button green-gradient glossy float-right mid-margin-left"
                    type="submit">
                    @if (isEdit)
                    {
                        @Html.Raw("Update")
                    }
                    else
                    {
                        @Html.Raw("Add")
                    }
                </button>
            }
            <button id="btnCancelOrganization" class="button gray-gradient glossy  float-right"
                type="button">
                Cancel
            </button>
        </div>
    </div>
    <!--/fieldset-->
</div>
@Html.Hidden("hdnfldMode", ViewData["mode"])
@Html.HiddenFor(a => a.Organization.ID)
@Html.Hidden("hdnUserId", ViewData["UserId"])
@Html.Hidden("hdnfldIsUserAdmin", isUserAdmin)
</form>
<script src="@Url.Content("~/Scripts/organizationRegistration.js")" type="text/javascript"></script>
<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        var parentOrg = '@parentOrgID';
        $("#Parent_OrganizationID").data('kendoComboBox').value(parentOrg);
    });
    $(function () {

        CleanMyContainer('form-OrganizationRegistration');
        WatchMyContainer('form-OrganizationRegistration');

        $('#form-OrganizationRegistration').validationEngine();

        if ($("#hdnfldMode").val() == "view") {
            $('#Parent_OrganizationID').data('kendoComboBox').enable(false);
        }
    });


   
</script>
