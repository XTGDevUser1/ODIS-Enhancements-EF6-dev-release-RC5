@using Kendo.Mvc.UI
@using Martex.DMS.DAL

<script type="text/javascript">
    function GrdEventLogList_OnDataBound(e) {
        $(".k-grid-ViewData").addClass("with-tooltip").html("<span class='k-icon k-i-search'/>");
    }
</script>
<div class="columns">
    <div class="new-row twelve-columns">
       @(Html.Kendo().Grid<EventLogList_Result>()
              .Name("GrdEventLogList")
              .Columns(column =>
                {
                column.Bound(a => a.EventLogID).Title("ID");
                column.Bound(a => a.SessionID).Title("Session");
                column.Bound(a => a.Description).Title("Description");
                column.Bound(a => a.Data).Title("Data");
                column.Bound(a => a.CreateDate).Title("Date").Format("{0:MM/dd/yyyy hh:mm:ss tt }");
                column.Bound(a => a.CreateBy).Title("Created By");
                column.Command(command =>
                {
                    command.Custom("ViewData").Click("fnViewData").HtmlAttributes(new { style = "min-width:auto;", title = "Data" });
                })
            .Title("View ").Width(75);
                })
           .Events(e =>
            {
                e.DataBound("GrdEventLogList_OnDataBound");
            })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Pageable(pager => pager
        .Refresh(true)
        .PageSizes(new int[] { 10, 20, 50, 100 })
    )
    .Selectable(select => select.Mode(GridSelectionMode.Single))
    .DataSource(datasource => datasource
        .Ajax()
        .Events(events => events.Error("KendoGridErrorHandler"))
       .Read(read => read.Action("List", "EventViewer", new { area = "Admin" }).Data("GetSelectionCriteriaForGrid"))
        .PageSize(10)
    )
    .Resizable(resize => resize.Columns(true))
    .EnableCustomBinding(true)
    )
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $(function () {
            HandleDblClickOnGrid($("#GrdEventLogList"), '.k-grid-View');
            var gridContentHeight = GetWindowHeight() - (
                                        $("#menu-horizontal").height() +
                                        $(".k-toolbar").height() +
                                        $(".k-grid-header").height() +
                                        $(".k-grid-bottom").height() +
                                        $(".footer").height() +
                                        250
                                        );
            $("#GrdEventLogList>.k-grid-content").css("height", gridContentHeight + "px");
        });
    });
</script>

<script type="text/javascript">

    function XMLToFriendlyFormat(xml) {
        //return escapedHTML.replace(/<//g, '').replace(/>/g, '');
        var dummyElement = $('<div/>').html(xml);
        var formattedString = '';
        var nodesFound = false;

        dummyElement.find("eventdetail,messagedata").children().each(function (e) {
            nodesFound = true;

            var currentElement = $(this);
            var localName = currentElement[0].localName.split('_')[0];
            var localValue = currentElement.html();
            formattedString += "<br/><strong>" + localName + "</strong> : " + localValue;
        });

        if (!nodesFound) {
            formattedString = xml;
        }

        return formattedString;
    }

    function formatXml(xml) {
        if (xml == null || xml.length <= 0) return "";
        var formatted = '';
        var reg = /(>)(<)(\/*)/g;
        xml = xml.replace(reg, '$1\r\n$2$3');
        var pad = 0;
        jQuery.each(xml.split('\r\n'), function (index, node) {
            var indent = 0;
            if (node.match(/.+<\/\w[^>]*>$/)) {
                indent = 0;
            } else if (node.match(/^<\/\w/)) {
                if (pad != 0) {
                    pad -= 1;
                }
            } else if (node.match(/^<\w[^>]*[^\/]>.*$/)) {
                indent = 1;
            } else {
                indent = 0;
            }

            var padding = '';
            for (var i = 0; i < pad; i++) {
                padding += '  ';
            }

            formatted += padding + node + '\r\n';
            pad += indent;
        });

        return formatted;
    }

    function fnViewData(e) {
        if (e != null) {
            e.preventDefault();
            var data = this.dataItem($(e.currentTarget).closest("tr")).Data;
            //   var htmlEncodedString = $('<div/>').text(XMLToFriendlyFormat(data)).html();
            if (data == null) {
                data = '';
            }
            openAlertMessage('<pre class="brush:xml" style="min-height:100px;max-height:300px;overflow:auto;margin-top:10px;color:#000000;">' + XMLToFriendlyFormat(data) + '</pre>');
        }

    }
</script>
