@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_ContentMaster.cshtml";
}
<link href="@Url.Content("~/Content/CustomTelerikStyle.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/DMSTabs.css")" rel="stylesheet" type="text/css" />
<div class="with-padding">
    <hgroup id="main-title" class="thin">
        <h1>
            Program Management</h1>
    </hgroup>
    <div id="AdminProgramManagementTabs" class="standard-tabs same-height" data="adminProgramMaintenanceDynamicTabs">
        <ul class="tabs">
            <li><a href="#tabs-1" class="icon-user">Program List</a></li>
        </ul>
        <div id="tabs-1" class="adminProgramMaintenanceDynamicTabs">
            <div class="with-padding">
                @Html.Partial("_SearchResults")
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var tabObject = null;

    $(function () {
        tabObject = $('#AdminProgramManagementTabs').tabs();
        GetProgramManagementFilters();
    });

    function GetSearchCriteria() {

        var postData = $('#frmProgramManagementSearchCriteria').serializeArray();
        if ($('#ProgramManagementSearchViewID') != undefined) {
            var value = parseInt($('#ProgramManagementSearchViewID').val());
            if (value > 0) {
                postData.push({ name: "FilterToLoadID", value: value });
            }
        }
        try {

            postData.push({ name: "NameOperator", value: $('#NameOperatorValue').data('kendoComboBox').text() });
            postData.push({ name: "ProgramName", value: $('#ProgramMaintenance_Search_ProgramID').data('kendoComboBox').text() });
            postData.push({ name: "ClientName", value: $('#ProgramMaintenance_Search_ClientID').data('kendoComboBox').text() });

        } catch (e) {

        }
        return postData;
    }

    function GetProgramManagementFilters() {
        $.ajax({
            url: '@Url.Action("_SearchCriteria", "ProgramManagement", new { area = "Admin" })',
            cache: false,
            type: 'POST',
            async: false,
            data: GetSearchCriteria(),
            success: function (msg) {
                $('#ulAdminProgramManagementSearchCriteria').html(msg);
            }
        })
    }

    function GetSelectedCriteria() {
        $.ajax({
            url: '@Url.Action("_SelectedCriteria", "ProgramManagement", new { area = "Admin" })',
            type: 'POST',
            data: GetSearchCriteria(),
            traditional: true,
            cache: false,
            async: false,
            global: false,
            success: function (msg) {
                $('#programManagementSelectedSearchCriteriaDetails').html(msg);
                $('#GrdProgramMaintenance').data('kendoGrid').dataSource.read();
                tabObject.tabs('select', 0);
            }
        })
    }


    function AddNewProgramDetailsTab(programID, programName, pageMode) {
        var nameToCheck = programName;
        var tabNameExists = false;
        var index = -1;

        $('#AdminProgramManagementTabs ul li a').each(function (i) {
            if (this.text == nameToCheck) {
                tabNameExists = true;
                index = i;
            }
        });
        if (!tabNameExists) {
            addTab(programName, programID, pageMode);
        }
        else {
            tabObject.tabs('select', index);
        }
    }

    function addTab(programName, programID, pageMode) {

        var tabTemplate = '<li><a href="#{href}" class="with-tooltip" title="' + programName + '">#{label}</a> <span class="ui-icon ui-icon-close">X</span></li>';
        var tabCounter = $(tabObject).tabs("length") + 1;
        var numOfTabs = tabCounter - 1;

        var lastTabId = $($("#AdminProgramManagementTabs").find(".adminProgramMaintenanceDynamicTabs")[numOfTabs - 1]);
        var newTabId = parseInt(lastTabId.attr("id").replace("tabs-", "")) + 1;
        console.log("Next tab index : " + newTabId);
        var label = programName || "Tab " + tabCounter,
        id = "tabs-" + newTabId,
        li = $(tabTemplate.replace(/#\{href\}/g, "#" + id).replace(/#\{label\}/g, label)),
        tabContentHtml = "Loading Details....";

        $.ajax({
            url: '@Url.Action("_ProgramMaintenanceTabs", "ProgramManagement", new { area = "Admin" })',
            data: { programID: programID, pageMode: pageMode },
            cache: false,
            async: true,
            success: function (msg) {
                tabContentHtml = msg;
                tabObject.find(".ui-tabs-nav").first().append(li);
                tabObject.append("<div id='" + id + "' class='ui-tabs-panel adminProgramMaintenanceDynamicTabs ui-widget-content ui-corner-bottom ui-tabs-hide'>" + tabContentHtml + "</div>");
                tabObject.tabs("refresh");
                tabObject.tabs('option', 'active', false);
                tabObject.tabs('select', tabCounter - 1);
            }
        });
    }
    function DeleteTab(identifier) {
        // Sanghi In newer versions of jQueryUI (1.9 +) use active instead of selected to get the active index of tab.
        var activeIndex = tabObject.tabs('option', 'selected');
        if (IsMyContainerDirty("frmProgramDetailsContainerForDirtyFlag_" + identifier)) {
            var message = "Changes have not been saved; do you want to continue and lose the changes or cancel and go back to the page?";
            $.modal.confirm(message, function () {
                CleanMyContainer("frmProgramDetailsContainerForDirtyFlag_" + identifier);
                tabObject.tabs('remove', activeIndex);
                tabObject.tabs('refresh');
                tabObject.tabs('select', 0);

            }, function () {
                return false;
            });
        }
        else {
            tabObject.tabs('remove', activeIndex);
            tabObject.tabs('refresh');
            tabObject.tabs('select', 0);
        }
    }

    function SaveProgramInfoTabInformation(sender, programID) {
        var errorFoundForProgramInfo = false;
        var form_Program_Information_Section = "#frmProgramDetailsInformationSection_" + programID;

        if ($(form_Program_Information_Section).validationEngine("validate") == false) {
            errorFoundForProgramInfo = true;
        }
        if (errorFoundForProgramInfo == true) {
            return false;
        }
        else {
            var programInformationData = $(form_Program_Information_Section).serializeArray();
            var parentProgramID = $("#ParentID_" + programID).data('kendoComboBox').value();
            programInformationData.push({ name: "ParentID", value: parentProgramID });
            programInformationData.push({ name: "ProgramID", value: programID });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveProgramInfoData", "ProgramManagement", new { area = "Admin" })',
                data: programInformationData,
                success: function (msg) {
                    if (msg.Status == "Success") {
                        // Once the values save to DB Set page to No Dirty and Hide the Buttons
                        CleanMyContainer('frmProgramDetailsContainerForDirtyFlag_' + programID);
                        //Refresh the page 

                        openAlertMessage("Program Info Updated Successfully.", function () {
                            //Refresh the page 
                            $('#ProgramManagementDetailsTab_' + programID).tabs('load', 0);
                        });
                    }
                }
            });
        }
    }

    function CancelProgramInfoTabInformation(programID) {
        //openAlertMessage("Cancel in Progress");
        if (IsMyContainerDirty("frmProgramDetailsContainerForDirtyFlag_" + programID)) {
            var message = "Changes have not been saved; do you want to continue and lose the changes or cancel and go back to the page?";
            $.modal.confirm(message, function () {
                // Do Nothing
                // Do Nothing 
                CleanMyContainer("frmProgramDetailsContainerForDirtyFlag_" + programID);
                //Refresh the page 
                $('#ProgramManagementDetailsTab_' + programID).tabs('load', 0);
            }, function () {
                // Do Nothing
            });
        }
    }


    function SaveProgramPhoneSystemConfigurationTabInformation(sender, programID) {
        //openAlertMessage("Save In Progress");
        var errorFoundForProgramPhoneSystemConfigurationInfo = false;
        var form_Program_PhoneSystemConfiguration_Information_Section = "#frmProgramDetailsPhoneSystemConfigurationSection_" + programID;

        if ($(form_Program_PhoneSystemConfiguration_Information_Section).validationEngine("validate") == false) {
            errorFoundForProgramPhoneSystemConfigurationInfo = true;
        }
        if (errorFoundForProgramPhoneSystemConfigurationInfo == true) {
            return false;
        }
        else {
            var programPhoneSystemConfigurationInformationData = $(form_Program_PhoneSystemConfiguration_Information_Section).serializeArray();
            var parentProgramID = $("#ParentID_" + programID).data('kendoComboBox').value();
            programPhoneSystemConfigurationInformationData.push({ name: "ParentID", value: parentProgramID });
            programPhoneSystemConfigurationInformationData.push({ name: "ProgramID", value: programID });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveProgramPhoneSystemConfigurationInfoData", "ProgramManagement", new { area = "Admin" })',
                data: programPhoneSystemConfigurationInformationData,
                success: function (msg) {
                    if (msg.Status == "Success") {

                        // Once the values save to DB Set page to No Dirty and Hide the Buttons
                        CleanMyContainer('frmProgramDetailsContainerForDirtyFlag_' + programID);
                        openAlertMessage("Program Phone System Configuration Details Updated Successfully.", function () {
                            //Refresh the page 
                            $('#ProgramManagementDetailsTab_' + programID).tabs('load', 6);
                        });
                    }
                }
            });
        }
    }

    function CancelProgramPhoneSystemConfigurationTabInformation(programID) {
        if (IsMyContainerDirty("frmProgramDetailsContainerForDirtyFlag_" + programID)) {
            var message = "Changes have not been saved; do you want to continue and lose the changes or cancel and go back to the page?";
            $.modal.confirm(message, function () {
                // Do Nothing
                // Do Nothing 
                CleanMyContainer("frmProgramDetailsContainerForDirtyFlag_" + programID);
                //Refresh the page 
                $('#ProgramManagementDetailsTab_' + programID).tabs('load', 6);
            }, function () {
                // Do Nothing
            });
        }

    }
</script>
