//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Martex.DMS.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class DMSEntities : DbContext
    {
        public DMSEntities()
            : base("name=DMSEntities")
        {

    		this.Configuration.ProxyCreationEnabled = false;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<AccessControlList> AccessControlLists { get; set; }
        public virtual DbSet<AccessType> AccessTypes { get; set; }
        public virtual DbSet<ACESClaimStatu> ACESClaimStatus { get; set; }
        public virtual DbSet<ACHStatu> ACHStatus { get; set; }
        public virtual DbSet<AddressEntity> AddressEntities { get; set; }
        public virtual DbSet<AddressType> AddressTypes { get; set; }
        public virtual DbSet<AddressTypeEntity> AddressTypeEntities { get; set; }
        public virtual DbSet<ApplicationConfiguration> ApplicationConfigurations { get; set; }
        public virtual DbSet<ApplicationConfigurationCategory> ApplicationConfigurationCategories { get; set; }
        public virtual DbSet<ApplicationConfigurationType> ApplicationConfigurationTypes { get; set; }
        public virtual DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public virtual DbSet<aspnet_Paths> aspnet_Paths { get; set; }
        public virtual DbSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers { get; set; }
        public virtual DbSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser { get; set; }
        public virtual DbSet<aspnet_Profile> aspnet_Profile { get; set; }
        public virtual DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public virtual DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }
        public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }
        public virtual DbSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events { get; set; }
        public virtual DbSet<ASPStateTempApplication> ASPStateTempApplications { get; set; }
        public virtual DbSet<ASPStateTempSession> ASPStateTempSessions { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<BatchStatu> BatchStatus { get; set; }
        public virtual DbSet<BatchType> BatchTypes { get; set; }
        public virtual DbSet<BillingAdjustmentReason> BillingAdjustmentReasons { get; set; }
        public virtual DbSet<BillingDefinitionEvent> BillingDefinitionEvents { get; set; }
        public virtual DbSet<BillingDefinitionInvoice> BillingDefinitionInvoices { get; set; }
        public virtual DbSet<BillingDefinitionInvoiceLine> BillingDefinitionInvoiceLines { get; set; }
        public virtual DbSet<BillingDefinitionInvoiceLineEvent> BillingDefinitionInvoiceLineEvents { get; set; }
        public virtual DbSet<BillingDefinitionInvoiceLineEventProgram> BillingDefinitionInvoiceLineEventPrograms { get; set; }
        public virtual DbSet<BillingEventSystemSource> BillingEventSystemSources { get; set; }
        public virtual DbSet<BillingExcludeReason> BillingExcludeReasons { get; set; }
        public virtual DbSet<BillingInvoice> BillingInvoices { get; set; }
        public virtual DbSet<BillingInvoiceDetail> BillingInvoiceDetails { get; set; }
        public virtual DbSet<BillingInvoiceDetailDisposition> BillingInvoiceDetailDispositions { get; set; }
        public virtual DbSet<BillingInvoiceDetailException> BillingInvoiceDetailExceptions { get; set; }
        public virtual DbSet<BillingInvoiceDetailExceptionSeverity> BillingInvoiceDetailExceptionSeverities { get; set; }
        public virtual DbSet<BillingInvoiceDetailExceptionStatu> BillingInvoiceDetailExceptionStatus { get; set; }
        public virtual DbSet<BillingInvoiceDetailExceptionType> BillingInvoiceDetailExceptionTypes { get; set; }
        public virtual DbSet<BillingInvoiceDetailStatu> BillingInvoiceDetailStatus { get; set; }
        public virtual DbSet<BillingInvoiceLine> BillingInvoiceLines { get; set; }
        public virtual DbSet<BillingInvoiceLineEventGenWhen> BillingInvoiceLineEventGenWhens { get; set; }
        public virtual DbSet<BillingInvoiceLineStatu> BillingInvoiceLineStatus { get; set; }
        public virtual DbSet<BillingInvoiceStatu> BillingInvoiceStatus { get; set; }
        public virtual DbSet<BillingInvoiceTemplate> BillingInvoiceTemplates { get; set; }
        public virtual DbSet<BillingInvoiceType> BillingInvoiceTypes { get; set; }
        public virtual DbSet<BillingSchedule> BillingSchedules { get; set; }
        public virtual DbSet<BillingScheduleDateType> BillingScheduleDateTypes { get; set; }
        public virtual DbSet<BillingScheduleRangeType> BillingScheduleRangeTypes { get; set; }
        public virtual DbSet<BillingScheduleStatu> BillingScheduleStatus { get; set; }
        public virtual DbSet<BillingScheduleType> BillingScheduleTypes { get; set; }
        public virtual DbSet<BillTo> BillToes { get; set; }
        public virtual DbSet<BillToPaymentType> BillToPaymentTypes { get; set; }
        public virtual DbSet<CallType> CallTypes { get; set; }
        public virtual DbSet<Case> Cases { get; set; }
        public virtual DbSet<CasePhoneLocation> CasePhoneLocations { get; set; }
        public virtual DbSet<CaseStatu> CaseStatus { get; set; }
        public virtual DbSet<ChangeLog> ChangeLogs { get; set; }
        public virtual DbSet<ChangeLogMapping> ChangeLogMappings { get; set; }
        public virtual DbSet<Claim> Claims { get; set; }
        public virtual DbSet<ClaimCategory> ClaimCategories { get; set; }
        public virtual DbSet<ClaimException> ClaimExceptions { get; set; }
        public virtual DbSet<ClaimRejectReason> ClaimRejectReasons { get; set; }
        public virtual DbSet<ClaimStatu> ClaimStatus { get; set; }
        public virtual DbSet<ClaimStatusLog> ClaimStatusLogs { get; set; }
        public virtual DbSet<ClaimType> ClaimTypes { get; set; }
        public virtual DbSet<ClaimTypeCategory> ClaimTypeCategories { get; set; }
        public virtual DbSet<ClaimVehicleDiagnosticCode> ClaimVehicleDiagnosticCodes { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<ClientChangeLogMapping> ClientChangeLogMappings { get; set; }
        public virtual DbSet<ClientPayment> ClientPayments { get; set; }
        public virtual DbSet<ClosedLoopStatu> ClosedLoopStatus { get; set; }
        public virtual DbSet<CoachingConcern> CoachingConcerns { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<CommentType> CommentTypes { get; set; }
        public virtual DbSet<CommunicationLog> CommunicationLogs { get; set; }
        public virtual DbSet<CommunicationQueue> CommunicationQueues { get; set; }
        public virtual DbSet<Concern> Concerns { get; set; }
        public virtual DbSet<ConcernType> ConcernTypes { get; set; }
        public virtual DbSet<ConfigurationCategory> ConfigurationCategories { get; set; }
        public virtual DbSet<ConfigurationType> ConfigurationTypes { get; set; }
        public virtual DbSet<ContactAction> ContactActions { get; set; }
        public virtual DbSet<ContactCategory> ContactCategories { get; set; }
        public virtual DbSet<ContactEmailDeclineReason> ContactEmailDeclineReasons { get; set; }
        public virtual DbSet<ContactLog> ContactLogs { get; set; }
        public virtual DbSet<ContactLogAction> ContactLogActions { get; set; }
        public virtual DbSet<ContactLogLink> ContactLogLinks { get; set; }
        public virtual DbSet<ContactLogReason> ContactLogReasons { get; set; }
        public virtual DbSet<ContactMethod> ContactMethods { get; set; }
        public virtual DbSet<ContactReason> ContactReasons { get; set; }
        public virtual DbSet<ContactSource> ContactSources { get; set; }
        public virtual DbSet<ContactType> ContactTypes { get; set; }
        public virtual DbSet<ContractRateSchedule> ContractRateSchedules { get; set; }
        public virtual DbSet<ContractRateScheduleProduct> ContractRateScheduleProducts { get; set; }
        public virtual DbSet<ContractRateScheduleProductLog> ContractRateScheduleProductLogs { get; set; }
        public virtual DbSet<ContractRateScheduleStatu> ContractRateScheduleStatus { get; set; }
        public virtual DbSet<ContractStatu> ContractStatus { get; set; }
        public virtual DbSet<ControlType> ControlTypes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CurrencyType> CurrencyTypes { get; set; }
        public virtual DbSet<DataGroup> DataGroups { get; set; }
        public virtual DbSet<DataGroupProgram> DataGroupPrograms { get; set; }
        public virtual DbSet<DataType> DataTypes { get; set; }
        public virtual DbSet<DBAudit> DBAudits { get; set; }
        public virtual DbSet<DesktopNotification> DesktopNotifications { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<DocumentCategory> DocumentCategories { get; set; }
        public virtual DbSet<EmergencyAssistance> EmergencyAssistances { get; set; }
        public virtual DbSet<EmergencyAssistanceReason> EmergencyAssistanceReasons { get; set; }
        public virtual DbSet<Entity> Entities { get; set; }
        public virtual DbSet<EntityRecordVersion> EntityRecordVersions { get; set; }
        public virtual DbSet<EntityRecordVersionDetail> EntityRecordVersionDetails { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventCategory> EventCategories { get; set; }
        public virtual DbSet<EventCategoryTemplateTag> EventCategoryTemplateTags { get; set; }
        public virtual DbSet<EventLog> EventLogs { get; set; }
        public virtual DbSet<EventLogLink> EventLogLinks { get; set; }
        public virtual DbSet<EventTemplate> EventTemplates { get; set; }
        public virtual DbSet<EventType> EventTypes { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<FeedbackType> FeedbackTypes { get; set; }
        public virtual DbSet<HagertyProgramMap> HagertyProgramMaps { get; set; }
        public virtual DbSet<HitchType> HitchTypes { get; set; }
        public virtual DbSet<InboundCall> InboundCalls { get; set; }
        public virtual DbSet<IVRScript> IVRScripts { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<ListViewFilter> ListViewFilters { get; set; }
        public virtual DbSet<MarketLocation> MarketLocations { get; set; }
        public virtual DbSet<MarketLocationProductRate> MarketLocationProductRates { get; set; }
        public virtual DbSet<MarketLocationType> MarketLocationTypes { get; set; }
        public virtual DbSet<MemberProduct> MemberProducts { get; set; }
        public virtual DbSet<MemberProductProductCategory> MemberProductProductCategories { get; set; }
        public virtual DbSet<MemberSearchProgramGrouping> MemberSearchProgramGroupings { get; set; }
        public virtual DbSet<Membership> Memberships { get; set; }
        public virtual DbSet<MembershipBlackListVendor> MembershipBlackListVendors { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<MessageType> MessageTypes { get; set; }
        public virtual DbSet<Mobile_CallForService> Mobile_CallForService { get; set; }
        public virtual DbSet<Mobile_logAccess> Mobile_logAccess { get; set; }
        public virtual DbSet<Mobile_Registration> Mobile_Registration { get; set; }
        public virtual DbSet<MotorcycleMakeModel> MotorcycleMakeModels { get; set; }
        public virtual DbSet<MotorcycleType> MotorcycleTypes { get; set; }
        public virtual DbSet<NextAction> NextActions { get; set; }
        public virtual DbSet<NextActionEntity> NextActionEntities { get; set; }
        public virtual DbSet<NextActionRole> NextActionRoles { get; set; }
        public virtual DbSet<NextNumber> NextNumbers { get; set; }
        public virtual DbSet<NotificationRecipientType> NotificationRecipientTypes { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<OrganizationClient> OrganizationClients { get; set; }
        public virtual DbSet<OrganizationRole> OrganizationRoles { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PaymentAuthorization> PaymentAuthorizations { get; set; }
        public virtual DbSet<PaymentCategory> PaymentCategories { get; set; }
        public virtual DbSet<PaymentReason> PaymentReasons { get; set; }
        public virtual DbSet<PaymentStatu> PaymentStatus { get; set; }
        public virtual DbSet<PaymentTransaction> PaymentTransactions { get; set; }
        public virtual DbSet<PaymentTransactionType> PaymentTransactionTypes { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<PaymentTypeEntity> PaymentTypeEntities { get; set; }
        public virtual DbSet<PhoneCompany> PhoneCompanies { get; set; }
        public virtual DbSet<PhoneEntity> PhoneEntities { get; set; }
        public virtual DbSet<PhoneLocationRequestError> PhoneLocationRequestErrors { get; set; }
        public virtual DbSet<PhoneLocationRequestStatu> PhoneLocationRequestStatus { get; set; }
        public virtual DbSet<PhoneSystemConfiguration> PhoneSystemConfigurations { get; set; }
        public virtual DbSet<PhoneType> PhoneTypes { get; set; }
        public virtual DbSet<PhoneTypeEntity> PhoneTypeEntities { get; set; }
        public virtual DbSet<PostLoginPrompt> PostLoginPrompts { get; set; }
        public virtual DbSet<Prefix> Prefixes { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductCategoryQuestion> ProductCategoryQuestions { get; set; }
        public virtual DbSet<ProductCategoryQuestionLink> ProductCategoryQuestionLinks { get; set; }
        public virtual DbSet<ProductCategoryQuestionProgram> ProductCategoryQuestionPrograms { get; set; }
        public virtual DbSet<ProductCategoryQuestionValue> ProductCategoryQuestionValues { get; set; }
        public virtual DbSet<ProductCategoryQuestionVehicleType> ProductCategoryQuestionVehicleTypes { get; set; }
        public virtual DbSet<ProductISPSelectionRadiu> ProductISPSelectionRadius { get; set; }
        public virtual DbSet<ProductProvider> ProductProviders { get; set; }
        public virtual DbSet<ProductRateType> ProductRateTypes { get; set; }
        public virtual DbSet<ProductSubType> ProductSubTypes { get; set; }
        public virtual DbSet<ProductType> ProductTypes { get; set; }
        public virtual DbSet<Program> Programs { get; set; }
        public virtual DbSet<ProgramConfiguration> ProgramConfigurations { get; set; }
        public virtual DbSet<ProgramDataItem> ProgramDataItems { get; set; }
        public virtual DbSet<ProgramDataItemLink> ProgramDataItemLinks { get; set; }
        public virtual DbSet<ProgramDataItemValue> ProgramDataItemValues { get; set; }
        public virtual DbSet<ProgramDataItemValueEntity> ProgramDataItemValueEntities { get; set; }
        public virtual DbSet<ProgramProduct> ProgramProducts { get; set; }
        public virtual DbSet<ProgramProductCategory> ProgramProductCategories { get; set; }
        public virtual DbSet<ProgramServiceEventLimit> ProgramServiceEventLimits { get; set; }
        public virtual DbSet<ProgramVehicleType> ProgramVehicleTypes { get; set; }
        public virtual DbSet<PurchaseOrderCancellationReason> PurchaseOrderCancellationReasons { get; set; }
        public virtual DbSet<PurchaseOrderDetail> PurchaseOrderDetails { get; set; }
        public virtual DbSet<PurchaseOrderGOAReason> PurchaseOrderGOAReasons { get; set; }
        public virtual DbSet<PurchaseOrderPayStatusCode> PurchaseOrderPayStatusCodes { get; set; }
        public virtual DbSet<PurchaseOrderStatu> PurchaseOrderStatus { get; set; }
        public virtual DbSet<PurchaseOrderType> PurchaseOrderTypes { get; set; }
        public virtual DbSet<QueueStatu> QueueStatus { get; set; }
        public virtual DbSet<RateType> RateTypes { get; set; }
        public virtual DbSet<RVMakeModel> RVMakeModels { get; set; }
        public virtual DbSet<RVType> RVTypes { get; set; }
        public virtual DbSet<Securable> Securables { get; set; }
        public virtual DbSet<ServiceRequestDetail> ServiceRequestDetails { get; set; }
        public virtual DbSet<ServiceRequestException> ServiceRequestExceptions { get; set; }
        public virtual DbSet<ServiceRequestPriority> ServiceRequestPriorities { get; set; }
        public virtual DbSet<ServiceRequestStatu> ServiceRequestStatus { get; set; }
        public virtual DbSet<ServiceRequestVehicleDiagnosticCode> ServiceRequestVehicleDiagnosticCodes { get; set; }
        public virtual DbSet<Skillset> Skillsets { get; set; }
        public virtual DbSet<SourceSystem> SourceSystems { get; set; }
        public virtual DbSet<StateProvince> StateProvinces { get; set; }
        public virtual DbSet<Suffix> Suffixes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Template> Templates { get; set; }
        public virtual DbSet<TemplateTag> TemplateTags { get; set; }
        public virtual DbSet<TemporaryCreditCard> TemporaryCreditCards { get; set; }
        public virtual DbSet<TemporaryCreditCard_Import> TemporaryCreditCard_Import { get; set; }
        public virtual DbSet<TemporaryCreditCard_Import_ChargedTransactions> TemporaryCreditCard_Import_ChargedTransactions { get; set; }
        public virtual DbSet<TemporaryCreditCardDetail> TemporaryCreditCardDetails { get; set; }
        public virtual DbSet<TemporaryCreditCardStatu> TemporaryCreditCardStatus { get; set; }
        public virtual DbSet<TrailerMakeModel> TrailerMakeModels { get; set; }
        public virtual DbSet<TrailerType> TrailerTypes { get; set; }
        public virtual DbSet<UserDataGroup> UserDataGroups { get; set; }
        public virtual DbSet<UserPasswordHistory> UserPasswordHistories { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }
        public virtual DbSet<VehicleCategory> VehicleCategories { get; set; }
        public virtual DbSet<VehicleChassi> VehicleChassis { get; set; }
        public virtual DbSet<VehicleDiagnosticCategory> VehicleDiagnosticCategories { get; set; }
        public virtual DbSet<VehicleDiagnosticCode> VehicleDiagnosticCodes { get; set; }
        public virtual DbSet<VehicleEngine> VehicleEngines { get; set; }
        public virtual DbSet<VehicleMakeModel> VehicleMakeModels { get; set; }
        public virtual DbSet<VehicleTransmission> VehicleTransmissions { get; set; }
        public virtual DbSet<VehicleType> VehicleTypes { get; set; }
        public virtual DbSet<VehicleTypeBusinessSearchOption> VehicleTypeBusinessSearchOptions { get; set; }
        public virtual DbSet<VehicleTypeVehicleCategory> VehicleTypeVehicleCategories { get; set; }
        public virtual DbSet<VehicleTypeVehicleDiagnosticCode> VehicleTypeVehicleDiagnosticCodes { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<VendorACH> VendorACHes { get; set; }
        public virtual DbSet<VendorApplicationBusinessHour> VendorApplicationBusinessHours { get; set; }
        public virtual DbSet<VendorApplicationPaymentType> VendorApplicationPaymentTypes { get; set; }
        public virtual DbSet<VendorApplicationPostalCode> VendorApplicationPostalCodes { get; set; }
        public virtual DbSet<VendorApplicationProduct> VendorApplicationProducts { get; set; }
        public virtual DbSet<VendorApplicationReferralSource> VendorApplicationReferralSources { get; set; }
        public virtual DbSet<VendorInvoice> VendorInvoices { get; set; }
        public virtual DbSet<VendorInvoiceException> VendorInvoiceExceptions { get; set; }
        public virtual DbSet<VendorInvoicePaymentDifferenceReasonCode> VendorInvoicePaymentDifferenceReasonCodes { get; set; }
        public virtual DbSet<VendorInvoiceStatu> VendorInvoiceStatus { get; set; }
        public virtual DbSet<VendorLegacyCredential> VendorLegacyCredentials { get; set; }
        public virtual DbSet<VendorLocation> VendorLocations { get; set; }
        public virtual DbSet<VendorLocationBusinessHour> VendorLocationBusinessHours { get; set; }
        public virtual DbSet<VendorLocationPaymentType> VendorLocationPaymentTypes { get; set; }
        public virtual DbSet<VendorLocationPostalCode> VendorLocationPostalCodes { get; set; }
        public virtual DbSet<VendorLocationProduct> VendorLocationProducts { get; set; }
        public virtual DbSet<VendorLocationStatu> VendorLocationStatus { get; set; }
        public virtual DbSet<VendorLocationVirtual> VendorLocationVirtuals { get; set; }
        public virtual DbSet<VendorProduct> VendorProducts { get; set; }
        public virtual DbSet<VendorRegion> VendorRegions { get; set; }
        public virtual DbSet<VendorRegionStateProvince> VendorRegionStateProvinces { get; set; }
        public virtual DbSet<VendorStatu> VendorStatus { get; set; }
        public virtual DbSet<VendorStatusLog> VendorStatusLogs { get; set; }
        public virtual DbSet<VendorStatusReason> VendorStatusReasons { get; set; }
        public virtual DbSet<VendorTermsAgreement> VendorTermsAgreements { get; set; }
        public virtual DbSet<VendorUser> VendorUsers { get; set; }
        public virtual DbSet<Messages_0> Messages_0 { get; set; }
        public virtual DbSet<Messages_0_Id> Messages_0_Id { get; set; }
        public virtual DbSet<Schema> Schemata { get; set; }
        public virtual DbSet<ISPSelectionLog> ISPSelectionLogs { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<Portlet> Portlets { get; set; }
        public virtual DbSet<PortletColumn> PortletColumns { get; set; }
        public virtual DbSet<PortletScreen> PortletScreens { get; set; }
        public virtual DbSet<PortletSection> PortletSections { get; set; }
        public virtual DbSet<UserPortlet> UserPortlets { get; set; }
        public virtual DbSet<UserPortletDefaultByRole> UserPortletDefaultByRoles { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<MemberProgramChangeMapping> MemberProgramChangeMappings { get; set; }
        public virtual DbSet<ClientType> ClientTypes { get; set; }
        public virtual DbSet<ClientUser> ClientUsers { get; set; }
        public virtual DbSet<UserInvite> UserInvites { get; set; }
        public virtual DbSet<UserInviteStatu> UserInviteStatus { get; set; }
        public virtual DbSet<ClientToCompanyMap> ClientToCompanyMaps { get; set; }
        public virtual DbSet<DispatchGPSNetwork> DispatchGPSNetworks { get; set; }
        public virtual DbSet<DispatchSoftwareProduct> DispatchSoftwareProducts { get; set; }
        public virtual DbSet<EventSubscriptionLink> EventSubscriptionLinks { get; set; }
        public virtual DbSet<EventSubscription> EventSubscriptions { get; set; }
        public virtual DbSet<EventSubscriptionRecipient> EventSubscriptionRecipients { get; set; }
        public virtual DbSet<ClientRole> ClientRoles { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<ReportType> ReportTypes { get; set; }
        public virtual DbSet<TimeZone> TimeZones { get; set; }
        public virtual DbSet<PersonNotificationTiming> PersonNotificationTimings { get; set; }
        public virtual DbSet<Contract> Contracts { get; set; }
        public virtual DbSet<VendorApplication> VendorApplications { get; set; }
        public virtual DbSet<TimeType> TimeTypes { get; set; }
        public virtual DbSet<ServiceRequestAgentTime> ServiceRequestAgentTimes { get; set; }
        public virtual DbSet<ServiceRequestDeclineReason> ServiceRequestDeclineReasons { get; set; }
        public virtual DbSet<ServiceRequest> ServiceRequests { get; set; }
        public virtual DbSet<ClientRep> ClientReps { get; set; }
        public virtual DbSet<PurchaseOrderThresholdPercentage> PurchaseOrderThresholdPercentages { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual DbSet<MemberPaymentMethod> MemberPaymentMethods { get; set; }
        public virtual DbSet<MobileDeviceRegistration> MobileDeviceRegistrations { get; set; }
        public virtual DbSet<MobileStaticDataVersion> MobileStaticDataVersions { get; set; }
        public virtual DbSet<MakeModel> MakeModels { get; set; }
        public virtual DbSet<CustomerFeedbackCategory> CustomerFeedbackCategories { get; set; }
        public virtual DbSet<CustomerFeedbackCategorySubCategory> CustomerFeedbackCategorySubCategories { get; set; }
        public virtual DbSet<CustomerFeedbackDetail> CustomerFeedbackDetails { get; set; }
        public virtual DbSet<CustomerFeedbackGiftCard> CustomerFeedbackGiftCards { get; set; }
        public virtual DbSet<CustomerFeedbackInvalidReason> CustomerFeedbackInvalidReasons { get; set; }
        public virtual DbSet<CustomerFeedbackPriority> CustomerFeedbackPriorities { get; set; }
        public virtual DbSet<CustomerFeedbackSource> CustomerFeedbackSources { get; set; }
        public virtual DbSet<CustomerFeedbackStatusChangeLog> CustomerFeedbackStatusChangeLogs { get; set; }
        public virtual DbSet<CustomerFeedbackSubCategory> CustomerFeedbackSubCategories { get; set; }
        public virtual DbSet<CustomerFeedbackType> CustomerFeedbackTypes { get; set; }
        public virtual DbSet<CustomerFeedbackTypeCategory> CustomerFeedbackTypeCategories { get; set; }
        public virtual DbSet<CustomerFeedbackSourcePriority> CustomerFeedbackSourcePriorities { get; set; }
        public virtual DbSet<CustomerSurveySample> CustomerSurveySamples { get; set; }
        public virtual DbSet<CustomerFeedbackStatu> CustomerFeedbackStatus { get; set; }
        public virtual DbSet<CustomerFeedback> CustomerFeedbacks { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<ContactLogConnectData> ContactLogConnectDatas { get; set; }
        public virtual DbSet<TwilioFaxResult> TwilioFaxResults { get; set; }

        public virtual ObjectResult<SearchUsersResult> GetUsers(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchUsersResult>("GetUsers", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<SearchOrganizations_Result> GetOrganizations(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchOrganizations_Result>("GetOrganizations", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<Clients_Result> GetClients(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clients_Result>("GetClients", userIDParameter);
        }

        public virtual ObjectResult<ProgramsList> GetPrograms(Nullable<System.Guid> userID, Nullable<int> currentOrganizationID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var currentOrganizationIDParameter = currentOrganizationID.HasValue ?
                new ObjectParameter("currentOrganizationID", currentOrganizationID) :
                new ObjectParameter("currentOrganizationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramsList>("GetPrograms", userIDParameter, currentOrganizationIDParameter);
        }

        public virtual ObjectResult<DataGroupList> GetDataGroupsList(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DataGroupList>("GetDataGroupsList", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<Programs_List_Results> GetProgramsList(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Programs_List_Results>("GetProgramsList", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<SearchClients_Result> GetClientsList(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchClients_Result>("GetClientsList", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<PhoneSystemConfigurationList> GetPhoneSystemConfigurationList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<System.Guid> userID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PhoneSystemConfigurationList>("GetPhoneSystemConfigurationList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, userIDParameter);
        }

        public virtual ObjectResult<PreviousCallList> GetPreviousCallList(Nullable<int> recordID)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PreviousCallList>("GetPreviousCallList", recordIDParameter);
        }

        public virtual ObjectResult<ProgramDataItemForClientReference_Result> GetProgramDataItemForClientReference(Nullable<int> programID, string screenName)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var screenNameParameter = screenName != null ?
                new ObjectParameter("screenName", screenName) :
                new ObjectParameter("screenName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramDataItemForClientReference_Result>("GetProgramDataItemForClientReference", programIDParameter, screenNameParameter);
        }

        public virtual ObjectResult<ProgramsForCall_Result> GetProgramsForCall(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramsForCall_Result>("GetProgramsForCall", userIDParameter);
        }

        public virtual ObjectResult<dms_users_organizations_List> GetUserOrganizations(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dms_users_organizations_List>("GetUserOrganizations", userIDParameter);
        }

        public virtual ObjectResult<ProgramDynamicFields_Result> GetProgramDynamicFields(Nullable<int> programID, string screenName)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var screenNameParameter = screenName != null ?
                new ObjectParameter("screenName", screenName) :
                new ObjectParameter("screenName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramDynamicFields_Result>("GetProgramDynamicFields", programIDParameter, screenNameParameter);
        }

        public virtual ObjectResult<SearchPO_Result> SearchPO(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<System.Guid> userID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchPO_Result>("SearchPO", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, userIDParameter);
        }

        public virtual ObjectResult<CloseLoopSearch_Result> GetCloseLoopSearch(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CloseLoopSearch_Result>("GetCloseLoopSearch", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<ProgramInformation_Result> GetProgramConfigurationForProgram(Nullable<int> programID, string configurationType, string configurationCategory)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var configurationTypeParameter = configurationType != null ?
                new ObjectParameter("configurationType", configurationType) :
                new ObjectParameter("configurationType", typeof(string));

            var configurationCategoryParameter = configurationCategory != null ?
                new ObjectParameter("configurationCategory", configurationCategory) :
                new ObjectParameter("configurationCategory", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramInformation_Result>("GetProgramConfigurationForProgram", programIDParameter, configurationTypeParameter, configurationCategoryParameter);
        }

        public virtual ObjectResult<ProgramServices_Result> GetServicesForProgram(Nullable<int> programID, string productCategory)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var productCategoryParameter = productCategory != null ?
                new ObjectParameter("productCategory", productCategory) :
                new ObjectParameter("productCategory", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramServices_Result>("GetServicesForProgram", programIDParameter, productCategoryParameter);
        }

        public virtual ObjectResult<MemberAssociateList_Result> GetMemberAssociateList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberAssociateList_Result>("GetMemberAssociateList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<MemberServiceRequestHistory_Result> GetMemberServiceRequestHistory(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberServiceRequestHistory_Result>("GetMemberServiceRequestHistory", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<MembsershipInformation_Result> GetMembershipInformation(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MembsershipInformation_Result>("GetMembershipInformation", memberIDParameter);
        }

        public virtual ObjectResult<ProgramVehicleType> GetProgramVehicleType(Nullable<int> programID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramVehicleType>("GetProgramVehicleType", programIDParameter);
        }

        public virtual ObjectResult<ProgramVehicleType> GetProgramVehicleType(Nullable<int> programID, MergeOption mergeOption)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramVehicleType>("GetProgramVehicleType", mergeOption, programIDParameter);
        }

        public virtual ObjectResult<ProductCategoriesForProgram_Result> GetProductCategoriesForProgram(Nullable<int> programID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductCategoriesForProgram_Result>("GetProductCategoriesForProgram", programIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter);
        }

        public virtual ObjectResult<QuestionsForProductCategory_Result> GetQuestionsForProductCategory(Nullable<int> programID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, Nullable<int> serviceRequestID, string sourceSystemName)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var sourceSystemNameParameter = sourceSystemName != null ?
                new ObjectParameter("sourceSystemName", sourceSystemName) :
                new ObjectParameter("sourceSystemName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QuestionsForProductCategory_Result>("GetQuestionsForProductCategory", programIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter, serviceRequestIDParameter, sourceSystemNameParameter);
        }

        public virtual ObjectResult<QuestionAnswerValues_Result> GetQuestionAnswerValues(Nullable<int> programID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, string sourceSystemName)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var sourceSystemNameParameter = sourceSystemName != null ?
                new ObjectParameter("sourceSystemName", sourceSystemName) :
                new ObjectParameter("sourceSystemName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QuestionAnswerValues_Result>("GetQuestionAnswerValues", programIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter, sourceSystemNameParameter);
        }

        public virtual int SaveServiceQuestionAnswers(Nullable<int> serviceRequestID, string inputXML, string userName, Nullable<int> vehicleTypeID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var inputXMLParameter = inputXML != null ?
                new ObjectParameter("inputXML", inputXML) :
                new ObjectParameter("inputXML", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveServiceQuestionAnswers", serviceRequestIDParameter, inputXMLParameter, userNameParameter, vehicleTypeIDParameter);
        }

        public virtual ObjectResult<User> GetAssignedTo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetAssignedTo");
        }

        public virtual ObjectResult<User> GetAssignedTo(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetAssignedTo", mergeOption);
        }

        public virtual ObjectResult<CallSummary_Result> GetCallSummary(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CallSummary_Result>("GetCallSummary", serviceRequestIDParameter);
        }

        public virtual ObjectResult<ClosedLoopActivities_Result> GetClosedLoopActivities(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClosedLoopActivities_Result>("GetClosedLoopActivities", serviceRequestIDParameter);
        }

        public virtual ObjectResult<Payment_List_Result> GetPaymentList(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Payment_List_Result>("GetPaymentList", serviceRequestIDParameter);
        }

        public virtual ObjectResult<PaymentTransactionList_Result> GetPaymentTransactionList(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentTransactionList_Result>("GetPaymentTransactionList", serviceRequestIDParameter);
        }

        public virtual ObjectResult<Member_Information_Result> GetMemberInformation(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_Information_Result>("GetMemberInformation", memberIDParameter);
        }

        public virtual ObjectResult<POForServiceRequest_Result> GetPOForServiceRequest(Nullable<int> serviceRequestID, string sortColumn, string sortOrder)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POForServiceRequest_Result>("GetPOForServiceRequest", serviceRequestIDParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorInformation_Result> GetVendorInformation(Nullable<int> vendorLocationID, Nullable<int> serviceRequestID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInformation_Result>("GetVendorInformation", vendorLocationIDParameter, serviceRequestIDParameter);
        }

        public virtual ObjectResult<MemberPaymentBalance_Result> GetMemberPaymentBalance(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberPaymentBalance_Result>("GetMemberPaymentBalance", serviceRequestIDParameter);
        }

        public virtual ObjectResult<Nullable<int>> GetNextNumber(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNextNumber", nameParameter);
        }

        public virtual ObjectResult<ISPs_Result> GetISPs(Nullable<int> serviceRequestID, Nullable<decimal> actualServiceMiles, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, Nullable<int> searchRadiusMiles, Nullable<decimal> adminWeight, Nullable<decimal> performWeight, Nullable<decimal> costWeight, Nullable<bool> includeDoNotUse, string searchFrom, string productIDs)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            var actualServiceMilesParameter = actualServiceMiles.HasValue ?
                new ObjectParameter("ActualServiceMiles", actualServiceMiles) :
                new ObjectParameter("ActualServiceMiles", typeof(decimal));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var searchRadiusMilesParameter = searchRadiusMiles.HasValue ?
                new ObjectParameter("SearchRadiusMiles", searchRadiusMiles) :
                new ObjectParameter("SearchRadiusMiles", typeof(int));

            var adminWeightParameter = adminWeight.HasValue ?
                new ObjectParameter("AdminWeight", adminWeight) :
                new ObjectParameter("AdminWeight", typeof(decimal));

            var performWeightParameter = performWeight.HasValue ?
                new ObjectParameter("PerformWeight", performWeight) :
                new ObjectParameter("PerformWeight", typeof(decimal));

            var costWeightParameter = costWeight.HasValue ?
                new ObjectParameter("CostWeight", costWeight) :
                new ObjectParameter("CostWeight", typeof(decimal));

            var includeDoNotUseParameter = includeDoNotUse.HasValue ?
                new ObjectParameter("IncludeDoNotUse", includeDoNotUse) :
                new ObjectParameter("IncludeDoNotUse", typeof(bool));

            var searchFromParameter = searchFrom != null ?
                new ObjectParameter("SearchFrom", searchFrom) :
                new ObjectParameter("SearchFrom", typeof(string));

            var productIDsParameter = productIDs != null ?
                new ObjectParameter("productIDs", productIDs) :
                new ObjectParameter("productIDs", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ISPs_Result>("GetISPs", serviceRequestIDParameter, actualServiceMilesParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter, searchRadiusMilesParameter, adminWeightParameter, performWeightParameter, costWeightParameter, includeDoNotUseParameter, searchFromParameter, productIDsParameter);
        }

        public virtual ObjectResult<IsDealerTow_Result> IsDealerTow(Nullable<int> programID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IsDealerTow_Result>("IsDealerTow", programIDParameter);
        }

        public virtual ObjectResult<VendorData_Result> GetVendorData(Nullable<int> vendorLocationID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorData_Result>("GetVendorData", vendorLocationIDParameter);
        }

        public virtual int InsertGOAPODetails(Nullable<int> oldPurchaseOrderID, Nullable<int> newPurchaseOrderID, string userName)
        {
            var oldPurchaseOrderIDParameter = oldPurchaseOrderID.HasValue ?
                new ObjectParameter("OldPurchaseOrderID", oldPurchaseOrderID) :
                new ObjectParameter("OldPurchaseOrderID", typeof(int));

            var newPurchaseOrderIDParameter = newPurchaseOrderID.HasValue ?
                new ObjectParameter("NewPurchaseOrderID", newPurchaseOrderID) :
                new ObjectParameter("NewPurchaseOrderID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGOAPODetails", oldPurchaseOrderIDParameter, newPurchaseOrderIDParameter, userNameParameter);
        }

        public virtual ObjectResult<SendPOHistory_Result> GetSendPOHistory(Nullable<int> purchaseOrderId)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SendPOHistory_Result>("GetSendPOHistory", purchaseOrderIdParameter);
        }

        public virtual ObjectResult<DiagnosticCodes_Result> GetDiagnosticCodes(Nullable<int> serviceRequestID, Nullable<int> vehicleTypeID, string codeType)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var codeTypeParameter = codeType != null ?
                new ObjectParameter("CodeType", codeType) :
                new ObjectParameter("CodeType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiagnosticCodes_Result>("GetDiagnosticCodes", serviceRequestIDParameter, vehicleTypeIDParameter, codeTypeParameter);
        }

        public virtual int SaveDiagnosticCodes(Nullable<int> serviceRequestID, string selectedCodes, string codeType, Nullable<int> primaryCode, string createBy)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var selectedCodesParameter = selectedCodes != null ?
                new ObjectParameter("selectedCodes", selectedCodes) :
                new ObjectParameter("selectedCodes", typeof(string));

            var codeTypeParameter = codeType != null ?
                new ObjectParameter("codeType", codeType) :
                new ObjectParameter("codeType", typeof(string));

            var primaryCodeParameter = primaryCode.HasValue ?
                new ObjectParameter("primaryCode", primaryCode) :
                new ObjectParameter("primaryCode", typeof(int));

            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveDiagnosticCodes", serviceRequestIDParameter, selectedCodesParameter, codeTypeParameter, primaryCodeParameter, createByParameter);
        }

        public virtual int UpdateProducts(Nullable<int> serviceRequestID, Nullable<int> productCategoryID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, Nullable<bool> isPossibleTow, Nullable<int> programID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var isPossibleTowParameter = isPossibleTow.HasValue ?
                new ObjectParameter("IsPossibleTow", isPossibleTow) :
                new ObjectParameter("IsPossibleTow", typeof(bool));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProducts", serviceRequestIDParameter, productCategoryIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter, isPossibleTowParameter, programIDParameter);
        }

        public virtual ObjectResult<SearchMember_Result> SearchMember(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMember_Result>("SearchMember", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<MemberContactInformation_Result> GetMemberContactInformation(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberContactInformation_Result>("GetMemberContactInformation", memberIDParameter);
        }

        public virtual ObjectResult<GoToPODetailItem_Result> GoToPODetailItems(Nullable<int> serviceRequestID, Nullable<decimal> enrouteMiles, Nullable<decimal> returnMiles, Nullable<decimal> estimatedHours, Nullable<int> productID, Nullable<int> vendorLocationID, Nullable<int> vendorID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            var enrouteMilesParameter = enrouteMiles.HasValue ?
                new ObjectParameter("EnrouteMiles", enrouteMiles) :
                new ObjectParameter("EnrouteMiles", typeof(decimal));

            var returnMilesParameter = returnMiles.HasValue ?
                new ObjectParameter("ReturnMiles", returnMiles) :
                new ObjectParameter("ReturnMiles", typeof(decimal));

            var estimatedHoursParameter = estimatedHours.HasValue ?
                new ObjectParameter("EstimatedHours", estimatedHours) :
                new ObjectParameter("EstimatedHours", typeof(decimal));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GoToPODetailItem_Result>("GoToPODetailItems", serviceRequestIDParameter, enrouteMilesParameter, returnMilesParameter, estimatedHoursParameter, productIDParameter, vendorLocationIDParameter, vendorIDParameter);
        }

        public virtual ObjectResult<VehicleYears_Result> GetDistinctVehicleYears()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicleYears_Result>("GetDistinctVehicleYears");
        }

        public virtual ObjectResult<PODetailItemByPOId_Result> GetPODetailItemsByPOId(Nullable<int> purchaseOrderID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("purchaseOrderID", purchaseOrderID) :
                new ObjectParameter("purchaseOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PODetailItemByPOId_Result>("GetPODetailItemsByPOId", purchaseOrderIDParameter);
        }

        public virtual ObjectResult<VendorCallHistory_Result> GetVendorCallHistory(Nullable<int> serviceRequestID, Nullable<int> vendorLocationID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorCallHistory_Result>("GetVendorCallHistory", serviceRequestIDParameter, vendorLocationIDParameter);
        }

        public virtual ObjectResult<VendorSearch_Result> SearchVendor(string searchText, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorSearch_Result>("SearchVendor", searchTextParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<ServiceLimits_Result> GetServiceLimits(Nullable<int> programID, Nullable<int> vehicleCategoryID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceLimits_Result>("GetServiceLimits", programIDParameter, vehicleCategoryIDParameter);
        }

        public virtual int UpdateCommunicationFax(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCommunicationFax", userNameParameter);
        }

        public virtual ObjectResult<PurchaseOrderTemplate_Result> GetPurchaseOrderTemplate(Nullable<int> purchaseOrderID, Nullable<int> contactLogID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));

            var contactLogIDParameter = contactLogID.HasValue ?
                new ObjectParameter("ContactLogID", contactLogID) :
                new ObjectParameter("ContactLogID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseOrderTemplate_Result>("GetPurchaseOrderTemplate", purchaseOrderIDParameter, contactLogIDParameter);
        }

        public virtual ObjectResult<ChildrenPrograms_Result> GetChildrenPrograms(Nullable<int> programID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChildrenPrograms_Result>("GetChildrenPrograms", programIDParameter);
        }

        public virtual ObjectResult<DispatchProcessingList_Result> GetDispatchProcessingList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DispatchProcessingList_Result>("GetDispatchProcessingList");
        }

        public virtual int UpdateServiceRequestClosedLoopStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServiceRequestClosedLoopStatus");
        }

        public virtual int UpdateServiceRequestStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServiceRequestStatus");
        }

        public virtual int PrepareServiceRequestExport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrepareServiceRequestExport");
        }

        public virtual ObjectResult<GetUnitOfMeasures_Result> GetUnitOfMeasures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnitOfMeasures_Result>("GetUnitOfMeasures");
        }

        public virtual ObjectResult<Product> GetPOCopyProducts(Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, Nullable<int> programID)
        {
            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("GetPOCopyProducts", vehicleTypeIDParameter, vehicleCategoryIDParameter, programIDParameter);
        }

        public virtual ObjectResult<Product> GetPOCopyProducts(Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, Nullable<int> programID, MergeOption mergeOption)
        {
            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("GetPOCopyProducts", mergeOption, vehicleTypeIDParameter, vehicleCategoryIDParameter, programIDParameter);
        }

        public virtual ObjectResult<ServiceRequest_Result> GetServiceRequest(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceRequest_Result>("GetServiceRequest", serviceRequestIDParameter);
        }

        public virtual ObjectResult<Nullable<int>> GetPOCountForRedispath(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPOCountForRedispath", serviceRequestIDParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> GetCoverageLimitForPO(Nullable<int> programID, Nullable<int> vehicleCategoryID, Nullable<int> purchaseOrderID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("purchaseOrderID", purchaseOrderID) :
                new ObjectParameter("purchaseOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetCoverageLimitForPO", programIDParameter, vehicleCategoryIDParameter, purchaseOrderIDParameter);
        }

        public virtual ObjectResult<Nullable<int>> GetMaxAllowedVehicles(Nullable<int> programID, Nullable<int> vehicleTypeID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetMaxAllowedVehicles", programIDParameter, vehicleTypeIDParameter);
        }

        public virtual ObjectResult<Product> GetProductOptions(Nullable<int> productCategoryID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID)
        {
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("productCategoryID", productCategoryID) :
                new ObjectParameter("productCategoryID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("GetProductOptions", productCategoryIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter);
        }

        public virtual ObjectResult<Product> GetProductOptions(Nullable<int> productCategoryID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, MergeOption mergeOption)
        {
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("productCategoryID", productCategoryID) :
                new ObjectParameter("productCategoryID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("GetProductOptions", mergeOption, productCategoryIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter);
        }

        public virtual ObjectResult<Mobile_CallForService> GetMemberFromMobileCallForService(string phoneNumber)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mobile_CallForService>("GetMemberFromMobileCallForService", phoneNumberParameter);
        }

        public virtual ObjectResult<Mobile_CallForService> GetMemberFromMobileCallForService(string phoneNumber, MergeOption mergeOption)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mobile_CallForService>("GetMemberFromMobileCallForService", mergeOption, phoneNumberParameter);
        }

        public virtual ObjectResult<MapCallHistory_Result> GetMapCallHistory(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MapCallHistory_Result>("GetMapCallHistory", serviceRequestIDParameter);
        }

        public virtual ObjectResult<Queue_Result> GetQueue(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Queue_Result>("GetQueue", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<MobileCallData_Result> GetMobileCallData(Nullable<int> programID, string configurationType, string configurationCategory, string callBackNumber, Nullable<int> inBoundCallID, Nullable<int> memberID, Nullable<int> membershipID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var configurationTypeParameter = configurationType != null ?
                new ObjectParameter("configurationType", configurationType) :
                new ObjectParameter("configurationType", typeof(string));

            var configurationCategoryParameter = configurationCategory != null ?
                new ObjectParameter("configurationCategory", configurationCategory) :
                new ObjectParameter("configurationCategory", typeof(string));

            var callBackNumberParameter = callBackNumber != null ?
                new ObjectParameter("callBackNumber", callBackNumber) :
                new ObjectParameter("callBackNumber", typeof(string));

            var inBoundCallIDParameter = inBoundCallID.HasValue ?
                new ObjectParameter("inBoundCallID", inBoundCallID) :
                new ObjectParameter("inBoundCallID", typeof(int));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("membershipID", membershipID) :
                new ObjectParameter("membershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MobileCallData_Result>("GetMobileCallData", programIDParameter, configurationTypeParameter, configurationCategoryParameter, callBackNumberParameter, inBoundCallIDParameter, memberIDParameter, membershipIDParameter);
        }

        public virtual ObjectResult<Vehicles_Result> GetVehiclesForMember(Nullable<int> programID, Nullable<int> memberID, Nullable<int> membershipID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("membershipID", membershipID) :
                new ObjectParameter("membershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vehicles_Result>("GetVehiclesForMember", programIDParameter, memberIDParameter, membershipIDParameter);
        }

        public virtual ObjectResult<Nullable<bool>> CoverageLimitUpdate(Nullable<int> programID, Nullable<int> vehicleCategoryID, Nullable<int> purchaseOrderID, Nullable<int> productID, Nullable<int> productRateID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("purchaseOrderID", purchaseOrderID) :
                new ObjectParameter("purchaseOrderID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));

            var productRateIDParameter = productRateID.HasValue ?
                new ObjectParameter("productRateID", productRateID) :
                new ObjectParameter("productRateID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("CoverageLimitUpdate", programIDParameter, vehicleCategoryIDParameter, purchaseOrderIDParameter, productIDParameter, productRateIDParameter);
        }

        public virtual ObjectResult<PaymentRemainingBalance_Result> GetPaymentRemainingBalance(Nullable<int> paymentID)
        {
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("paymentID", paymentID) :
                new ObjectParameter("paymentID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentRemainingBalance_Result>("GetPaymentRemainingBalance", paymentIDParameter);
        }

        public virtual ObjectResult<PaymentSendReceiptHistory_Result> GetPaymentSendReceiptHistory(Nullable<int> paymentID)
        {
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("paymentID", paymentID) :
                new ObjectParameter("paymentID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentSendReceiptHistory_Result>("GetPaymentSendReceiptHistory", paymentIDParameter);
        }

        public virtual ObjectResult<PaymentReceiptValues_Result> GetPaymentReceiptValues(Nullable<int> paymentID)
        {
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentReceiptValues_Result>("GetPaymentReceiptValues", paymentIDParameter);
        }

        public virtual ObjectResult<AccessControlList_Result> GetAccessControlList(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccessControlList_Result>("GetAccessControlList", userIDParameter);
        }

        public virtual ObjectResult<ServiceRequestHistoryList_Result> GetServiceRequestHistoryList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<System.Guid> userID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceRequestHistoryList_Result>("GetServiceRequestHistoryList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, userIDParameter);
        }

        public virtual ObjectResult<ChildrenPrograms_Result> GetChildrenProgramsByName(string programName)
        {
            var programNameParameter = programName != null ?
                new ObjectParameter("programName", programName) :
                new ObjectParameter("programName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChildrenPrograms_Result>("GetChildrenProgramsByName", programNameParameter);
        }

        public virtual ObjectResult<DashboardServiceRequestCount_Result> GetDashboardServiceRequestCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardServiceRequestCount_Result>("GetDashboardServiceRequestCount");
        }

        public virtual ObjectResult<SearchUsersListClientPortal_Result> GetUsersListClientPortal(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchUsersListClientPortal_Result>("GetUsersListClientPortal", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<UsersForVendorPortal_Result> GetUsersForVendorPortal(Nullable<System.Guid> userID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersForVendorPortal_Result>("GetUsersForVendorPortal", userIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<GetVendorInfoSearch_Result> GetVendorInfoSearch(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, string dispatchPhoneNumber, string officePhoneNumber, string vendorSearchName)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var dispatchPhoneNumberParameter = dispatchPhoneNumber != null ?
                new ObjectParameter("DispatchPhoneNumber", dispatchPhoneNumber) :
                new ObjectParameter("DispatchPhoneNumber", typeof(string));

            var officePhoneNumberParameter = officePhoneNumber != null ?
                new ObjectParameter("OfficePhoneNumber", officePhoneNumber) :
                new ObjectParameter("OfficePhoneNumber", typeof(string));

            var vendorSearchNameParameter = vendorSearchName != null ?
                new ObjectParameter("VendorSearchName", vendorSearchName) :
                new ObjectParameter("VendorSearchName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorInfoSearch_Result>("GetVendorInfoSearch", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, dispatchPhoneNumberParameter, officePhoneNumberParameter, vendorSearchNameParameter);
        }

        public virtual ObjectResult<GetVendorDetails_Result> GetVendorDetails(Nullable<int> vendorSearchID, Nullable<int> vendorSearchLocationID, Nullable<int> serviceRequestID, string searchFrom)
        {
            var vendorSearchIDParameter = vendorSearchID.HasValue ?
                new ObjectParameter("VendorSearchID", vendorSearchID) :
                new ObjectParameter("VendorSearchID", typeof(int));

            var vendorSearchLocationIDParameter = vendorSearchLocationID.HasValue ?
                new ObjectParameter("VendorSearchLocationID", vendorSearchLocationID) :
                new ObjectParameter("VendorSearchLocationID", typeof(int));

            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            var searchFromParameter = searchFrom != null ?
                new ObjectParameter("SearchFrom", searchFrom) :
                new ObjectParameter("SearchFrom", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorDetails_Result>("GetVendorDetails", vendorSearchIDParameter, vendorSearchLocationIDParameter, serviceRequestIDParameter, searchFromParameter);
        }

        public virtual ObjectResult<Nullable<int>> ClientPortalRegisterMember(Nullable<int> memberID, Nullable<int> programID, string membershipNumber, Nullable<int> prefixID, string firstName, string middleName, string lastName, Nullable<int> suffixID, string homePhoneNumber, string cellPhoneNumber, string addressLine1, string addressLine2, string addressLine3, string city, Nullable<int> stateID, string zipCode, Nullable<int> countryID, string email, Nullable<System.DateTime> effectiveDate, Nullable<System.DateTime> expirationDate, string userName)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var membershipNumberParameter = membershipNumber != null ?
                new ObjectParameter("MembershipNumber", membershipNumber) :
                new ObjectParameter("MembershipNumber", typeof(string));

            var prefixIDParameter = prefixID.HasValue ?
                new ObjectParameter("prefixID", prefixID) :
                new ObjectParameter("prefixID", typeof(int));

            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));

            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));

            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));

            var suffixIDParameter = suffixID.HasValue ?
                new ObjectParameter("suffixID", suffixID) :
                new ObjectParameter("suffixID", typeof(int));

            var homePhoneNumberParameter = homePhoneNumber != null ?
                new ObjectParameter("homePhoneNumber", homePhoneNumber) :
                new ObjectParameter("homePhoneNumber", typeof(string));

            var cellPhoneNumberParameter = cellPhoneNumber != null ?
                new ObjectParameter("cellPhoneNumber", cellPhoneNumber) :
                new ObjectParameter("cellPhoneNumber", typeof(string));

            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));

            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));

            var addressLine3Parameter = addressLine3 != null ?
                new ObjectParameter("addressLine3", addressLine3) :
                new ObjectParameter("addressLine3", typeof(string));

            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));

            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));

            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("zipCode", zipCode) :
                new ObjectParameter("zipCode", typeof(string));

            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));

            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));

            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("effectiveDate", effectiveDate) :
                new ObjectParameter("effectiveDate", typeof(System.DateTime));

            var expirationDateParameter = expirationDate.HasValue ?
                new ObjectParameter("expirationDate", expirationDate) :
                new ObjectParameter("expirationDate", typeof(System.DateTime));

            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ClientPortalRegisterMember", memberIDParameter, programIDParameter, membershipNumberParameter, prefixIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixIDParameter, homePhoneNumberParameter, cellPhoneNumberParameter, addressLine1Parameter, addressLine2Parameter, addressLine3Parameter, cityParameter, stateIDParameter, zipCodeParameter, countryIDParameter, emailParameter, effectiveDateParameter, expirationDateParameter, userNameParameter);
        }

        public virtual ObjectResult<VendorRates_Result> GetVendorRates(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorlocationid)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorlocationidParameter = vendorlocationid.HasValue ?
                new ObjectParameter("vendorlocationid", vendorlocationid) :
                new ObjectParameter("vendorlocationid", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorRates_Result>("GetVendorRates", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorlocationidParameter);
        }

        public virtual ObjectResult<VendorManagementList_Result> GetVendorManagementList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorManagementList_Result>("GetVendorManagementList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorLocationAddress_Result> GetVendorLocationAddress(Nullable<int> vendorLocationID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationAddress_Result>("GetVendorLocationAddress", vendorLocationIDParameter);
        }

        public virtual ObjectResult<VendorLocationsList_Result> GetVendorLocationsList(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationsList_Result>("GetVendorLocationsList", vendorIDParameter);
        }

        public virtual ObjectResult<VendorActivityList_Result> GetVendorActivityList(Nullable<int> vendorID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorActivityList_Result>("GetVendorActivityList", vendorIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorLocationActivityList_Result> GetVendorLocationActivityList(Nullable<int> vendorLocationID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationActivityList_Result>("GetVendorLocationActivityList", vendorLocationIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<ServicesForVendorPortal_Result> GetServicesForVendorPortal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServicesForVendorPortal_Result>("GetServicesForVendorPortal");
        }

        public virtual ObjectResult<VendorContractDetails_Result> GetVendorContractDetails(Nullable<int> contractID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorContractDetails_Result>("GetVendorContractDetails", contractIDParameter);
        }

        public virtual ObjectResult<VendorContractList_Result> GetVendorContractList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorContractList_Result>("GetVendorContractList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<Vendor_Rates_Schedules_Result> GetVendorRatesSchedules(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_Rates_Schedules_Result>("GetVendorRatesSchedules", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<MemberManagementSearch_Result> GetMemberManagementSearch(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberManagementSearch_Result>("GetMemberManagementSearch", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual int UpdateGeographyTypes(Nullable<int> entityID, string entityName)
        {
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("entityID", entityID) :
                new ObjectParameter("entityID", typeof(int));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGeographyTypes", entityIDParameter, entityNameParameter);
        }

        public virtual ObjectResult<MembersByMembershipID_Result> GetMembersByMembershipID(Nullable<int> membershipID)
        {
            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("MembershipID", membershipID) :
                new ObjectParameter("MembershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MembersByMembershipID_Result>("GetMembersByMembershipID", membershipIDParameter);
        }

        public virtual ObjectResult<MembershipManagementActivityList_Result> GetMembershipManagementActivityList(Nullable<int> membershipID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("membershipID", membershipID) :
                new ObjectParameter("membershipID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MembershipManagementActivityList_Result>("GetMembershipManagementActivityList", membershipIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorLocationRatesAndServices_Result> GetVendorLocationRatesAndServices(Nullable<int> vendorLocationID, Nullable<int> rateScheduleID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            var rateScheduleIDParameter = rateScheduleID.HasValue ?
                new ObjectParameter("rateScheduleID", rateScheduleID) :
                new ObjectParameter("rateScheduleID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationRatesAndServices_Result>("GetVendorLocationRatesAndServices", vendorLocationIDParameter, rateScheduleIDParameter);
        }

        public virtual ObjectResult<VendorLocationContractRateScheduleProductLog_Result> GetVendorLocationContractRateScheduleProductLog(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> contractRateScheduleID, Nullable<int> vendorLocationID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var contractRateScheduleIDParameter = contractRateScheduleID.HasValue ?
                new ObjectParameter("ContractRateScheduleID", contractRateScheduleID) :
                new ObjectParameter("ContractRateScheduleID", typeof(int));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationContractRateScheduleProductLog_Result>("GetVendorLocationContractRateScheduleProductLog", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, contractRateScheduleIDParameter, vendorLocationIDParameter);
        }

        public virtual ObjectResult<MembershipMembersList_Result> GetMembershipMembersList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> membershipID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("MembershipID", membershipID) :
                new ObjectParameter("MembershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MembershipMembersList_Result>("GetMembershipMembersList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, membershipIDParameter);
        }

        public virtual ObjectResult<VendorServicesAndRates_Result> GetVendorServicesAndRates(Nullable<int> rateScheduleID, Nullable<int> vendorLocationID)
        {
            var rateScheduleIDParameter = rateScheduleID.HasValue ?
                new ObjectParameter("RateScheduleID", rateScheduleID) :
                new ObjectParameter("RateScheduleID", typeof(int));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorServicesAndRates_Result>("GetVendorServicesAndRates", rateScheduleIDParameter, vendorLocationIDParameter);
        }

        public virtual ObjectResult<Vehicles_Result> GetVehiclesForMembership(Nullable<int> membershipID)
        {
            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("membershipID", membershipID) :
                new ObjectParameter("membershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vehicles_Result>("GetVehiclesForMembership", membershipIDParameter);
        }

        public virtual ObjectResult<VendorInvoiceActivityList_Result> GetVendorInvoiceActivityList(Nullable<int> vendorInvoiceID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var vendorInvoiceIDParameter = vendorInvoiceID.HasValue ?
                new ObjectParameter("vendorInvoiceID", vendorInvoiceID) :
                new ObjectParameter("vendorInvoiceID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoiceActivityList_Result>("GetVendorInvoiceActivityList", vendorInvoiceIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorInvoicesList_Result> GetVendorInvoicesList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoicesList_Result>("GetVendorInvoicesList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorInvoiceDetails_Result> GetVendorInvoiceDetails(Nullable<int> vendorInvoiceID)
        {
            var vendorInvoiceIDParameter = vendorInvoiceID.HasValue ?
                new ObjectParameter("VendorInvoiceID", vendorInvoiceID) :
                new ObjectParameter("VendorInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoiceDetails_Result>("GetVendorInvoiceDetails", vendorInvoiceIDParameter);
        }

        public virtual ObjectResult<VendorInvoiceVendorLocationDetails_Result> GetVendorInvoiceVendorLocationDetails(Nullable<int> vendorLocationID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoiceVendorLocationDetails_Result>("GetVendorInvoiceVendorLocationDetails", vendorLocationIDParameter);
        }

        public virtual ObjectResult<VendorInvoiceVendorLocationBillingDetails_Result> GetVendorInvoiceVendorLocationBillingDetails(Nullable<int> vendorLocationID, Nullable<int> pOID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoiceVendorLocationBillingDetails_Result>("GetVendorInvoiceVendorLocationBillingDetails", vendorLocationIDParameter, pOIDParameter);
        }

        public virtual ObjectResult<VendorInvoicePODetails_Result> GetVendorInvoicePODetails(string pONumber)
        {
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoicePODetails_Result>("GetVendorInvoicePODetails", pONumberParameter);
        }

        public virtual ObjectResult<VendorPortalInvoiceList_Result> GetVendorPortalInvoiceList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorPortalInvoiceList_Result>("GetVendorPortalInvoiceList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<VendorLocationTransactionList_Result> GetVendorLocationTransactionList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorLocationID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationTransactionList_Result>("GetVendorLocationTransactionList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorLocationIDParameter);
        }

        public virtual ObjectResult<DuplicateVendors_Result> GetDuplicateVendors(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DuplicateVendors_Result>("GetDuplicateVendors", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<VendorInvoiceCurrentBillingInformation_Result> GetVendorInvoiceCurrentBillingInformation(Nullable<int> pOID)
        {
            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoiceCurrentBillingInformation_Result>("GetVendorInvoiceCurrentBillingInformation", pOIDParameter);
        }

        public virtual int AddVendorContractRateSchedule(Nullable<int> contractRateScheduleID, Nullable<int> contractID, string userName)
        {
            var contractRateScheduleIDParameter = contractRateScheduleID.HasValue ?
                new ObjectParameter("ContractRateScheduleID", contractRateScheduleID) :
                new ObjectParameter("ContractRateScheduleID", typeof(int));

            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVendorContractRateSchedule", contractRateScheduleIDParameter, contractIDParameter, userNameParameter);
        }

        public virtual int SaveVendorProducts(Nullable<int> vendorID, string productIDs, string createBy)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));

            var productIDsParameter = productIDs != null ?
                new ObjectParameter("productIDs", productIDs) :
                new ObjectParameter("productIDs", typeof(string));

            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveVendorProducts", vendorIDParameter, productIDsParameter, createByParameter);
        }

        public virtual int SaveVendorLocationProducts(Nullable<int> vendorLocationID, string productIDs, string createBy)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            var productIDsParameter = productIDs != null ?
                new ObjectParameter("productIDs", productIDs) :
                new ObjectParameter("productIDs", typeof(string));

            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveVendorLocationProducts", vendorLocationIDParameter, productIDsParameter, createByParameter);
        }

        public virtual ObjectResult<VendorInvoiceBatchList_Result> GetVendorInvoiceBatchList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorInvoiceBatchList_Result>("GetVendorInvoiceBatchList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<BatchPaymentRunsList_Result> GetBatchPaymentRunsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> batchID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchPaymentRunsList_Result>("GetBatchPaymentRunsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, batchIDParameter);
        }

        public virtual ObjectResult<ClaimsList_Result> GetClaimsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClaimsList_Result>("GetClaimsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<ClaimActivityList_Result> GetClaimActivityList(Nullable<int> claimID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var claimIDParameter = claimID.HasValue ?
                new ObjectParameter("ClaimID", claimID) :
                new ObjectParameter("ClaimID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClaimActivityList_Result>("GetClaimActivityList", claimIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<MemberDetails_Result> GetMemberDetails(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberDetails_Result>("GetMemberDetails", memberIDParameter);
        }

        public virtual ObjectResult<MemberTransactionList_Result> GetMemberTransactionList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> memberID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberTransactionList_Result>("GetMemberTransactionList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, memberIDParameter);
        }

        public virtual ObjectResult<MemberName_Result> GetMemberNameUsingMembershipNumber(string membershipNumber)
        {
            var membershipNumberParameter = membershipNumber != null ?
                new ObjectParameter("membershipNumber", membershipNumber) :
                new ObjectParameter("membershipNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberName_Result>("GetMemberNameUsingMembershipNumber", membershipNumberParameter);
        }

        public virtual ObjectResult<VendorLocations_Result> GetVendorLocations(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocations_Result>("GetVendorLocations", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<VendorServices_Result> GetVendorServices(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorServices_Result>("GetVendorServices", vendorIDParameter);
        }

        public virtual ObjectResult<VendorLocationServices_Result> GetVendorLocationServices(Nullable<int> vendorID, Nullable<int> vendorLocationID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationServices_Result>("GetVendorLocationServices", vendorIDParameter, vendorLocationIDParameter);
        }

        public virtual ObjectResult<ClaimPurchaseOrderNumberLookUPDetails_Result> GetClaimPurchaseOrderNumberLookUPDetails(string purchaseOrderNumber)
        {
            var purchaseOrderNumberParameter = purchaseOrderNumber != null ?
                new ObjectParameter("PurchaseOrderNumber", purchaseOrderNumber) :
                new ObjectParameter("PurchaseOrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClaimPurchaseOrderNumberLookUPDetails_Result>("GetClaimPurchaseOrderNumberLookUPDetails", purchaseOrderNumberParameter);
        }

        public virtual ObjectResult<ClaimMemberAddressPhoneNumberLookUP_Result> GetClaimMemberAddressPhoneNumberLookUP(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClaimMemberAddressPhoneNumberLookUP_Result>("GetClaimMemberAddressPhoneNumberLookUP", memberIDParameter);
        }

        public virtual ObjectResult<PhoneNumber_Result> GetPhoneNumber(Nullable<int> vendorID, string entityName, string phoneType)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("EntityName", entityName) :
                new ObjectParameter("EntityName", typeof(string));

            var phoneTypeParameter = phoneType != null ?
                new ObjectParameter("PhoneType", phoneType) :
                new ObjectParameter("PhoneType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PhoneNumber_Result>("GetPhoneNumber", vendorIDParameter, entityNameParameter, phoneTypeParameter);
        }

        public virtual ObjectResult<MemberManagementMemberDetails_Result> GetMemberManagementMemberDetails(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberManagementMemberDetails_Result>("GetMemberManagementMemberDetails", memberIDParameter);
        }

        public virtual ObjectResult<MemberManagementTransactions_Result> GetMemberManagementTransactions(string sortColumn, string sortOrder, Nullable<int> memberID)
        {
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberManagementTransactions_Result>("GetMemberManagementTransactions", sortColumnParameter, sortOrderParameter, memberIDParameter);
        }

        public virtual ObjectResult<ACESPaymentList_Result> GetACESPaymentList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACESPaymentList_Result>("GetACESPaymentList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<MatchedMembers_Result> GetMemberManagementMembersByFindMatch(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> memberID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MatchedMembers_Result>("GetMemberManagementMembersByFindMatch", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, memberIDParameter);
        }

        public virtual ObjectResult<ClaimApplyCashClaimsList_Result> GetClaimApplyCashClaims()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClaimApplyCashClaimsList_Result>("GetClaimApplyCashClaims");
        }

        public virtual ObjectResult<VendorServiceRatings_Result> GetVendorServiceRatings(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorServiceRatings_Result>("GetVendorServiceRatings", vendorIDParameter);
        }

        public virtual ObjectResult<VendorLocationServiceRatings_Result> GetVendorLocationServiceRatings(Nullable<int> vendorLocationID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationServiceRatings_Result>("GetVendorLocationServiceRatings", vendorLocationIDParameter);
        }

        public virtual int GetMemberMangementSRHistory(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> memberID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMemberMangementSRHistory", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, memberIDParameter);
        }

        public virtual ObjectResult<MemberManagementActivityList_Result> GetMemberManagementActivityList(Nullable<int> memberID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberManagementActivityList_Result>("GetMemberManagementActivityList", memberIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<Vendor_Claims_Result> GetVendorClaims(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_Claims_Result>("GetVendorClaims", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<DocumentsList_Result> GetDocumentsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, string entityName, Nullable<int> recordId, string sourceSystem)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("recordId", recordId) :
                new ObjectParameter("recordId", typeof(int));

            var sourceSystemParameter = sourceSystem != null ?
                new ObjectParameter("sourceSystem", sourceSystem) :
                new ObjectParameter("sourceSystem", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DocumentsList_Result>("GetDocumentsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, entityNameParameter, recordIdParameter, sourceSystemParameter);
        }

        public virtual ObjectResult<Member_Claims_Result> GetMemberClaims(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> memberID, Nullable<int> memberShipID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));

            var memberShipIDParameter = memberShipID.HasValue ?
                new ObjectParameter("MemberShipID", memberShipID) :
                new ObjectParameter("MemberShipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_Claims_Result>("GetMemberClaims", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, memberIDParameter, memberShipIDParameter);
        }

        public virtual ObjectResult<VendorLocationPOList_Result> GetVendorLocationPOList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorLocationID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationPOList_Result>("GetVendorLocationPOList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorLocationIDParameter);
        }

        public virtual ObjectResult<VendorPOList_Result> GetVendorPOList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorPOList_Result>("GetVendorPOList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<ClaimBatchList_Result> GetClaimBatchList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClaimBatchList_Result>("GetClaimBatchList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<ClaimBatchPaymentRunsList_Result> GetClaimBatchPaymentRunsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> batchID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClaimBatchPaymentRunsList_Result>("GetClaimBatchPaymentRunsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, batchIDParameter);
        }

        public virtual ObjectResult<VendorWebAccountInfoModel> GetVendorWebAccountInformation(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorWebAccountInfoModel>("GetVendorWebAccountInformation", vendorIDParameter);
        }

        public virtual ObjectResult<Securable_IsAccessible_Result> GetSecurableIsAccessible(Nullable<System.Guid> userID, string securableName)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var securableNameParameter = securableName != null ?
                new ObjectParameter("securableName", securableName) :
                new ObjectParameter("securableName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Securable_IsAccessible_Result>("GetSecurableIsAccessible", userIDParameter, securableNameParameter);
        }

        public virtual ObjectResult<PO_ChangedPrimaryProduct_Result> PO_GetChangedPrimaryProduct(Nullable<int> purchaseOrderID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("purchaseOrderID", purchaseOrderID) :
                new ObjectParameter("purchaseOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PO_ChangedPrimaryProduct_Result>("PO_GetChangedPrimaryProduct", purchaseOrderIDParameter);
        }

        public virtual ObjectResult<RateSchedulesForReport_Result> GetRateSchedulesForReport(Nullable<int> rateScheduleID)
        {
            var rateScheduleIDParameter = rateScheduleID.HasValue ?
                new ObjectParameter("rateScheduleID", rateScheduleID) :
                new ObjectParameter("rateScheduleID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RateSchedulesForReport_Result>("GetRateSchedulesForReport", rateScheduleIDParameter);
        }

        public virtual ObjectResult<VendorDetailsForReport_Result> GetVendorDetailsForReport(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorDetailsForReport_Result>("GetVendorDetailsForReport", vendorIDParameter);
        }

        public virtual ObjectResult<PostLogin_VendorPhoneNumbers_Result> GetPostLogin_VendorPhoneNumbers(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("vendorId", vendorId) :
                new ObjectParameter("vendorId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostLogin_VendorPhoneNumbers_Result>("GetPostLogin_VendorPhoneNumbers", vendorIdParameter);
        }

        public virtual ObjectResult<VendorDashboardServiceTypes_Result> GetVendorDashboardServiceTypes(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorDashboardServiceTypes_Result>("GetVendorDashboardServiceTypes", vendorIDParameter);
        }

        public virtual ObjectResult<VINSearch_Result> SearchByVIN(string searchText, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VINSearch_Result>("SearchByVIN", searchTextParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<ClientBatchList_Result> GetClientBatchList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientBatchList_Result>("GetClientBatchList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<DiagnosticCodes_Result> GetClaimDiagnosticCodes(Nullable<int> claimID, Nullable<int> vehicleTypeID, string codeType)
        {
            var claimIDParameter = claimID.HasValue ?
                new ObjectParameter("claimID", claimID) :
                new ObjectParameter("claimID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var codeTypeParameter = codeType != null ?
                new ObjectParameter("CodeType", codeType) :
                new ObjectParameter("CodeType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiagnosticCodes_Result>("GetClaimDiagnosticCodes", claimIDParameter, vehicleTypeIDParameter, codeTypeParameter);
        }

        public virtual int SaveClaimDiagnosticCodes(Nullable<int> claimID, string selectedCodes, string codeType, Nullable<int> primaryCode, string createBy)
        {
            var claimIDParameter = claimID.HasValue ?
                new ObjectParameter("ClaimID", claimID) :
                new ObjectParameter("ClaimID", typeof(int));

            var selectedCodesParameter = selectedCodes != null ?
                new ObjectParameter("selectedCodes", selectedCodes) :
                new ObjectParameter("selectedCodes", typeof(string));

            var codeTypeParameter = codeType != null ?
                new ObjectParameter("codeType", codeType) :
                new ObjectParameter("codeType", typeof(string));

            var primaryCodeParameter = primaryCode.HasValue ?
                new ObjectParameter("primaryCode", primaryCode) :
                new ObjectParameter("primaryCode", typeof(int));

            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveClaimDiagnosticCodes", claimIDParameter, selectedCodesParameter, codeTypeParameter, primaryCodeParameter, createByParameter);
        }

        public virtual ObjectResult<VendorLocationPaymentTypes_Result> GetVendorLocationPaymentTypes(Nullable<int> vendorLocationID, string entityName)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("EntityName", entityName) :
                new ObjectParameter("EntityName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationPaymentTypes_Result>("GetVendorLocationPaymentTypes", vendorLocationIDParameter, entityNameParameter);
        }

        public virtual ObjectResult<ServiceRatingsProductCategoryList_Result> GetServiceRatingsProductCategoryList(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceRatingsProductCategoryList_Result>("GetServiceRatingsProductCategoryList", vendorIDParameter);
        }

        public virtual ObjectResult<ServiceRatingsProductList_Result> GetServiceRatingsProductList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceRatingsProductList_Result>("GetServiceRatingsProductList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<VendorPortalServiceRatingsList_Result> GetVendorPortalServiceRatingsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID, Nullable<int> vendorLocationID, Nullable<int> productCategoryID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorPortalServiceRatingsList_Result>("GetVendorPortalServiceRatingsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter, vendorLocationIDParameter, productCategoryIDParameter);
        }

        public virtual ObjectResult<SearchMembersByVINOrMS_Result> SearchMembersByVINOrMS(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMembersByVINOrMS_Result>("SearchMembersByVINOrMS", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<Vendor_Dashboard_Profile_completeness_Result> GetVendorDashboardProfileCompleteness(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_Dashboard_Profile_completeness_Result>("GetVendorDashboardProfileCompleteness", vendorIDParameter);
        }

        public virtual ObjectResult<Vendor_Dashboard_ServiceCallActivity_Result> GetVendorDashboardServiceCallActivity(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_Dashboard_ServiceCallActivity_Result>("GetVendorDashboardServiceCallActivity", vendorIDParameter);
        }

        public virtual ObjectResult<Vendor_Dashboard_ServiceRatings_Result> GetVendorDashboardServiceRatings(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_Dashboard_ServiceRatings_Result>("GetVendorDashboardServiceRatings", vendorIDParameter);
        }

        public virtual ObjectResult<VendorPortalServiceContactActionsList_Result> GetVendorPortalServiceContactActionsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID, Nullable<int> productID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorPortalServiceContactActionsList_Result>("GetVendorPortalServiceContactActionsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter, productIDParameter);
        }

        public virtual ObjectResult<ClientBillableEventProcessingList_Result> GetClientBillableEventProcessingList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, string pMode)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var pModeParameter = pMode != null ?
                new ObjectParameter("pMode", pMode) :
                new ObjectParameter("pMode", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientBillableEventProcessingList_Result>("GetClientBillableEventProcessingList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, pModeParameter);
        }

        public virtual int UpdateBatchDetailsAndLogEventsForPayInvoices(string invoicesXML, Nullable<long> batchID, string currentUser, string eventSource, string eventName, string eventDetails, string entityName, string sessionID)
        {
            var invoicesXMLParameter = invoicesXML != null ?
                new ObjectParameter("invoicesXML", invoicesXML) :
                new ObjectParameter("invoicesXML", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("batchID", batchID) :
                new ObjectParameter("batchID", typeof(long));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var eventSourceParameter = eventSource != null ?
                new ObjectParameter("eventSource", eventSource) :
                new ObjectParameter("eventSource", typeof(string));

            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));

            var eventDetailsParameter = eventDetails != null ?
                new ObjectParameter("eventDetails", eventDetails) :
                new ObjectParameter("eventDetails", typeof(string));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBatchDetailsAndLogEventsForPayInvoices", invoicesXMLParameter, batchIDParameter, currentUserParameter, eventSourceParameter, eventNameParameter, eventDetailsParameter, entityNameParameter, sessionIDParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> UpdateBatchStatistics(string invoicesOrClaimsXML, Nullable<long> batchID, string batchStatus, string currentUser, string entityName, Nullable<long> unbilledBatchID)
        {
            var invoicesOrClaimsXMLParameter = invoicesOrClaimsXML != null ?
                new ObjectParameter("invoicesOrClaimsXML", invoicesOrClaimsXML) :
                new ObjectParameter("invoicesOrClaimsXML", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("batchID", batchID) :
                new ObjectParameter("batchID", typeof(long));

            var batchStatusParameter = batchStatus != null ?
                new ObjectParameter("batchStatus", batchStatus) :
                new ObjectParameter("batchStatus", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var unbilledBatchIDParameter = unbilledBatchID.HasValue ?
                new ObjectParameter("unbilledBatchID", unbilledBatchID) :
                new ObjectParameter("unbilledBatchID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateBatchStatistics", invoicesOrClaimsXMLParameter, batchIDParameter, batchStatusParameter, currentUserParameter, entityNameParameter, unbilledBatchIDParameter);
        }

        public virtual int UpdateBatchDetailsAndLogEventsForPayClaims(string claimsXML, Nullable<long> batchID, string currentUser, string eventSource, string eventName, string eventDetails, string entityName, string sessionID)
        {
            var claimsXMLParameter = claimsXML != null ?
                new ObjectParameter("claimsXML", claimsXML) :
                new ObjectParameter("claimsXML", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("batchID", batchID) :
                new ObjectParameter("batchID", typeof(long));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var eventSourceParameter = eventSource != null ?
                new ObjectParameter("eventSource", eventSource) :
                new ObjectParameter("eventSource", typeof(string));

            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));

            var eventDetailsParameter = eventDetails != null ?
                new ObjectParameter("eventDetails", eventDetails) :
                new ObjectParameter("eventDetails", typeof(string));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBatchDetailsAndLogEventsForPayClaims", claimsXMLParameter, batchIDParameter, currentUserParameter, eventSourceParameter, eventNameParameter, eventDetailsParameter, entityNameParameter, sessionIDParameter);
        }

        public virtual ObjectResult<ClientBillableEventProcessingDetails_Result> GetClientBillableEventProcessingDetails(Nullable<int> pBillingInvoiceDetail)
        {
            var pBillingInvoiceDetailParameter = pBillingInvoiceDetail.HasValue ?
                new ObjectParameter("pBillingInvoiceDetail", pBillingInvoiceDetail) :
                new ObjectParameter("pBillingInvoiceDetail", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientBillableEventProcessingDetails_Result>("GetClientBillableEventProcessingDetails", pBillingInvoiceDetailParameter);
        }

        public virtual ObjectResult<ClientBillableEventProcessingExceptions_Result> GetClientBillableEventProcessingExceptions(Nullable<int> billingInvoiceDetailID)
        {
            var billingInvoiceDetailIDParameter = billingInvoiceDetailID.HasValue ?
                new ObjectParameter("BillingInvoiceDetailID", billingInvoiceDetailID) :
                new ObjectParameter("BillingInvoiceDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientBillableEventProcessingExceptions_Result>("GetClientBillableEventProcessingExceptions", billingInvoiceDetailIDParameter);
        }

        public virtual ObjectResult<BillingInvoiceLinesList_Result> GetBillingInvoiceLinesList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> billingInvoiceID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var billingInvoiceIDParameter = billingInvoiceID.HasValue ?
                new ObjectParameter("BillingInvoiceID", billingInvoiceID) :
                new ObjectParameter("BillingInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BillingInvoiceLinesList_Result>("GetBillingInvoiceLinesList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, billingInvoiceIDParameter);
        }

        public virtual ObjectResult<Nullable<bool>> IsABANumberValid(string aBANumber)
        {
            var aBANumberParameter = aBANumber != null ?
                new ObjectParameter("ABANumber", aBANumber) :
                new ObjectParameter("ABANumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("IsABANumberValid", aBANumberParameter);
        }

        public virtual int BillingGenerateInvoices(string pUserName, Nullable<bool> pRefreshDetail, Nullable<int> pScheduleTypeID, Nullable<int> pScheduleDateTypeID, Nullable<int> pScheduleRangeTypeID, string pInvoicesXML)
        {
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));

            var pRefreshDetailParameter = pRefreshDetail.HasValue ?
                new ObjectParameter("pRefreshDetail", pRefreshDetail) :
                new ObjectParameter("pRefreshDetail", typeof(bool));

            var pScheduleTypeIDParameter = pScheduleTypeID.HasValue ?
                new ObjectParameter("pScheduleTypeID", pScheduleTypeID) :
                new ObjectParameter("pScheduleTypeID", typeof(int));

            var pScheduleDateTypeIDParameter = pScheduleDateTypeID.HasValue ?
                new ObjectParameter("pScheduleDateTypeID", pScheduleDateTypeID) :
                new ObjectParameter("pScheduleDateTypeID", typeof(int));

            var pScheduleRangeTypeIDParameter = pScheduleRangeTypeID.HasValue ?
                new ObjectParameter("pScheduleRangeTypeID", pScheduleRangeTypeID) :
                new ObjectParameter("pScheduleRangeTypeID", typeof(int));

            var pInvoicesXMLParameter = pInvoicesXML != null ?
                new ObjectParameter("pInvoicesXML", pInvoicesXML) :
                new ObjectParameter("pInvoicesXML", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BillingGenerateInvoices", pUserNameParameter, pRefreshDetailParameter, pScheduleTypeIDParameter, pScheduleDateTypeIDParameter, pScheduleRangeTypeIDParameter, pInvoicesXMLParameter);
        }

        public virtual int GetBillingDetailExceptions(string pUserName, Nullable<int> pScheduleTypeID, Nullable<int> pScheduleDateTypeID, Nullable<int> pScheduleRangeTypeID, string pInvoicesXML)
        {
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));

            var pScheduleTypeIDParameter = pScheduleTypeID.HasValue ?
                new ObjectParameter("pScheduleTypeID", pScheduleTypeID) :
                new ObjectParameter("pScheduleTypeID", typeof(int));

            var pScheduleDateTypeIDParameter = pScheduleDateTypeID.HasValue ?
                new ObjectParameter("pScheduleDateTypeID", pScheduleDateTypeID) :
                new ObjectParameter("pScheduleDateTypeID", typeof(int));

            var pScheduleRangeTypeIDParameter = pScheduleRangeTypeID.HasValue ?
                new ObjectParameter("pScheduleRangeTypeID", pScheduleRangeTypeID) :
                new ObjectParameter("pScheduleRangeTypeID", typeof(int));

            var pInvoicesXMLParameter = pInvoicesXML != null ?
                new ObjectParameter("pInvoicesXML", pInvoicesXML) :
                new ObjectParameter("pInvoicesXML", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBillingDetailExceptions", pUserNameParameter, pScheduleTypeIDParameter, pScheduleDateTypeIDParameter, pScheduleRangeTypeIDParameter, pInvoicesXMLParameter);
        }

        public virtual ObjectResult<ClientBillableEventProcessingCascadeBillingEvent_Result> GetClientBillableEventProcessingCascadeBillingEvent(string lineID)
        {
            var lineIDParameter = lineID != null ?
                new ObjectParameter("lineID", lineID) :
                new ObjectParameter("lineID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientBillableEventProcessingCascadeBillingEvent_Result>("GetClientBillableEventProcessingCascadeBillingEvent", lineIDParameter);
        }

        public virtual ObjectResult<VendorUserProfile_Result> GetVendorUserProfile(string loggedInUsername)
        {
            var loggedInUsernameParameter = loggedInUsername != null ?
                new ObjectParameter("loggedInUsername", loggedInUsername) :
                new ObjectParameter("loggedInUsername", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorUserProfile_Result>("GetVendorUserProfile", loggedInUsernameParameter);
        }

        public virtual ObjectResult<ClientInvoiceEventProcessingList_Result> GetClientInvoiceEventProcessingList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> billingInvoiceLineID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var billingInvoiceLineIDParameter = billingInvoiceLineID.HasValue ?
                new ObjectParameter("billingInvoiceLineID", billingInvoiceLineID) :
                new ObjectParameter("billingInvoiceLineID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientInvoiceEventProcessingList_Result>("GetClientInvoiceEventProcessingList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, billingInvoiceLineIDParameter);
        }

        public virtual ObjectResult<VerifyBillingInvoices_Result> VerifyBillingInvoices(string invoicesCSV)
        {
            var invoicesCSVParameter = invoicesCSV != null ?
                new ObjectParameter("invoicesCSV", invoicesCSV) :
                new ObjectParameter("invoicesCSV", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerifyBillingInvoices_Result>("VerifyBillingInvoices", invoicesCSVParameter);
        }

        public virtual int TagInvoices(string invoicesXML, Nullable<long> billedBatchID, Nullable<long> unBilledBatchID, string currentUser, string eventSource, string eventName, string eventDetails, string entityName, string sessionID)
        {
            var invoicesXMLParameter = invoicesXML != null ?
                new ObjectParameter("invoicesXML", invoicesXML) :
                new ObjectParameter("invoicesXML", typeof(string));

            var billedBatchIDParameter = billedBatchID.HasValue ?
                new ObjectParameter("billedBatchID", billedBatchID) :
                new ObjectParameter("billedBatchID", typeof(long));

            var unBilledBatchIDParameter = unBilledBatchID.HasValue ?
                new ObjectParameter("unBilledBatchID", unBilledBatchID) :
                new ObjectParameter("unBilledBatchID", typeof(long));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var eventSourceParameter = eventSource != null ?
                new ObjectParameter("eventSource", eventSource) :
                new ObjectParameter("eventSource", typeof(string));

            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));

            var eventDetailsParameter = eventDetails != null ?
                new ObjectParameter("eventDetails", eventDetails) :
                new ObjectParameter("eventDetails", typeof(string));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TagInvoices", invoicesXMLParameter, billedBatchIDParameter, unBilledBatchIDParameter, currentUserParameter, eventSourceParameter, eventNameParameter, eventDetailsParameter, entityNameParameter, sessionIDParameter);
        }

        public virtual ObjectResult<ClientBatchPaymentRunsList_Result> GetClientBatchPaymentRunsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> batchID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientBatchPaymentRunsList_Result>("GetClientBatchPaymentRunsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, batchIDParameter);
        }

        public virtual ObjectResult<SearchMember_Result> SearchMember_Merge(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMember_Result>("SearchMember_Merge", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<BillingManageInvoicesList_Result> GetBillingManageInvoicesList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, string pMode)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var pModeParameter = pMode != null ?
                new ObjectParameter("pMode", pMode) :
                new ObjectParameter("pMode", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BillingManageInvoicesList_Result>("GetBillingManageInvoicesList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, pModeParameter);
        }

        public virtual ObjectResult<VendorCCProcessingList_Result> GetVendorCCProcessingList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorCCProcessingList_Result>("GetVendorCCProcessingList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorCCProcessingDetailList_Result> GetVendorCCProcessingDetailList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> temporaryCreditCardId)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var temporaryCreditCardIdParameter = temporaryCreditCardId.HasValue ?
                new ObjectParameter("TemporaryCreditCardId", temporaryCreditCardId) :
                new ObjectParameter("TemporaryCreditCardId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorCCProcessingDetailList_Result>("GetVendorCCProcessingDetailList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, temporaryCreditCardIdParameter);
        }

        public virtual ObjectResult<TemporaryCCCardDetails_Result> GetTemporaryCCCardDetails(Nullable<int> tempCCID)
        {
            var tempCCIDParameter = tempCCID.HasValue ?
                new ObjectParameter("TempCCID", tempCCID) :
                new ObjectParameter("TempCCID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemporaryCCCardDetails_Result>("GetTemporaryCCCardDetails", tempCCIDParameter);
        }

        public virtual ObjectResult<TemporaryCCBatchList_Result> GetTemporaryCCBatchList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemporaryCCBatchList_Result>("GetTemporaryCCBatchList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> UpdateTempCCBatchDetails(string invoicesXML, Nullable<long> batchID, string currentUser, string eventSource, string eventName, string eventDetails, string entityName, string sessionID)
        {
            var invoicesXMLParameter = invoicesXML != null ?
                new ObjectParameter("invoicesXML", invoicesXML) :
                new ObjectParameter("invoicesXML", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("batchID", batchID) :
                new ObjectParameter("batchID", typeof(long));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var eventSourceParameter = eventSource != null ?
                new ObjectParameter("eventSource", eventSource) :
                new ObjectParameter("eventSource", typeof(string));

            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));

            var eventDetailsParameter = eventDetails != null ?
                new ObjectParameter("eventDetails", eventDetails) :
                new ObjectParameter("eventDetails", typeof(string));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateTempCCBatchDetails", invoicesXMLParameter, batchIDParameter, currentUserParameter, eventSourceParameter, eventNameParameter, eventDetailsParameter, entityNameParameter, sessionIDParameter);
        }

        public virtual ObjectResult<VendorSummaryLocationRates_Result> GetVendorSummaryLocationRates(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> vendorID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorSummaryLocationRates_Result>("GetVendorSummaryLocationRates", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, vendorIDParameter);
        }

        public virtual ObjectResult<ClientClosePeriodList_Result> GetClientClosePeriodList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientClosePeriodList_Result>("GetClientClosePeriodList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual int ProcessClientClosePeriod(string billingSchedules, string userName, string sessionID, string pageReference)
        {
            var billingSchedulesParameter = billingSchedules != null ?
                new ObjectParameter("billingSchedules", billingSchedules) :
                new ObjectParameter("billingSchedules", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            var pageReferenceParameter = pageReference != null ?
                new ObjectParameter("pageReference", pageReference) :
                new ObjectParameter("pageReference", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcessClientClosePeriod", billingSchedulesParameter, userNameParameter, sessionIDParameter, pageReferenceParameter);
        }

        public virtual ObjectResult<ClientOpenPeriodList_Result> GetClientOpenPeriodList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientOpenPeriodList_Result>("GetClientOpenPeriodList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual int ProcessClientOpenPeriod(Nullable<int> billingDefinitionInvoiceID, Nullable<int> billingScheduleID, Nullable<int> scheduleTypeID, Nullable<int> scheduleDateTypeID, Nullable<int> scheduleRangeTypeID, string userName, string sessionID, string pageReference)
        {
            var billingDefinitionInvoiceIDParameter = billingDefinitionInvoiceID.HasValue ?
                new ObjectParameter("billingDefinitionInvoiceID", billingDefinitionInvoiceID) :
                new ObjectParameter("billingDefinitionInvoiceID", typeof(int));

            var billingScheduleIDParameter = billingScheduleID.HasValue ?
                new ObjectParameter("billingScheduleID", billingScheduleID) :
                new ObjectParameter("billingScheduleID", typeof(int));

            var scheduleTypeIDParameter = scheduleTypeID.HasValue ?
                new ObjectParameter("scheduleTypeID", scheduleTypeID) :
                new ObjectParameter("scheduleTypeID", typeof(int));

            var scheduleDateTypeIDParameter = scheduleDateTypeID.HasValue ?
                new ObjectParameter("scheduleDateTypeID", scheduleDateTypeID) :
                new ObjectParameter("scheduleDateTypeID", typeof(int));

            var scheduleRangeTypeIDParameter = scheduleRangeTypeID.HasValue ?
                new ObjectParameter("scheduleRangeTypeID", scheduleRangeTypeID) :
                new ObjectParameter("scheduleRangeTypeID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            var pageReferenceParameter = pageReference != null ?
                new ObjectParameter("pageReference", pageReference) :
                new ObjectParameter("pageReference", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcessClientOpenPeriod", billingDefinitionInvoiceIDParameter, billingScheduleIDParameter, scheduleTypeIDParameter, scheduleDateTypeIDParameter, scheduleRangeTypeIDParameter, userNameParameter, sessionIDParameter, pageReferenceParameter);
        }

        public virtual ObjectResult<VendorTempCCMatchUpdate_Result> VendorTempCCMatchUpdate(string tempccIdXML, string currentUser)
        {
            var tempccIdXMLParameter = tempccIdXML != null ?
                new ObjectParameter("tempccIdXML", tempccIdXML) :
                new ObjectParameter("tempccIdXML", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorTempCCMatchUpdate_Result>("VendorTempCCMatchUpdate", tempccIdXMLParameter, currentUserParameter);
        }

        public virtual ObjectResult<DashboardDispatchChart_Result> GetDashboardDispatchChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardDispatchChart_Result>("GetDashboardDispatchChart");
        }

        public virtual ObjectResult<DashboardDispatchChartLabels_Result> GetDashboardDispatchChartLabels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardDispatchChartLabels_Result>("GetDashboardDispatchChartLabels");
        }

        public virtual ObjectResult<VendorLocation_GeographyLocation_Result> GetVendorLocationGeographyLocation(Nullable<int> vendorLocationID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocation_GeographyLocation_Result>("GetVendorLocationGeographyLocation", vendorLocationIDParameter);
        }

        public virtual ObjectResult<VendorLocationGeographyListManage_Result> GetVendorLocationGeographyListManage(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationGeographyListManage_Result>("GetVendorLocationGeographyListManage", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<VendorLocationVirtual_Result> GetVendorLocationVirtual(Nullable<int> vendorLocationID)
        {
            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("vendorLocationID", vendorLocationID) :
                new ObjectParameter("vendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationVirtual_Result>("GetVendorLocationVirtual", vendorLocationIDParameter);
        }

        public virtual ObjectResult<VendorContractStatus_Result> GetVendorContractStatus(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorContractStatus_Result>("GetVendorContractStatus", vendorIDParameter);
        }

        public virtual ObjectResult<TempCCGLAccountList_Result> GetTempCCGLAccountList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> batchID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempCCGLAccountList_Result>("GetTempCCGLAccountList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, batchIDParameter);
        }

        public virtual ObjectResult<TemporaryCCBatchPaymentRunsList_Result> GetTemporaryCCBatchPaymentRunsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> batchID, string gLAccountName)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));

            var gLAccountNameParameter = gLAccountName != null ?
                new ObjectParameter("GLAccountName", gLAccountName) :
                new ObjectParameter("GLAccountName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemporaryCCBatchPaymentRunsList_Result>("GetTemporaryCCBatchPaymentRunsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, batchIDParameter, gLAccountNameParameter);
        }

        public virtual int TempCC_VendorInvoice_update(Nullable<int> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempCC_VendorInvoice_update", batchIdParameter);
        }

        public virtual ObjectResult<ClientOpenPeriodToBeProcessRecords_Result> GetClientOpenPeriodToBeProcessRecords(string billingSchedules)
        {
            var billingSchedulesParameter = billingSchedules != null ?
                new ObjectParameter("billingSchedules", billingSchedules) :
                new ObjectParameter("billingSchedules", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientOpenPeriodToBeProcessRecords_Result>("GetClientOpenPeriodToBeProcessRecords", billingSchedulesParameter);
        }

        public virtual ObjectResult<Vendor_Contract_Status_Get_Result> Vendor_Contract_Status_Get(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_Contract_Status_Get_Result>("Vendor_Contract_Status_Get", vendorIDParameter);
        }

        public virtual ObjectResult<ProgramMaintainenceList_Result> GetProgramMaintainenceList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramMaintainenceList_Result>("GetProgramMaintainenceList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<ProgramMaintenanceInformation_Result> GetProgramMaintenanceInformation(Nullable<int> programID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramMaintenanceInformation_Result>("GetProgramMaintenanceInformation", programIDParameter);
        }

        public virtual ObjectResult<ProgramManagementInformation_Result> GetProgramManagementInformation(Nullable<int> programID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementInformation_Result>("GetProgramManagementInformation", programIDParameter);
        }

        public virtual ObjectResult<ProgramManagementServicesList_Result> GetProgramManagementServicesList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementServicesList_Result>("GetProgramManagementServicesList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<StartCallMemberSelections_Result> GetStartCallMemberSelections(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, string memberIDCommaSeprated)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDCommaSepratedParameter = memberIDCommaSeprated != null ?
                new ObjectParameter("memberIDCommaSeprated", memberIDCommaSeprated) :
                new ObjectParameter("memberIDCommaSeprated", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StartCallMemberSelections_Result>("GetStartCallMemberSelections", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, memberIDCommaSepratedParameter);
        }

        public virtual int CreateClientOpenPeriodProcessEventLogs(string userName, string sessionID, string pageReference, string billingScheduleIDList, string billingDefinitionInvoiceIDList)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            var pageReferenceParameter = pageReference != null ?
                new ObjectParameter("pageReference", pageReference) :
                new ObjectParameter("pageReference", typeof(string));

            var billingScheduleIDListParameter = billingScheduleIDList != null ?
                new ObjectParameter("billingScheduleIDList", billingScheduleIDList) :
                new ObjectParameter("billingScheduleIDList", typeof(string));

            var billingDefinitionInvoiceIDListParameter = billingDefinitionInvoiceIDList != null ?
                new ObjectParameter("billingDefinitionInvoiceIDList", billingDefinitionInvoiceIDList) :
                new ObjectParameter("billingDefinitionInvoiceIDList", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateClientOpenPeriodProcessEventLogs", userNameParameter, sessionIDParameter, pageReferenceParameter, billingScheduleIDListParameter, billingDefinitionInvoiceIDListParameter);
        }

        public virtual int UpdateBillinginvoiceDetailDisposition(string billingeventdetailIdXML, string currentUser, Nullable<int> statusId, Nullable<int> eventId)
        {
            var billingeventdetailIdXMLParameter = billingeventdetailIdXML != null ?
                new ObjectParameter("billingeventdetailIdXML", billingeventdetailIdXML) :
                new ObjectParameter("billingeventdetailIdXML", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("statusId", statusId) :
                new ObjectParameter("statusId", typeof(int));

            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBillinginvoiceDetailDisposition", billingeventdetailIdXMLParameter, currentUserParameter, statusIdParameter, eventIdParameter);
        }

        public virtual int UpdateBillingEventDetailStatus(string billingeventdetailIdXML, string currentUser, Nullable<int> statusId, Nullable<int> eventId)
        {
            var billingeventdetailIdXMLParameter = billingeventdetailIdXML != null ?
                new ObjectParameter("billingeventdetailIdXML", billingeventdetailIdXML) :
                new ObjectParameter("billingeventdetailIdXML", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("statusId", statusId) :
                new ObjectParameter("statusId", typeof(int));

            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBillingEventDetailStatus", billingeventdetailIdXMLParameter, currentUserParameter, statusIdParameter, eventIdParameter);
        }

        public virtual ObjectResult<ProgramManagementProgramConfigurationList_Result> GetProgramManagementProgramConfigurationList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementProgramConfigurationList_Result>("GetProgramManagementProgramConfigurationList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<ProgramConfigurationDetails_Result> GetProgramConfigurationDetails(Nullable<int> programConfigurationId)
        {
            var programConfigurationIdParameter = programConfigurationId.HasValue ?
                new ObjectParameter("programConfigurationId", programConfigurationId) :
                new ObjectParameter("programConfigurationId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramConfigurationDetails_Result>("GetProgramConfigurationDetails", programConfigurationIdParameter);
        }

        public virtual int SaveProgramConfiguration(Nullable<int> programConfigurationId, Nullable<int> configurationTypeID, Nullable<int> configurationCategoryID, Nullable<int> controlTypeID, Nullable<int> dataTypeID, string name, string value, Nullable<int> sequence, string user, Nullable<System.DateTime> modifiedOn, Nullable<bool> isAdd, Nullable<int> programID)
        {
            var programConfigurationIdParameter = programConfigurationId.HasValue ?
                new ObjectParameter("programConfigurationId", programConfigurationId) :
                new ObjectParameter("programConfigurationId", typeof(int));

            var configurationTypeIDParameter = configurationTypeID.HasValue ?
                new ObjectParameter("configurationTypeID", configurationTypeID) :
                new ObjectParameter("configurationTypeID", typeof(int));

            var configurationCategoryIDParameter = configurationCategoryID.HasValue ?
                new ObjectParameter("configurationCategoryID", configurationCategoryID) :
                new ObjectParameter("configurationCategoryID", typeof(int));

            var controlTypeIDParameter = controlTypeID.HasValue ?
                new ObjectParameter("controlTypeID", controlTypeID) :
                new ObjectParameter("controlTypeID", typeof(int));

            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("dataTypeID", dataTypeID) :
                new ObjectParameter("dataTypeID", typeof(int));

            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));

            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));

            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("sequence", sequence) :
                new ObjectParameter("sequence", typeof(int));

            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));

            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("modifiedOn", modifiedOn) :
                new ObjectParameter("modifiedOn", typeof(System.DateTime));

            var isAddParameter = isAdd.HasValue ?
                new ObjectParameter("isAdd", isAdd) :
                new ObjectParameter("isAdd", typeof(bool));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveProgramConfiguration", programConfigurationIdParameter, configurationTypeIDParameter, configurationCategoryIDParameter, controlTypeIDParameter, dataTypeIDParameter, nameParameter, valueParameter, sequenceParameter, userParameter, modifiedOnParameter, isAddParameter, programIDParameter);
        }

        public virtual int SaveProgramManagementInformation(Nullable<int> programID, Nullable<int> parentProgramID, string programName, string programDescription, string programCode, Nullable<bool> isActive, Nullable<bool> isAudited, Nullable<bool> isGroup, Nullable<bool> isServiceGuaranteed, Nullable<bool> isWebRegistrationEnabled, string modifiedBy)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var parentProgramIDParameter = parentProgramID.HasValue ?
                new ObjectParameter("parentProgramID", parentProgramID) :
                new ObjectParameter("parentProgramID", typeof(int));

            var programNameParameter = programName != null ?
                new ObjectParameter("programName", programName) :
                new ObjectParameter("programName", typeof(string));

            var programDescriptionParameter = programDescription != null ?
                new ObjectParameter("programDescription", programDescription) :
                new ObjectParameter("programDescription", typeof(string));

            var programCodeParameter = programCode != null ?
                new ObjectParameter("programCode", programCode) :
                new ObjectParameter("programCode", typeof(string));

            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));

            var isAuditedParameter = isAudited.HasValue ?
                new ObjectParameter("isAudited", isAudited) :
                new ObjectParameter("isAudited", typeof(bool));

            var isGroupParameter = isGroup.HasValue ?
                new ObjectParameter("isGroup", isGroup) :
                new ObjectParameter("isGroup", typeof(bool));

            var isServiceGuaranteedParameter = isServiceGuaranteed.HasValue ?
                new ObjectParameter("isServiceGuaranteed", isServiceGuaranteed) :
                new ObjectParameter("isServiceGuaranteed", typeof(bool));

            var isWebRegistrationEnabledParameter = isWebRegistrationEnabled.HasValue ?
                new ObjectParameter("isWebRegistrationEnabled", isWebRegistrationEnabled) :
                new ObjectParameter("isWebRegistrationEnabled", typeof(bool));

            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("modifiedBy", modifiedBy) :
                new ObjectParameter("modifiedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveProgramManagementInformation", programIDParameter, parentProgramIDParameter, programNameParameter, programDescriptionParameter, programCodeParameter, isActiveParameter, isAuditedParameter, isGroupParameter, isServiceGuaranteedParameter, isWebRegistrationEnabledParameter, modifiedByParameter);
        }

        public virtual ObjectResult<ProgramManagementServiceCategoriesList_Result> GetProgramManagementServiceCategoriesList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementServiceCategoriesList_Result>("GetProgramManagementServiceCategoriesList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<ProgramManagementProgramServiceCategory_Result> GetProgramManagementProgramServiceCategory(Nullable<int> programServiceCategoryId)
        {
            var programServiceCategoryIdParameter = programServiceCategoryId.HasValue ?
                new ObjectParameter("programServiceCategoryId", programServiceCategoryId) :
                new ObjectParameter("programServiceCategoryId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementProgramServiceCategory_Result>("GetProgramManagementProgramServiceCategory", programServiceCategoryIdParameter);
        }

        public virtual ObjectResult<CurrentUserForEvent_Result> GetCurrentUserForEvent(Nullable<int> eventLogID, Nullable<int> eventSubscriptionID)
        {
            var eventLogIDParameter = eventLogID.HasValue ?
                new ObjectParameter("eventLogID", eventLogID) :
                new ObjectParameter("eventLogID", typeof(int));

            var eventSubscriptionIDParameter = eventSubscriptionID.HasValue ?
                new ObjectParameter("eventSubscriptionID", eventSubscriptionID) :
                new ObjectParameter("eventSubscriptionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CurrentUserForEvent_Result>("GetCurrentUserForEvent", eventLogIDParameter, eventSubscriptionIDParameter);
        }

        public virtual ObjectResult<ProgramManagementVehicleTypesList_Result> GetProgramManagementVehicleTypes(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementVehicleTypesList_Result>("GetProgramManagementVehicleTypes", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<ProgramVehicleTypeDetails_Result> GetProgramVehicleTypeDetails(Nullable<int> programVehicleTypeId)
        {
            var programVehicleTypeIdParameter = programVehicleTypeId.HasValue ?
                new ObjectParameter("programVehicleTypeId", programVehicleTypeId) :
                new ObjectParameter("programVehicleTypeId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramVehicleTypeDetails_Result>("GetProgramVehicleTypeDetails", programVehicleTypeIdParameter);
        }

        public virtual int SaveProgramVehicleType(Nullable<int> programVehicleId, Nullable<int> vehicleTypeID, Nullable<int> maxAllowed, Nullable<bool> isActive, Nullable<bool> isAdd, Nullable<int> programID)
        {
            var programVehicleIdParameter = programVehicleId.HasValue ?
                new ObjectParameter("programVehicleId", programVehicleId) :
                new ObjectParameter("programVehicleId", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            var maxAllowedParameter = maxAllowed.HasValue ?
                new ObjectParameter("maxAllowed", maxAllowed) :
                new ObjectParameter("maxAllowed", typeof(int));

            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));

            var isAddParameter = isAdd.HasValue ?
                new ObjectParameter("isAdd", isAdd) :
                new ObjectParameter("isAdd", typeof(bool));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveProgramVehicleType", programVehicleIdParameter, vehicleTypeIDParameter, maxAllowedParameter, isActiveParameter, isAddParameter, programIDParameter);
        }

        public virtual int SaveProgramManagementServiceCategoryInformation(Nullable<int> id, Nullable<int> programID, Nullable<int> productCategoryID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, Nullable<int> sequence, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("productCategoryID", productCategoryID) :
                new ObjectParameter("productCategoryID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("sequence", sequence) :
                new ObjectParameter("sequence", typeof(int));

            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveProgramManagementServiceCategoryInformation", idParameter, programIDParameter, productCategoryIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter, sequenceParameter, isActiveParameter);
        }

        public virtual int DeleteProgramManagementServiceCategoryInformation(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProgramManagementServiceCategoryInformation", idParameter);
        }

        public virtual int DeleteProgramManagementServiceInformation(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProgramManagementServiceInformation", idParameter);
        }

        public virtual int DeleteProgramConfiguration(Nullable<int> programConfigurationId)
        {
            var programConfigurationIdParameter = programConfigurationId.HasValue ?
                new ObjectParameter("programConfigurationId", programConfigurationId) :
                new ObjectParameter("programConfigurationId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProgramConfiguration", programConfigurationIdParameter);
        }

        public virtual int DeleteProgramVehcileType(Nullable<int> programVehicleTypeId)
        {
            var programVehicleTypeIdParameter = programVehicleTypeId.HasValue ?
                new ObjectParameter("programVehicleTypeId", programVehicleTypeId) :
                new ObjectParameter("programVehicleTypeId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProgramVehcileType", programVehicleTypeIdParameter);
        }

        public virtual int LogManualNotificationEvent(string eventSource, string sessionID, string message, string createBy, Nullable<int> recipientTypeID, Nullable<int> autoCloseDelay, string toUserOrRoleIDs)
        {
            var eventSourceParameter = eventSource != null ?
                new ObjectParameter("eventSource", eventSource) :
                new ObjectParameter("eventSource", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));

            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));

            var recipientTypeIDParameter = recipientTypeID.HasValue ?
                new ObjectParameter("recipientTypeID", recipientTypeID) :
                new ObjectParameter("recipientTypeID", typeof(int));

            var autoCloseDelayParameter = autoCloseDelay.HasValue ?
                new ObjectParameter("autoCloseDelay", autoCloseDelay) :
                new ObjectParameter("autoCloseDelay", typeof(int));

            var toUserOrRoleIDsParameter = toUserOrRoleIDs != null ?
                new ObjectParameter("toUserOrRoleIDs", toUserOrRoleIDs) :
                new ObjectParameter("toUserOrRoleIDs", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogManualNotificationEvent", eventSourceParameter, sessionIDParameter, messageParameter, createByParameter, recipientTypeIDParameter, autoCloseDelayParameter, toUserOrRoleIDsParameter);
        }

        public virtual ObjectResult<UsersOrRolesForNotification_Result> GetUsersOrRolesForNotification(Nullable<int> recipientTypeID)
        {
            var recipientTypeIDParameter = recipientTypeID.HasValue ?
                new ObjectParameter("recipientTypeID", recipientTypeID) :
                new ObjectParameter("recipientTypeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersOrRolesForNotification_Result>("GetUsersOrRolesForNotification", recipientTypeIDParameter);
        }

        public virtual ObjectResult<ProgramManagement_List_Result> GetProgramManagement_List(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagement_List_Result>("GetProgramManagement_List", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual int SaveProgramPhoneSystemConfigurationInfoData(Nullable<int> id, Nullable<int> ivrScriptID, Nullable<int> skillSetID, Nullable<int> phoneCompanyID, string inboundNumber, string pilotNumber, Nullable<bool> isshownOnScreen, Nullable<bool> isActive, Nullable<int> programID, string modifiedBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            var ivrScriptIDParameter = ivrScriptID.HasValue ?
                new ObjectParameter("ivrScriptID", ivrScriptID) :
                new ObjectParameter("ivrScriptID", typeof(int));

            var skillSetIDParameter = skillSetID.HasValue ?
                new ObjectParameter("skillSetID", skillSetID) :
                new ObjectParameter("skillSetID", typeof(int));

            var phoneCompanyIDParameter = phoneCompanyID.HasValue ?
                new ObjectParameter("phoneCompanyID", phoneCompanyID) :
                new ObjectParameter("phoneCompanyID", typeof(int));

            var inboundNumberParameter = inboundNumber != null ?
                new ObjectParameter("inboundNumber", inboundNumber) :
                new ObjectParameter("inboundNumber", typeof(string));

            var pilotNumberParameter = pilotNumber != null ?
                new ObjectParameter("pilotNumber", pilotNumber) :
                new ObjectParameter("pilotNumber", typeof(string));

            var isshownOnScreenParameter = isshownOnScreen.HasValue ?
                new ObjectParameter("isshownOnScreen", isshownOnScreen) :
                new ObjectParameter("isshownOnScreen", typeof(bool));

            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("modifiedBy", modifiedBy) :
                new ObjectParameter("modifiedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveProgramPhoneSystemConfigurationInfoData", idParameter, ivrScriptIDParameter, skillSetIDParameter, phoneCompanyIDParameter, inboundNumberParameter, pilotNumberParameter, isshownOnScreenParameter, isActiveParameter, programIDParameter, modifiedByParameter);
        }

        public virtual ObjectResult<NotificationHistory_Result> GetNotificationHistory(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotificationHistory_Result>("GetNotificationHistory", userNameParameter);
        }

        public virtual ObjectResult<ProgramManagementProgramDataItemList_Result> GetProgramManagementProgramDataItemList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementProgramDataItemList_Result>("GetProgramManagementProgramDataItemList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual int ProgramManagementSaveDataItemInformation(Nullable<int> id, Nullable<int> programID, Nullable<int> controlTypeID, Nullable<int> dataTypeID, string name, string screenName, string label, Nullable<int> maxLength, Nullable<int> sequence, Nullable<bool> isRequired, Nullable<bool> isActive, string currentUser)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var controlTypeIDParameter = controlTypeID.HasValue ?
                new ObjectParameter("controlTypeID", controlTypeID) :
                new ObjectParameter("controlTypeID", typeof(int));

            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("dataTypeID", dataTypeID) :
                new ObjectParameter("dataTypeID", typeof(int));

            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));

            var screenNameParameter = screenName != null ?
                new ObjectParameter("screenName", screenName) :
                new ObjectParameter("screenName", typeof(string));

            var labelParameter = label != null ?
                new ObjectParameter("label", label) :
                new ObjectParameter("label", typeof(string));

            var maxLengthParameter = maxLength.HasValue ?
                new ObjectParameter("maxLength", maxLength) :
                new ObjectParameter("maxLength", typeof(int));

            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("sequence", sequence) :
                new ObjectParameter("sequence", typeof(int));

            var isRequiredParameter = isRequired.HasValue ?
                new ObjectParameter("isRequired", isRequired) :
                new ObjectParameter("isRequired", typeof(bool));

            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProgramManagementSaveDataItemInformation", idParameter, programIDParameter, controlTypeIDParameter, dataTypeIDParameter, nameParameter, screenNameParameter, labelParameter, maxLengthParameter, sequenceParameter, isRequiredParameter, isActiveParameter, currentUserParameter);
        }

        public virtual int ProgramManagementDeleteDataItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProgramManagementDeleteDataItem", idParameter);
        }

        public virtual ObjectResult<DistinctVehicleTypesforProgram_Result> GetDistinctVehicleTypesforProgram(Nullable<int> programId, Nullable<int> programVehicleTypeId)
        {
            var programIdParameter = programId.HasValue ?
                new ObjectParameter("programId", programId) :
                new ObjectParameter("programId", typeof(int));

            var programVehicleTypeIdParameter = programVehicleTypeId.HasValue ?
                new ObjectParameter("programVehicleTypeId", programVehicleTypeId) :
                new ObjectParameter("programVehicleTypeId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistinctVehicleTypesforProgram_Result>("GetDistinctVehicleTypesforProgram", programIdParameter, programVehicleTypeIdParameter);
        }

        public virtual ObjectResult<ProgramCoverageInformationList_Result> GetProgramCoverageInformationList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramCoverageInformationList_Result>("GetProgramCoverageInformationList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual ObjectResult<GetServiceFacilitySelection_Result> GetServiceFacilitySelection(Nullable<int> programID, Nullable<decimal> serviceLocationLatitude, Nullable<decimal> serviceLocationLongitude, string productList, Nullable<int> searchRadiusMiles)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var serviceLocationLatitudeParameter = serviceLocationLatitude.HasValue ?
                new ObjectParameter("ServiceLocationLatitude", serviceLocationLatitude) :
                new ObjectParameter("ServiceLocationLatitude", typeof(decimal));

            var serviceLocationLongitudeParameter = serviceLocationLongitude.HasValue ?
                new ObjectParameter("ServiceLocationLongitude", serviceLocationLongitude) :
                new ObjectParameter("ServiceLocationLongitude", typeof(decimal));

            var productListParameter = productList != null ?
                new ObjectParameter("ProductList", productList) :
                new ObjectParameter("ProductList", typeof(string));

            var searchRadiusMilesParameter = searchRadiusMiles.HasValue ?
                new ObjectParameter("SearchRadiusMiles", searchRadiusMiles) :
                new ObjectParameter("SearchRadiusMiles", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceFacilitySelection_Result>("GetServiceFacilitySelection", programIDParameter, serviceLocationLatitudeParameter, serviceLocationLongitudeParameter, productListParameter, searchRadiusMilesParameter);
        }

        public virtual int UpdateVendorLocationDetails(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVendorLocationDetails", serviceRequestIDParameter);
        }

        public virtual ObjectResult<VerifyProgramServiceEventLimit_Result> GetVerifyProgramServiceEventLimit(Nullable<int> serviceRequestID, Nullable<int> programID, Nullable<int> productCategoryID, Nullable<int> productID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, Nullable<int> secondaryCategoryID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var secondaryCategoryIDParameter = secondaryCategoryID.HasValue ?
                new ObjectParameter("SecondaryCategoryID", secondaryCategoryID) :
                new ObjectParameter("SecondaryCategoryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerifyProgramServiceEventLimit_Result>("GetVerifyProgramServiceEventLimit", serviceRequestIDParameter, programIDParameter, productCategoryIDParameter, productIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter, secondaryCategoryIDParameter);
        }

        public virtual ObjectResult<VerifyProgramServiceBenefit_Result> GetVerifyProgramServiceBenefit(Nullable<int> programID, Nullable<int> productCategoryID, Nullable<int> vehicleCategoryID, Nullable<int> vehicleTypeID, Nullable<int> secondaryCategoryID, Nullable<int> serviceRequestID, Nullable<int> productID, Nullable<bool> isPrimaryOverride)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("VehicleTypeID", vehicleTypeID) :
                new ObjectParameter("VehicleTypeID", typeof(int));

            var secondaryCategoryIDParameter = secondaryCategoryID.HasValue ?
                new ObjectParameter("SecondaryCategoryID", secondaryCategoryID) :
                new ObjectParameter("SecondaryCategoryID", typeof(int));

            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var isPrimaryOverrideParameter = isPrimaryOverride.HasValue ?
                new ObjectParameter("IsPrimaryOverride", isPrimaryOverride) :
                new ObjectParameter("IsPrimaryOverride", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerifyProgramServiceBenefit_Result>("GetVerifyProgramServiceBenefit", programIDParameter, productCategoryIDParameter, vehicleCategoryIDParameter, vehicleTypeIDParameter, secondaryCategoryIDParameter, serviceRequestIDParameter, productIDParameter, isPrimaryOverrideParameter);
        }

        public virtual ObjectResult<string> GetVendorIndicators(string entityName, Nullable<int> entityID)
        {
            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("entityID", entityID) :
                new ObjectParameter("entityID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetVendorIndicators", entityNameParameter, entityIDParameter);
        }

        public virtual ObjectResult<ProgramManagementProgramServiceEventLimitList_Result> GetProgramManagementProgramServiceEventLimitList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> programID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramManagementProgramServiceEventLimitList_Result>("GetProgramManagementProgramServiceEventLimitList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, programIDParameter);
        }

        public virtual int ProgramManagementDeleteProgramServiceEventLimit(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProgramManagementDeleteProgramServiceEventLimit", idParameter);
        }

        public virtual int SaveProgramManagementServiceEventLimitInformation(Nullable<int> id, Nullable<int> programID, Nullable<int> productCategoryID, Nullable<int> productID, Nullable<int> vehicleTypeID, Nullable<int> vehicleCategoryID, string description, Nullable<int> limit, Nullable<int> limitDuration, string limitDurationUOM, string storedProcedureName, string currentUser, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("productCategoryID", productCategoryID) :
                new ObjectParameter("productCategoryID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));

            var vehicleTypeIDParameter = vehicleTypeID.HasValue ?
                new ObjectParameter("vehicleTypeID", vehicleTypeID) :
                new ObjectParameter("vehicleTypeID", typeof(int));

            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("vehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("vehicleCategoryID", typeof(int));

            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));

            var limitParameter = limit.HasValue ?
                new ObjectParameter("limit", limit) :
                new ObjectParameter("limit", typeof(int));

            var limitDurationParameter = limitDuration.HasValue ?
                new ObjectParameter("limitDuration", limitDuration) :
                new ObjectParameter("limitDuration", typeof(int));

            var limitDurationUOMParameter = limitDurationUOM != null ?
                new ObjectParameter("limitDurationUOM", limitDurationUOM) :
                new ObjectParameter("limitDurationUOM", typeof(string));

            var storedProcedureNameParameter = storedProcedureName != null ?
                new ObjectParameter("storedProcedureName", storedProcedureName) :
                new ObjectParameter("storedProcedureName", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveProgramManagementServiceEventLimitInformation", idParameter, programIDParameter, productCategoryIDParameter, productIDParameter, vehicleTypeIDParameter, vehicleCategoryIDParameter, descriptionParameter, limitParameter, limitDurationParameter, limitDurationUOMParameter, storedProcedureNameParameter, currentUserParameter, isActiveParameter);
        }

        public virtual ObjectResult<ProductForProductCategory_Result> GetProductForProductCategory(Nullable<int> productCategoryID)
        {
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("productCategoryID", productCategoryID) :
                new ObjectParameter("productCategoryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductForProductCategory_Result>("GetProductForProductCategory", productCategoryIDParameter);
        }

        public virtual ObjectResult<QuestionAnswer_ServiceRequest_Result> GetQuestionAnswerServiceRequest(Nullable<int> serviceRequest, string sourceSystemName)
        {
            var serviceRequestParameter = serviceRequest.HasValue ?
                new ObjectParameter("serviceRequest", serviceRequest) :
                new ObjectParameter("serviceRequest", typeof(int));

            var sourceSystemNameParameter = sourceSystemName != null ?
                new ObjectParameter("sourceSystemName", sourceSystemName) :
                new ObjectParameter("sourceSystemName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QuestionAnswer_ServiceRequest_Result>("GetQuestionAnswerServiceRequest", serviceRequestParameter, sourceSystemNameParameter);
        }

        public virtual ObjectResult<SecurablesList_Result> GetSecurablesList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SecurablesList_Result>("GetSecurablesList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<UsersListForRole_Result> GetUsersListForRole(Nullable<System.Guid> roleID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersListForRole_Result>("GetUsersListForRole", roleIDParameter);
        }

        public virtual ObjectResult<SecurbalePermissions_Result> GetSecurbalePermissions(Nullable<int> securableID)
        {
            var securableIDParameter = securableID.HasValue ?
                new ObjectParameter("SecurableID", securableID) :
                new ObjectParameter("SecurableID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SecurbalePermissions_Result>("GetSecurbalePermissions", securableIDParameter);
        }

        public virtual ObjectResult<MemberManagementSRHistory_Result> GetMemberManagementSRHistory(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> memberID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberManagementSRHistory_Result>("GetMemberManagementSRHistory", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, memberIDParameter);
        }

        public virtual ObjectResult<MemberShipManagementSRHistory_Result> GetMemberShipManagementSRHistory(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> membershipID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("MembershipID", membershipID) :
                new ObjectParameter("MembershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberShipManagementSRHistory_Result>("GetMemberShipManagementSRHistory", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, membershipIDParameter);
        }

        public virtual ObjectResult<GetUnprocessedEventLogs_Result> GetUnprocessedEventLogs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnprocessedEventLogs_Result>("GetUnprocessedEventLogs");
        }

        public virtual ObjectResult<Message> GetMessage(string messageScope)
        {
            var messageScopeParameter = messageScope != null ?
                new ObjectParameter("messageScope", messageScope) :
                new ObjectParameter("messageScope", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Message>("GetMessage", messageScopeParameter);
        }

        public virtual ObjectResult<Message> GetMessage(string messageScope, MergeOption mergeOption)
        {
            var messageScopeParameter = messageScope != null ?
                new ObjectParameter("messageScope", messageScope) :
                new ObjectParameter("messageScope", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Message>("GetMessage", mergeOption, messageScopeParameter);
        }

        public virtual ObjectResult<MemberProducts_Result> GetMemberProducts(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> memberID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberProducts_Result>("GetMemberProducts", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, memberIDParameter);
        }

        public virtual ObjectResult<MemberProductsUsingCategory_Result> GetMemberProductsUsingCategory(Nullable<int> memberID, Nullable<int> productCategoryID, string vIN)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("productCategoryID", productCategoryID) :
                new ObjectParameter("productCategoryID", typeof(int));

            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberProductsUsingCategory_Result>("GetMemberProductsUsingCategory", memberIDParameter, productCategoryIDParameter, vINParameter);
        }

        public virtual ObjectResult<MessageList_Result> GetMessageList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageList_Result>("GetMessageList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<EventLogList_Result> GetEventLogList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventLogList_Result>("GetEventLogList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<QAConcernTypeList_Result> GetQAConcernTypeList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QAConcernTypeList_Result>("GetQAConcernTypeList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<QAConcernList_Result> GetQAConcernList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> concernTypeID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var concernTypeIDParameter = concernTypeID.HasValue ?
                new ObjectParameter("concernTypeID", concernTypeID) :
                new ObjectParameter("concernTypeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QAConcernList_Result>("GetQAConcernList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, concernTypeIDParameter);
        }

        public virtual ObjectResult<CoachingConcerns_List_Result> GetCoachingConcernsList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CoachingConcerns_List_Result>("GetCoachingConcernsList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<Nullable<bool>> CanNotifyInsuranceExpiration(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("CanNotifyInsuranceExpiration", vendorIDParameter);
        }

        public virtual ObjectResult<POIssueHagertyEventMailTag_Result> GetPOIssueHagertyEventMailTag(Nullable<int> pOID)
        {
            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POIssueHagertyEventMailTag_Result>("GetPOIssueHagertyEventMailTag", pOIDParameter);
        }

        public virtual int UpdateContactLogLinkForPurchaseOrderIssuing(Nullable<int> serviceRequestID, Nullable<int> pOID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContactLogLinkForPurchaseOrderIssuing", serviceRequestIDParameter, pOIDParameter);
        }

        public virtual ObjectResult<CaptureClaimNumberDetailsForSR_Result> GetCaptureClaimNumberDetailsForSR(Nullable<int> serviceRequestId)
        {
            var serviceRequestIdParameter = serviceRequestId.HasValue ?
                new ObjectParameter("serviceRequestId", serviceRequestId) :
                new ObjectParameter("serviceRequestId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CaptureClaimNumberDetailsForSR_Result>("GetCaptureClaimNumberDetailsForSR", serviceRequestIdParameter);
        }

        public virtual ObjectResult<DoesEventLogLinkExists_Result> DoesEventLogLinkExists(Nullable<int> recordId, string entityName, string eventName)
        {
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("recordId", recordId) :
                new ObjectParameter("recordId", typeof(int));

            var entityNameParameter = entityName != null ?
                new ObjectParameter("entityName", entityName) :
                new ObjectParameter("entityName", typeof(string));

            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoesEventLogLinkExists_Result>("DoesEventLogLinkExists", recordIdParameter, entityNameParameter, eventNameParameter);
        }

        public virtual ObjectResult<VendorPortalServicesList_Result> GetVendorPortalServicesList(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorPortalServicesList_Result>("GetVendorPortalServicesList", vendorIDParameter);
        }

        public virtual ObjectResult<ProgramDataItemAnswers_Result> GetProgramDataItemAnswersGet(Nullable<int> programID, string screenName)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var screenNameParameter = screenName != null ?
                new ObjectParameter("screenName", screenName) :
                new ObjectParameter("screenName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramDataItemAnswers_Result>("GetProgramDataItemAnswersGet", programIDParameter, screenNameParameter);
        }

        public virtual ObjectResult<ProgramDataItemsForProgram_Result> GetProgramDataItemsForProgramGet(Nullable<int> programID, string screenName)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var screenNameParameter = screenName != null ?
                new ObjectParameter("screenName", screenName) :
                new ObjectParameter("screenName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramDataItemsForProgram_Result>("GetProgramDataItemsForProgramGet", programIDParameter, screenNameParameter);
        }

        public virtual ObjectResult<ServiceTech_RepairLocationDetails> GetServiceTechRepairLocationDetails(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceTech_RepairLocationDetails>("GetServiceTechRepairLocationDetails", serviceRequestIDParameter);
        }

        public virtual ObjectResult<IsPreferredVendorByProduct_Result> GetIsPreferredVendorByProduct(Nullable<int> vendorID, Nullable<int> productID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IsPreferredVendorByProduct_Result>("GetIsPreferredVendorByProduct", vendorIDParameter, productIDParameter);
        }

        public virtual ObjectResult<ServiceTechCallHistory_Result> GetServiceTechCallHistory(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceTechCallHistory_Result>("GetServiceTechCallHistory", serviceRequestIDParameter);
        }

        public virtual ObjectResult<DashboardPortlets_Result> GetDashboardPortlets(Nullable<System.Guid> loggedInUserID)
        {
            var loggedInUserIDParameter = loggedInUserID.HasValue ?
                new ObjectParameter("loggedInUserID", loggedInUserID) :
                new ObjectParameter("loggedInUserID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardPortlets_Result>("GetDashboardPortlets", loggedInUserIDParameter);
        }

        public virtual ObjectResult<VendorPortalLocationServicesList_Result> GetVendorPortalLocationServicesList(Nullable<int> vendorID, Nullable<int> vendorLocationID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            var vendorLocationIDParameter = vendorLocationID.HasValue ?
                new ObjectParameter("VendorLocationID", vendorLocationID) :
                new ObjectParameter("VendorLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorPortalLocationServicesList_Result>("GetVendorPortalLocationServicesList", vendorIDParameter, vendorLocationIDParameter);
        }

        public virtual ObjectResult<SRHasAccountingInvoiceBatchID_Result> GetSRHasAccountingInvoiceBatchID(Nullable<int> serviceRequestId)
        {
            var serviceRequestIdParameter = serviceRequestId.HasValue ?
                new ObjectParameter("serviceRequestId", serviceRequestId) :
                new ObjectParameter("serviceRequestId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SRHasAccountingInvoiceBatchID_Result>("GetSRHasAccountingInvoiceBatchID", serviceRequestIdParameter);
        }

        public virtual ObjectResult<MemberShipProducts_Result> GetMemberShipProducts(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> membershipID)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("MembershipID", membershipID) :
                new ObjectParameter("MembershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberShipProducts_Result>("GetMemberShipProducts", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, membershipIDParameter);
        }

        public virtual ObjectResult<SearchMembersForAPI_Result> SearchMembersForAPI(string customerID, string customerGroupID, Nullable<int> internalMemberID, string lastName, string firstName, string vehicleVIN, string userName)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(string));

            var customerGroupIDParameter = customerGroupID != null ?
                new ObjectParameter("customerGroupID", customerGroupID) :
                new ObjectParameter("customerGroupID", typeof(string));

            var internalMemberIDParameter = internalMemberID.HasValue ?
                new ObjectParameter("internalMemberID", internalMemberID) :
                new ObjectParameter("internalMemberID", typeof(int));

            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));

            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));

            var vehicleVINParameter = vehicleVIN != null ?
                new ObjectParameter("vehicleVIN", vehicleVIN) :
                new ObjectParameter("vehicleVIN", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMembersForAPI_Result>("SearchMembersForAPI", customerIDParameter, customerGroupIDParameter, internalMemberIDParameter, lastNameParameter, firstNameParameter, vehicleVINParameter, userNameParameter);
        }

        public virtual ObjectResult<APIServiceRequest_Result> GetAPIServiceRequest(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<APIServiceRequest_Result>("GetAPIServiceRequest", serviceRequestIDParameter);
        }

        public virtual ObjectResult<APIServiceRequestList_Result> GetAPIServiceRequestList(string memberID, string membershipID, Nullable<int> programID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.Guid> userID, string sourceSystem)
        {
            var memberIDParameter = memberID != null ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(string));

            var membershipIDParameter = membershipID != null ?
                new ObjectParameter("MembershipID", membershipID) :
                new ObjectParameter("MembershipID", typeof(string));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));

            var sourceSystemParameter = sourceSystem != null ?
                new ObjectParameter("sourceSystem", sourceSystem) :
                new ObjectParameter("sourceSystem", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<APIServiceRequestList_Result>("GetAPIServiceRequestList", memberIDParameter, membershipIDParameter, programIDParameter, startDateParameter, endDateParameter, userIDParameter, sourceSystemParameter);
        }

        public virtual ObjectResult<GetRecentCallDetails_Result> GetRecentCallDetails(Nullable<int> purchaseOrderID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("purchaseOrderID", purchaseOrderID) :
                new ObjectParameter("purchaseOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRecentCallDetails_Result>("GetRecentCallDetails", purchaseOrderIDParameter);
        }

        public virtual ObjectResult<ClientRepList_Result> GetClientRepList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientRepList_Result>("GetClientRepList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<EventSubscriptionRecipient> GetRecipientsForDesktopNotification(Nullable<long> eventLogID, Nullable<int> eventSubscriptionRecipientID)
        {
            var eventLogIDParameter = eventLogID.HasValue ?
                new ObjectParameter("eventLogID", eventLogID) :
                new ObjectParameter("eventLogID", typeof(long));

            var eventSubscriptionRecipientIDParameter = eventSubscriptionRecipientID.HasValue ?
                new ObjectParameter("eventSubscriptionRecipientID", eventSubscriptionRecipientID) :
                new ObjectParameter("eventSubscriptionRecipientID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventSubscriptionRecipient>("GetRecipientsForDesktopNotification", eventLogIDParameter, eventSubscriptionRecipientIDParameter);
        }

        public virtual ObjectResult<EventSubscriptionRecipient> GetRecipientsForDesktopNotification(Nullable<long> eventLogID, Nullable<int> eventSubscriptionRecipientID, MergeOption mergeOption)
        {
            var eventLogIDParameter = eventLogID.HasValue ?
                new ObjectParameter("eventLogID", eventLogID) :
                new ObjectParameter("eventLogID", typeof(long));

            var eventSubscriptionRecipientIDParameter = eventSubscriptionRecipientID.HasValue ?
                new ObjectParameter("eventSubscriptionRecipientID", eventSubscriptionRecipientID) :
                new ObjectParameter("eventSubscriptionRecipientID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventSubscriptionRecipient>("GetRecipientsForDesktopNotification", mergeOption, eventLogIDParameter, eventSubscriptionRecipientIDParameter);
        }

        public virtual ObjectResult<EventSubscriptionRecipient> GetEventSubscriptionRecipientsForEventLog(Nullable<long> eventLogID)
        {
            var eventLogIDParameter = eventLogID.HasValue ?
                new ObjectParameter("eventLogID", eventLogID) :
                new ObjectParameter("eventLogID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventSubscriptionRecipient>("GetEventSubscriptionRecipientsForEventLog", eventLogIDParameter);
        }

        public virtual ObjectResult<EventSubscriptionRecipient> GetEventSubscriptionRecipientsForEventLog(Nullable<long> eventLogID, MergeOption mergeOption)
        {
            var eventLogIDParameter = eventLogID.HasValue ?
                new ObjectParameter("eventLogID", eventLogID) :
                new ObjectParameter("eventLogID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventSubscriptionRecipient>("GetEventSubscriptionRecipientsForEventLog", mergeOption, eventLogIDParameter);
        }

        public virtual ObjectResult<Vendor_By_Number_Phone_Get_Result> GetVendorByNumberAndPhone(string vendorNumber, string phoneNumber)
        {
            var vendorNumberParameter = vendorNumber != null ?
                new ObjectParameter("vendorNumber", vendorNumber) :
                new ObjectParameter("vendorNumber", typeof(string));

            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_By_Number_Phone_Get_Result>("GetVendorByNumberAndPhone", vendorNumberParameter, phoneNumberParameter);
        }

        public virtual int InsertRateScheduleAndRatesForContract(Nullable<int> contractID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("contractID", contractID) :
                new ObjectParameter("contractID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRateScheduleAndRatesForContract", contractIDParameter);
        }

        public virtual ObjectResult<LatestContractAndTAForVendor_Result> GetLatestContractAndTAForVendor(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LatestContractAndTAForVendor_Result>("GetLatestContractAndTAForVendor", vendorIDParameter);
        }

        public virtual ObjectResult<RoadsideServices_Result> GetRoadsideServices(Nullable<int> programID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoadsideServices_Result>("GetRoadsideServices", programIDParameter);
        }

        public virtual int UpdateServiceRequestStatusAndNotes(Nullable<int> serviceRequestID, string sourceSystem, string serviceRequestStatus, string nextAction, Nullable<System.DateTime> nextActionScheduledDate, string nextActionAssignedToUser, string note, string userName)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var sourceSystemParameter = sourceSystem != null ?
                new ObjectParameter("sourceSystem", sourceSystem) :
                new ObjectParameter("sourceSystem", typeof(string));

            var serviceRequestStatusParameter = serviceRequestStatus != null ?
                new ObjectParameter("serviceRequestStatus", serviceRequestStatus) :
                new ObjectParameter("serviceRequestStatus", typeof(string));

            var nextActionParameter = nextAction != null ?
                new ObjectParameter("nextAction", nextAction) :
                new ObjectParameter("nextAction", typeof(string));

            var nextActionScheduledDateParameter = nextActionScheduledDate.HasValue ?
                new ObjectParameter("nextActionScheduledDate", nextActionScheduledDate) :
                new ObjectParameter("nextActionScheduledDate", typeof(System.DateTime));

            var nextActionAssignedToUserParameter = nextActionAssignedToUser != null ?
                new ObjectParameter("nextActionAssignedToUser", nextActionAssignedToUser) :
                new ObjectParameter("nextActionAssignedToUser", typeof(string));

            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServiceRequestStatusAndNotes", serviceRequestIDParameter, sourceSystemParameter, serviceRequestStatusParameter, nextActionParameter, nextActionScheduledDateParameter, nextActionAssignedToUserParameter, noteParameter, userNameParameter);
        }

        public virtual ObjectResult<ServiceRequestStatusTimeline_Result> GetServiceRequestStatusTimeline(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceRequestStatusTimeline_Result>("GetServiceRequestStatusTimeline", serviceRequestIDParameter);
        }

        public virtual ObjectResult<VendorLocationsListForVendorNumber_Result> GetVendorLocationsListForVendorNumber(string vendorNumber)
        {
            var vendorNumberParameter = vendorNumber != null ?
                new ObjectParameter("vendorNumber", vendorNumber) :
                new ObjectParameter("vendorNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLocationsListForVendorNumber_Result>("GetVendorLocationsListForVendorNumber", vendorNumberParameter);
        }

        public virtual ObjectResult<ServiceRequestEstimate_Result> GetServiceRequestEstimate(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceRequestEstimate_Result>("GetServiceRequestEstimate", serviceRequestIDParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> GetPOThresholdPercentage(Nullable<int> vehicleCategoryID, Nullable<int> productCategoryID, Nullable<int> vendorID, Nullable<int> clientID, Nullable<int> programID)
        {
            var vehicleCategoryIDParameter = vehicleCategoryID.HasValue ?
                new ObjectParameter("VehicleCategoryID", vehicleCategoryID) :
                new ObjectParameter("VehicleCategoryID", typeof(int));

            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));

            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));

            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetPOThresholdPercentage", vehicleCategoryIDParameter, productCategoryIDParameter, vendorIDParameter, clientIDParameter, programIDParameter);
        }

        public virtual ObjectResult<UserNameByPIN_Result> GetUserNameByPIN(Nullable<int> pIN)
        {
            var pINParameter = pIN.HasValue ?
                new ObjectParameter("PIN", pIN) :
                new ObjectParameter("PIN", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserNameByPIN_Result>("GetUserNameByPIN", pINParameter);
        }

        public virtual ObjectResult<MemberPaymentMethodList_Result> GetMemberPaymentMethod(Nullable<int> memberID, Nullable<int> membershipID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("memberID", memberID) :
                new ObjectParameter("memberID", typeof(int));

            var membershipIDParameter = membershipID.HasValue ?
                new ObjectParameter("membershipID", membershipID) :
                new ObjectParameter("membershipID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberPaymentMethodList_Result>("GetMemberPaymentMethod", memberIDParameter, membershipIDParameter);
        }

        public virtual int LogEventForServiceRequestStatus(string eventName, Nullable<int> serviceRequestID, string currentUser, string eventData, string sessionID, string eventSource, Nullable<int> poID)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));

            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));

            var eventDataParameter = eventData != null ?
                new ObjectParameter("eventData", eventData) :
                new ObjectParameter("eventData", typeof(string));

            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));

            var eventSourceParameter = eventSource != null ?
                new ObjectParameter("eventSource", eventSource) :
                new ObjectParameter("eventSource", typeof(string));

            var poIDParameter = poID.HasValue ?
                new ObjectParameter("poID", poID) :
                new ObjectParameter("poID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogEventForServiceRequestStatus", eventNameParameter, serviceRequestIDParameter, currentUserParameter, eventDataParameter, sessionIDParameter, eventSourceParameter, poIDParameter);
        }

        public virtual ObjectResult<ServiceElibilityMessages_Result> GetServiceElibilityMessages(Nullable<int> programID, string sourceSystem)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("programID", programID) :
                new ObjectParameter("programID", typeof(int));

            var sourceSystemParameter = sourceSystem != null ?
                new ObjectParameter("sourceSystem", sourceSystem) :
                new ObjectParameter("sourceSystem", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceElibilityMessages_Result>("GetServiceElibilityMessages", programIDParameter, sourceSystemParameter);
        }

        public virtual ObjectResult<ContactLogActionsForServiceRequest_Result> GetContactLogActionsForServiceRequest(Nullable<int> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContactLogActionsForServiceRequest_Result>("GetContactLogActionsForServiceRequest", serviceRequestIDParameter);
        }

        [DbFunction("DMSEntities", "GetProgramDispatchNumber")]
        public virtual IQueryable<ProgramDispatchNumber_Result> GetProgramDispatchNumber(Nullable<int> programID)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProgramDispatchNumber_Result>("[DMSEntities].[GetProgramDispatchNumber](@ProgramID)", programIDParameter);
        }

        public virtual ObjectResult<dms_CustomerFeedback_list_Result> GetCustomerFeedbackList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dms_CustomerFeedback_list_Result>("GetCustomerFeedbackList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<CustomerFeedbackActivityList_Result> GetCustomerFeedbackActivityList(Nullable<int> customerFeedbackID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var customerFeedbackIDParameter = customerFeedbackID.HasValue ?
                new ObjectParameter("CustomerFeedbackID", customerFeedbackID) :
                new ObjectParameter("CustomerFeedbackID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerFeedbackActivityList_Result>("GetCustomerFeedbackActivityList", customerFeedbackIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<GetCustomerFeedbackHeaderBySROrPO_Result> GetCustomerFeedbackHeaderBySROrPO(string numberType, string numberValue)
        {
            var numberTypeParameter = numberType != null ?
                new ObjectParameter("numberType", numberType) :
                new ObjectParameter("numberType", typeof(string));

            var numberValueParameter = numberValue != null ?
                new ObjectParameter("numberValue", numberValue) :
                new ObjectParameter("numberValue", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerFeedbackHeaderBySROrPO_Result>("GetCustomerFeedbackHeaderBySROrPO", numberTypeParameter, numberValueParameter);
        }

        public virtual ObjectResult<GetCustomerFeedbackDetails_Result> GetCustomerFeedbackDetails(Nullable<int> customerFeedbackId, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, string whereClauseXML)
        {
            var customerFeedbackIdParameter = customerFeedbackId.HasValue ?
                new ObjectParameter("customerFeedbackId", customerFeedbackId) :
                new ObjectParameter("customerFeedbackId", typeof(int));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerFeedbackDetails_Result>("GetCustomerFeedbackDetails", customerFeedbackIdParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, whereClauseXMLParameter);
        }

        public virtual ObjectResult<CustomerFeedbackSurveyList_Result> GetCustomerFeedbackSurveyList(string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerFeedbackSurveyList_Result>("GetCustomerFeedbackSurveyList", whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }

        public virtual ObjectResult<dms_Users_By_Appconfig_Role_Setting_Get_Result> GetUsersByAppconfigRoleSetting(string applicationConguration)
        {
            var applicationCongurationParameter = applicationConguration != null ?
                new ObjectParameter("ApplicationConguration", applicationConguration) :
                new ObjectParameter("ApplicationConguration", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dms_Users_By_Appconfig_Role_Setting_Get_Result>("GetUsersByAppconfigRoleSetting", applicationCongurationParameter);
        }

        public virtual ObjectResult<GetCustomerFeedbackGiftCard_Result> GetCustomerFeedbackGiftCard(Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder, string whereClauseXML, Nullable<int> customerFeedbackId)
        {
            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var customerFeedbackIdParameter = customerFeedbackId.HasValue ?
                new ObjectParameter("customerFeedbackId", customerFeedbackId) :
                new ObjectParameter("customerFeedbackId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerFeedbackGiftCard_Result>("GetCustomerFeedbackGiftCard", startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, whereClauseXMLParameter, customerFeedbackIdParameter);
        }

        public virtual ObjectResult<GetUsersByNextActionRoles_Result> GetUsersByNextActionRoles(Nullable<int> nextActionID)
        {
            var nextActionIDParameter = nextActionID.HasValue ?
                new ObjectParameter("nextActionID", nextActionID) :
                new ObjectParameter("nextActionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersByNextActionRoles_Result>("GetUsersByNextActionRoles", nextActionIDParameter);
        }

        public virtual int UpdateCustomerSurvey(Nullable<int> surveyId, string userAction, string sessionId, string loggedInUser, string eventSouce)
        {
            var surveyIdParameter = surveyId.HasValue ?
                new ObjectParameter("surveyId", surveyId) :
                new ObjectParameter("surveyId", typeof(int));

            var userActionParameter = userAction != null ?
                new ObjectParameter("userAction", userAction) :
                new ObjectParameter("userAction", typeof(string));

            var sessionIdParameter = sessionId != null ?
                new ObjectParameter("sessionId", sessionId) :
                new ObjectParameter("sessionId", typeof(string));

            var loggedInUserParameter = loggedInUser != null ?
                new ObjectParameter("loggedInUser", loggedInUser) :
                new ObjectParameter("loggedInUser", typeof(string));

            var eventSouceParameter = eventSouce != null ?
                new ObjectParameter("eventSouce", eventSouce) :
                new ObjectParameter("eventSouce", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerSurvey", surveyIdParameter, userActionParameter, sessionIdParameter, loggedInUserParameter, eventSouceParameter);
        }

        public virtual ObjectResult<dms_activity_list_Result> GetActivityList(Nullable<int> serviceRequestID, string whereClauseXML, Nullable<int> startInd, Nullable<long> endInd, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("serviceRequestID", serviceRequestID) :
                new ObjectParameter("serviceRequestID", typeof(int));

            var whereClauseXMLParameter = whereClauseXML != null ?
                new ObjectParameter("whereClauseXML", whereClauseXML) :
                new ObjectParameter("whereClauseXML", typeof(string));

            var startIndParameter = startInd.HasValue ?
                new ObjectParameter("startInd", startInd) :
                new ObjectParameter("startInd", typeof(int));

            var endIndParameter = endInd.HasValue ?
                new ObjectParameter("endInd", endInd) :
                new ObjectParameter("endInd", typeof(long));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));

            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dms_activity_list_Result>("GetActivityList", serviceRequestIDParameter, whereClauseXMLParameter, startIndParameter, endIndParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
          }

          public virtual int dms_closedloop_status_update(Nullable<int> contactLogID)
          {
              var contactLogIDParameter = contactLogID.HasValue ?
                  new ObjectParameter("contactLogID", contactLogID) :
                  new ObjectParameter("contactLogID", typeof(int));

              return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dms_closedloop_status_update", contactLogIDParameter);
          }
        }
    }

